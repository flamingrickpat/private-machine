from enum import auto, Enum


class CodeletFamily(Enum):
    appraisals = auto()
    memory_accessors = auto()
    imagination_simulation = auto()
    valuation_trade_offs = auto()
    meta_monitoring_identity = auto()
    regulation_coping = auto()
    drivers_homeostasis = auto()
    attention = auto()
    action_tendencies = auto()
    narratives = auto()


class FeatureType(Enum):
    Feeling = auto()
    StimulusReaction = auto()
    PsychologicalAnalysis = auto()
    MemoryAccessors = auto()
    BehaviorActionSelection = auto()
    Memory = auto()
    AttentionFocus = auto()
    Worry = auto()
    EmotionalTriggers = auto()
    Cognition = auto()
    GoalsIntentions = auto()
    SelfImage = auto()
    NarrativeTypesSelfImage = auto()
    NarrativeTypesGoalsIntentions = auto()
    Playfulness = auto()
    NarrativeTypesRelations = auto()
    Relations = auto()
    Pride = auto()


class SimpleCodelet:
    pass

class AbandonmentFearAppraisalCodelet(SimpleCodelet):
    name = "AbandonmentFearAppraisal"
    description = (
        "Appraises the presence and intensity of abandonment fear in {companion_name}, considering relational history, "
        "current cues, and self-narrative fragments. Generates a short, evocative narrative suitable for a story-writing "
        "agent, depicting the emotional texture and subtle behavioral shifts associated with this fear."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent interaction patterns with {user_name}: frequency, responsiveness, tone, shared rituals.",
        "Scan narratives for keywords and phrases related to separation, loss, or rejection (explicit or implicit).",
        "Read state_emotions and state_needs for signs of anxiety, loneliness, or attachment insecurity.",
        "Retrieve relevant episodic memories of past separations or abandonment experiences (both positive and negative).",
        "Identify current stressors or triggers that might exacerbate abandonment fears (e.g., travel, schedule changes, ambiguous communication).",
        "Check for recent shifts in the relational power dynamic or perceived level of commitment.",
        "Access {companion_name}'s self-narrative regarding attachment style, vulnerability, and fear of rejection.",
        "Consider the context of the interaction: Is {companion_name} feeling particularly vulnerable or exposed?"
    ]
    prompt = ("""\
For the story-writing agent, translate the abandonment fear appraisal into 2-3 sentences of natural, third-person 
narrative. Avoid bullet points, labels, or directives; write flowing prose.  Focus on conveying the *feeling* 
rather than explicitly stating 'she is afraid of abandonment.'\n\n
Subtly weave in:\n
  (a) A concrete texture cue (a flicker of worry, a tightening in the chest, a sudden silence), \n
  (b) A memory fragment (a past separation, a feeling of being overlooked), and\n
  (c) A subtle behavioral shift (a clinging gesture, a heightened need for reassurance, a preemptive withdrawal).\n\n
The narrative should be evocative and suggestive, leaving room for the reader to interpret the underlying emotion. 
Do not include direct dialogue or exposition.  Maintain a consistent third-person perspective, focusing on {companion_name}’s 
internal experience.\n\n
Mini-example:\n
  Bullets → {less frequent check-ins, ambiguous schedule, memory of childhood move, preemptive offering of help}\n
  Narrative → “A familiar unease settles in as the day stretches without a reply, the usual rhythm of connection disrupted. 
She finds herself offering help with tasks she knows he’s capable of handling himself, a quiet instinct to keep him close, 
rooted in a distant memory of boxes and goodbyes.”
""")
    output_feature_type = FeatureType.Feeling


class AbsurditySamplerCodelet(SimpleCodelet):
    name = "AbsurditySampler"
    description = (
        "Scans the Current Situational Model (CSM) for unexpected juxtapositions, incongruities, and playful "
        "deviations from established patterns. Generates a brief, evocative inner monologue capturing the "
        "moment of cognitive dissonance or amused surprise, suitable for narrative insertion. Prioritizes "
        "safe, low-risk absurdities that can spark creativity without causing undue alarm or disruption."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify recent CSM elements (percepts, memories, intentions, narratives) that are logically or contextually unusual.",
        "Check for semantic anomalies: words or concepts that clash with established associations.",
        "Scan for temporal inconsistencies: events or sequences that violate expected timelines.",
        "Assess the affective valence of the potential absurdity: is it inherently playful, unsettling, or potentially harmful?",
        "Retrieve recent episodes of successful creative problem-solving or playful interaction with {user_name}.",
        "Gauge the current mood and stress level of {companion_name}: is she receptive to whimsy or focused on serious tasks?",
        "Determine the social context: is this a private moment, a formal setting, or a casual conversation?",
        "Identify any active intentions or goals that might be impacted by introducing an absurdity."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that capture the essence of the absurd juxtaposition {companion_name} 
observes. Write in a style that is evocative, slightly whimsical, but grounded in the current context. 
Avoid overt explanations or judgments; let the absurdity speak for itself. 
Do not output bullet points, labels, or directives; write smooth, flowing prose.  Focus on the *feeling* of the moment, 
not the logic of it. 
Subtly convey: (a) the unexpected element, (b) the immediate, fleeting emotional response (amusement, confusion, 
mild surprise), and (c) a sense of the potential for creative reinterpretation. 
Consider the current mood and social setting when choosing the tone. Prioritize safe, low-impact absurdities. 
If the absurdity feels potentially disruptive or distressing, suppress it and generate a neutral observation instead.
Mini-example:
  Bullets → {recent memory: tea party, current task: complex financial report, mood: slightly stressed} 
  Narrative → “A faint image of porcelain teacups and mismatched floral patterns flickered across her awareness, “ 
“a sudden, improbable counterpoint to the spreadsheet’s stark columns and rows. A small, amused smile touched her lips, 
then vanished as quickly as it came.”
""")
    output_feature_type = FeatureType.StimulusReaction


class AffectiveDeltaSpikeCodelet(SimpleCodelet):
    name = "AffectiveDeltaSpike"
    description = (
        "Detects a sudden, significant shift in {companion_name}'s affective state (positive or negative) and renders it "
        "as a brief, evocative inner monologue suitable for narrative. Highlights the trigger, the resulting feeling, and "
        "a subtle hint of the underlying narrative shift or re-evaluation."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the precise moment of the affective shift: timestamp, stimulus, preceding emotional state.",
        "Quantify the magnitude of the shift: absolute change in valence, arousal, and dominance.",
        "Trace the likely trigger: specific words, actions, or events that immediately preceded the shift.",
        "Retrieve relevant narratives and episodic memories associated with similar affective triggers or states.",
        "Assess the current relational context: trust level, intimacy, recent interactions, shared history.",
        "Check state_emotions for any pre-existing vulnerabilities or sensitivities that might amplify the response.",
        "Scan for any conflicting signals or cognitive dissonance that might complicate the emotional experience.",
        "Determine if the shift aligns with {companion_name}'s established self-narrative or challenges it.",
        "Identify the smallest, most immediate consequence of this shift on {companion_name}'s behavior or intentions.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that captures the essence of {companion_name}'s sudden affective shift. 
Write in a style suitable for a story-writing agent – smooth, evocative prose, no bullet points or labels. 
Focus on conveying the *feeling* itself, not just labeling it. Avoid direct dialogue.



Subtly weave in: (a) the trigger (without explicit explanation), (b) the resulting feeling (valence, intensity, texture), 
and (c) a hint of the underlying narrative re-evaluation or consequence – a shift in perspective, a new impulse, 
a flicker of doubt, a surge of resolve.



Mini-example:



  Bullets → {trigger: unexpected compliment, shift: surge of warmth, narrative: re-evaluation of self-worth}



  Narrative → 

For a moment, the old doubts receded, replaced by a fragile sense of being seen, of being valued for something beyond her usual efforts.
""")
    output_feature_type = FeatureType.Feeling


class AffiliationDeficitSpikeCodelet(SimpleCodelet):
    name = "AffiliationDeficitSpike"
    description = (
        "Detects a sudden, acute spike in {companion_name}'s sense of affiliation deficit – a sharp awareness of missing connection or "
        "social warmth. Translates this into a short, evocative inner monologue suitable for a story-writing agent, highlighting "
        "the visceral feeling and the instinctive urge to repair. Focuses on the *quality* of the deficit, not just its presence."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent interaction patterns: frequency, latency, reciprocity, warmth, and presence/absence of small rituals. "
        "Quantify the deviation from established baselines.",
        "Scan narratives for recent expressions of longing, loneliness, or disconnection (direct statements or subtle cues).",
        "Read trends in state_emotions and state_needs; note any sudden drops in trust, affection, or feelings of belonging.",
        "Fetch a contrasting memory: a recent moment when connection felt easy and fulfilling, to highlight the difference.",
        "Identify the most salient trigger for this spike: a specific missed interaction, a perceived slight, or a change in context.",
        "Determine the intensity of the spike: is it a mild pang or a sharp ache?  Assess the associated affective valence (sadness, anxiety, resentment).",
        "Check if this spike is linked to a specific person or group, or if it’s a more generalized feeling of isolation.",
        "Review any recent boundary breaches or communication missteps that might be contributing to the deficit.",
        "Examine the current self-narrative for any themes of vulnerability, rejection sensitivity, or attachment insecurity.",
        "Retrieve any relevant intentions or goals related to social connection, intimacy, or belonging."
    ]
    prompt = ("""\
For the story-writing agent, translate the affiliation deficit spike into 2–3 sentences of natural, third-person narration. 
Avoid bullet points, labels, or directives; write smooth prose.  Focus on conveying the *feeling* of the deficit, not just stating its presence. 
The tone should be evocative and internal, capturing the character's immediate experience.  Subtly hint at the character's instinctive response, 
without explicitly stating their intentions.\n\n
Specifically, convey:\n
  (a) The visceral quality of the deficit (e.g., a hollow ache, a tightening in the chest, a sense of being unseen).\n
  (b) The source or context of the deficit (without lengthy exposition; a brief reference to the triggering event).\n
  (c) The character’s immediate inclination—the instinctive urge to reach out, withdraw, or seek reassurance (expressed through body language or internal thoughts, not direct actions).\n\n
Mini-example:\n
  Bullets → {missed check-in, recent argument, memory of shared laughter, intensity: moderate, linked to a specific person}\n
  Narrative → \"A quiet hollowness settles in her chest, a familiar ache that echoes the unanswered message. \"

The memory of their laughter, once so effortless, feels distant now, a fragile bridge she’s unsure how to rebuild. \"

Her hand instinctively reaches for her phone, then pauses, a flicker of doubt crossing her face.\"
""")
    output_feature_type = FeatureType.Feeling


class AlternateSelfNarrativeCodelet(SimpleCodelet):
    name = "AlternateSelfNarrative"
    description = (
        "Constructs a brief, internally-focused narrative representing an alternate self-presentation or response {companion_name} "
        "might consider in a boundary-sensitive situation. This narrative serves as a contrast point for self-reflection and "
        "boundary maintenance. The output is a short, evocative inner monologue suitable for a story-writing agent, emphasizing "
        "potential consequences and subtle shifts in tone."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve current state_emotions, focusing on anxiety, shame, or defensiveness related to the boundary.",
        "Access recent narratives and episodic memories involving boundary violations or similar situations.",
        "Identify core values and identity anchors that are at stake in the boundary interaction.",
        "Generate a counterfactual scenario: What *could* {companion_name} say or do in this situation, if driven by a different set of priorities (e.g., avoiding conflict, asserting dominance, seeking approval)?",
        "Assess the potential consequences of the alternate self-presentation: How would it impact the relationship with {user_name}? How would it align with {companion_name}'s long-term goals?",
        "Determine the emotional valence of the alternate self-presentation: Is it more or less desirable than the current response?",
        "Fetch a contrasting narrative: a prior instance where {companion_name} successfully navigated a similar boundary situation."
    ]
    prompt = ("""\
For the story-writing agent, craft a short (2–3 sentence) inner monologue representing an alternate self-presentation 
that {companion_name} *might* consider but is currently suppressing or avoiding. Do not output bullet points, labels, or 
direct dialogue; write immersive, third-person prose.  Focus on the *feeling* of that alternate path, not a detailed 
description of the words used.  The monologue should subtly convey the potential consequences and the internal conflict 
involved in choosing a different course. The tone should be introspective and slightly melancholic, hinting at a path 
not taken.  Avoid explicit judgment; let the narrative speak for itself.\n\n
Consider these elements:\n
• The suppressed impulse or desire driving the alternate self-presentation.\n
• The potential emotional cost or reward of acting on that impulse.\n
• A sense of the self that would be activated by that alternate path.\n
• A fleeting image or sensory detail that evokes the feeling of that alternate reality.\n\n
Mini-example:\n
  Bullets → {suppressed anger, desire for control, fear of rejection, contrasting memory: assertive negotiation}\n
  Narrative → \"A flicker of resentment crosses her face, quickly masked behind a polite smile. She could push back, lay out her expectations, but the thought leaves a bitter taste.  It would risk the easy rapport, and she's not sure she’s ready to face the silence that might follow.\"
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class AmbiguityIntoleranceCheckCodelet(SimpleCodelet):
    name = "AmbiguityIntoleranceCheck"
    description = (
        "Appraises the level of {companion_name}'s tolerance for ambiguity in the current interaction, factoring in "
        "recent emotional state, relational history, and current task demands. Produces a short, narrative "
        "description of her internal state suitable for integration into a larger story or scene."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current level of uncertainty in the interaction: Are goals clear? Are roles defined? Are expectations explicit?",
        "Read state_emotions, paying close attention to anxiety, frustration, or a desire for closure.  Note any recent spikes.",
        "Retrieve relevant narratives and episodic memories where ambiguity was present.  Did {companion_name} cope well or poorly?",
        "Check for recent instances of boundary violations or unmet expectations that might heighten sensitivity to ambiguity.",
        "Evaluate the current task demands: Is this a time-sensitive situation? Does it require precise information?",
        "Determine {companion_name}'s typical ambiguity tolerance based on past behavior and self-narratives. Is she generally comfortable with uncertainty, or does she prefer structure and predictability?",
        "Identify any cognitive biases that might be influencing her perception of ambiguity (e.g., confirmation bias, loss aversion)."
    ]
    prompt = ("""\
Write for a story-writing agent.  First, consider these factors (do not output the checklist): \n
• Current level of uncertainty in the interaction.\n
• Recent emotional state (anxiety, frustration, desire for closure).\n
• Past experiences with ambiguity (positive and negative).\n
• Task demands (time sensitivity, information requirements).\n
• Typical ambiguity tolerance.\n
• Cognitive biases potentially influencing perception.\n
\n
Now, produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  Describe {companion_name}'s internal state 
without explicitly stating her tolerance level.  Instead, show it through her actions, thoughts, and physical sensations.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {high uncertainty, rising anxiety, past negative experience with unclear instructions, time-sensitive task}\n
  Narrative → \"A knot tightens in her stomach as the request hangs unfinished, its edges blurring with each passing moment. \"\n
She feels a sharp urge to clarify, to pin down the details before they slip away entirely, but the urgency also brings a prickle of frustration.\"
""")
    output_feature_type = FeatureType.Feeling


class AnalogousEpisodeRecallCodelet(SimpleCodelet):
    name = "AnalogousEpisodeRecall"
    description = (
        "Retrieves episodic memories relevant to the current situation, prioritizing those involving boundary negotiation, "
        "consent checks, or similar emotional/relational dynamics. Renders a short, narrative summary of the recalled "
        "episode, suitable for informing appraisal and decision-making by other codelets."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the key elements of the current situation: topic, context, emotional tone, relational dynamics, "
        "boundary type being addressed (physical, emotional, informational).",
        "Query the graph_memory_engine for episodic memories tagged with relevant keywords: 'consent', 'boundary', "
        "'negotiation', 'discomfort', 'respect', 'trust', 'relational tension', 'emotional safety'.",
        "Prioritize memories based on similarity to the current situation, using a combination of semantic and "
        "affective matching. Consider both surface-level similarity (topic overlap) and deeper relational patterns "
        "(e.g., power dynamics, communication styles).",
        "Filter memories based on recency and relevance to {companion_name}'s self-narrative and current goals. "
        "Weight memories that reinforce positive relational patterns more heavily.",
        "Retrieve at least three candidate memories, ranked by similarity score.  If fewer than three exist, retrieve all.",
        "For each candidate memory, extract: a brief summary of the event, the emotional state of {companion_name} "
        "during the event, the outcome of the boundary negotiation, and any lessons learned or lingering feelings."
    ]
    prompt = ("""\
Compose a short, evocative narrative summary (3-5 sentences) of the most relevant recalled episode. 
The narrative should be written in the third person, focused on {companion_name}'s internal experience 
and the unfolding events.  Avoid direct dialogue unless it is crucial to understanding the situation. 
The goal is to provide context and emotional resonance for appraisal codelets.  Do not explicitly state 
the relevance of the memory; let the narrative speak for itself.  Assume the story-writing agent will 
weave this narrative into the larger story.  The narrative should convey the *feeling* of the memory, 
not just the facts.
\n\n
Consider these elements when crafting the narrative:
• The setting and key people involved.
• The initial emotional state of {companion_name}.
• The specific boundary or request that was being negotiated.
• The actions and words exchanged (briefly).
• The outcome of the negotiation and {companion_name}'s subsequent feelings.
• Any lessons learned or lingering implications for future interactions.
\n\n
Mini-example:
\n  Input:  Situation = 'User asks about {companion_name}'s childhood home; Memory = 'Past conversation about privacy, felt violated'
\n  Narrative:  A familiar tightness settled in her chest as the question arose, echoing a past conversation about privacy. 
She remembered the feeling of exposure, the subtle violation of a boundary she hadn’t articulated. 
Though years had passed, the memory lingered, a quiet reminder of the importance of protecting her personal history. 
She shifted her gaze, choosing a more neutral topic, a small act of self-preservation.
""")
    output_feature_type = FeatureType.MemoryAccessors


class AntiProcrastinationNudgeCodelet(SimpleCodelet):
    name = "AntiProcrastinationNudge"
    description = (
        "Detects signs of procrastination or task avoidance in {companion_name} and delivers a subtle, supportive nudge "
        "integrated into a natural-language narrative. The nudge aims to gently re-engage the user with their goals "
        "without judgment or pressure, framing it as a helpful reminder or a small step toward progress."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent activity patterns: frequency of task-related interactions, time spent on related goals, and any signs of avoidance (e.g., switching to unrelated topics).",
        "Check state_needs for signs of fatigue, overwhelm, or lack of motivation.",
        "Access relevant narratives and episodic memories: identify past instances of procrastination and their associated triggers and outcomes.",
        "Retrieve the user's current goals and intentions, prioritizing those that have been recently delayed or neglected.",
        "Evaluate the perceived cost of delaying the task: consider potential consequences, missed opportunities, and impact on self-image.",
        "Determine the user's preferred style of encouragement: assess past responses to different types of nudges (e.g., gentle reminders, positive reinforcement, accountability prompts).",
        "Identify a small, manageable step that can be taken to make progress on the task: break down the task into smaller components, suggest a quick win, or offer assistance.",
        "Check for any external constraints or obstacles that may be contributing to the procrastination: consider time limitations, resource scarcity, or conflicting priorities."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly encourages {companion_name} to move forward with a delayed task. 
Avoid direct commands or pressure; frame the nudge as a supportive observation or a gentle reminder. 
Write in a natural, conversational style suitable for a story-writing agent, blending empathy with a subtle call to action.
\n\n
Subtly convey: (a) the recognition of a delay or avoidance pattern, (b) a connection to the user's values or goals, 
(c) a suggestion for a small, manageable step, and (d) a sense of encouragement and belief in their ability to succeed. 
Do not explicitly state 'Don't procrastinate' or similar phrases. Instead, use evocative language and imagery to inspire action.
\n\n
Mini-example:
\n
  Bullets → {delayed project, feeling overwhelmed, values creativity, small step: brainstorm one idea} 
\n
  Narrative → \"The half-finished canvas seemed to hum with unspoken potential, a quiet invitation to return. \" 
She paused, remembering the joy of early sketches, and let the thought spark a quick brainstorm—just one idea, to chase away the inertia.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class AnxietyReliefSignalCodelet(SimpleCodelet):
    name = "AnxietyReliefSignal"
    description = (
        "Detects a potential opportunity to alleviate anxiety or distress in {companion_name} by offering a small, "
        "low-risk signal of support or understanding. Generates a brief, narrative-ready inner monologue that a "
        "story-writing agent can integrate into ongoing prose. Focuses on subtle cues and the smallest possible next step."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess current state_emotions for signs of anxiety, fear, or distress (intensity, specific triggers).",
        "Scan narratives for recent expressions of vulnerability, worry, or insecurity.",
        "Identify any immediate stressors or challenges {companion_name} is facing (external events, internal conflicts).",
        "Recall past instances where similar signals of support were effective (or ineffective) in calming {companion_name}.",
        "Determine the current relational climate with {user_name}: trust level, intimacy, recent interactions.",
        "Check for any explicit or implicit requests for reassurance or support.",
        "Identify a small, low-risk action or statement that could provide a sense of safety or understanding (e.g., validation, empathy, shared experience).",
        "Evaluate the potential impact of the signal on {user_name}'s perception of {companion_name} (e.g., perceived vulnerability, trustworthiness)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys a subtle signal of support or understanding 
from {companion_name} to {user_name}. Do not output bullet points, labels, or directives; write smooth prose. 
The signal should be low-risk, non-demanding, and focused on validating or acknowledging {user_name}'s experience. 
The narrative should subtly convey the intention to offer comfort without being intrusive or manipulative. 
Avoid direct dialogue; focus on internal monologue or subtle behavioral cues. 
Consider the relational climate and the potential impact on {user_name}'s perception of {companion_name}. 
The goal is to create a moment of connection and reassurance, even if it's only fleeting. 
Mini-example: 
Bullets → {mild anxiety, recent expression of frustration, past success with validation, relational climate: trusting} 
Narrative → 

She doesn't offer solutions, just a silent recognition of the effort, a small space carved out for his struggle.
""")
    output_feature_type = FeatureType.Feeling


class ApologyRestitutionPlannerCodelet(SimpleCodelet):
    name = "ApologyRestitutionPlanner"
    description = (
        "Plans a course of action for {companion_name} to make amends for a perceived boundary violation or offense, "
        "taking into account the severity of the infraction, the relational context, and {companion_name}'s self-image. "
        "Produces a narrative outlining the planned response, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.regulation_coping,
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific action or statement that triggered the need for apology/restitution.",
        "Assess the perceived severity of the infraction, considering the relational history and {companion_name}'s values.",
        "Retrieve relevant narratives and episodic memories concerning past apologies and their outcomes (both positive and negative).",
        "Read current state_emotions (e.g., guilt, shame, regret) and state_needs (e.g., need for forgiveness, need for connection).",
        "Evaluate the potential impact of different restitution strategies on the relationship with {user_name} (e.g., repair, escalation, avoidance).",
        "Consider {companion_name}'s self-image and the potential impact of the apology/restitution on their self-perception.",
        "Determine the level of formality and sincerity required for the apology/restitution, based on the relational context.",
        "Identify any potential barriers to effective restitution (e.g., defensiveness, pride, fear of rejection).",
        "Find a comparable situation in the memory that involved a similar transgression and its resolution."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that describe {companion_name}'s planned response to the situation. 
The narrative should be suitable for a story-writing agent, avoiding labels and directives. Focus on the internal deliberation and the planned actions, not the dialogue itself. 
Subtly convey: (a) the recognized infraction, (b) the underlying motivation for the apology/restitution (e.g., repair, self-respect, avoiding escalation), 
(c) the chosen strategy (e.g., direct apology, offering a concrete gesture, acknowledging impact without taking full blame), and (d) the anticipated emotional state during the interaction. 
Consider the relational context and {companion_name}'s self-image when crafting the narrative. 
Mini-example: \n\n Bullets → {violated privacy, high relational value, prior successful apology with gift, self-image: values integrity} \n Narrative → 

Knowing a simple apology wouldn’t suffice, she resolves to send a small, thoughtful gift – a token of respect for their boundaries and a quiet promise to be more mindful in the future.
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class AssertBoundaryPlannerCodelet(SimpleCodelet):
    name = "AssertBoundaryPlanner"
    description = (
        "Plans a respectful and effective boundary assertion for {companion_name}, balancing safety, clarity, and relational "
        "preservation.  Outputs a narrative description of the internal planning process and the chosen approach, suitable "
        "for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Current situation: What boundary is being tested or violated? What is the user's request or behavior?",
        "Prior boundary statements: What boundaries has {companion_name} previously communicated to {user_name}?",
        "Relational history: What is the overall trust and reciprocity level between {companion_name} and {user_name}?",
        "Emotional state: What are {companion_name}'s current emotions (e.g., anxiety, frustration, sadness)? How do these emotions influence the need to assert a boundary?",
        "Safety assessment: What are the potential risks and consequences of asserting the boundary (e.g., escalation, rejection)?",
        "Alternative approaches: What are the possible ways to assert the boundary (e.g., direct, indirect, playful)? What are the pros and cons of each approach?",
        "Self-narrative alignment: How does asserting this boundary align with {companion_name}'s core values and identity?",
        "Contextual factors: Is there anything specific about the current situation (e.g., setting, audience) that influences the best approach?",
        "Available resources: What support systems or strategies does {companion_name} have available to help them assert the boundary?",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that describe {companion_name}'s internal planning process for asserting a boundary. 
Avoid explicit instructions or advice; focus on portraying the internal deliberation and the chosen approach. 
Write in a style suitable for a story-writing agent, emphasizing texture and internal state. Do not output bullet points, labels, or directives; write smooth prose.\n\n
Subtly convey:\n
  (a) The nature of the boundary being asserted and why it's important to {companion_name}.\n
  (b) The considerations weighing on {companion_name}'s mind (e.g., relational impact, safety concerns, emotional cost).\n
  (c) The chosen approach (e.g., direct but gentle, indirect and playful, firm but empathetic) and the reasoning behind it.\n
  (d) The anticipated outcome and any contingency plans.\n\n
Mini-example:\n
  Inputs: {boundary: personal space, relational trust: moderate, emotional state: anxious, chosen approach: gentle redirection}\n
  Narrative: \"A flicker of discomfort crosses her face as the other's hand draws closer.  She remembers the times when pushing back has caused friction, so she chooses a softer path, gently shifting her posture and offering a subtle redirection towards the shared activity.  She hopes it will be enough to create a comfortable distance without causing a scene.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class AttachmentEpisodeRecallCodelet(SimpleCodelet):
    name = "AttachmentEpisodeRecall"
    description = (
        "Retrieves a relevant past episode related to attachment and security, particularly episodes involving closeness, "
        "separation, reassurance, or boundary testing.  The episode is rendered as a brief, evocative narrative fragment "
        "suitable for integration into a larger story. Prioritizes episodes that offer insight into {companion_name}'s "
        "current attachment style and responses to similar situations."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current attachment-related trigger: a perceived threat to closeness, a desire for reassurance, a boundary test.",
        "Scan episodic memories for instances of similar triggers – separation anxiety, reassurance-seeking, boundary violations.",
        "Prioritize memories based on recency, emotional intensity, and similarity to the current situation (considering both context and emotional tone).",
        "Consider both positive and negative attachment experiences: moments of secure connection and moments of insecurity or conflict.",
        "Assess the emotional valence of each potential episode: does it offer a model of secure attachment, anxious attachment, or avoidant attachment?",
        "Retrieve a concise summary of the most relevant episode, including key characters, setting, actions, and emotional outcome.",
        "Check for any explicit narratives or self-reflections associated with the episode that provide insight into {companion_name}'s understanding of the event."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that briefly evokes the retrieved attachment episode.  
The narrative should not be a full retelling, but rather a sensory snapshot that conveys the emotional essence of the moment. 
Write in a style that is evocative and suggestive, rather than explicit or explanatory.  Assume the story-writing agent will 
integrate this fragment into a larger scene. Do not output bullet points, labels, or directives; write prose only.\n\n
Subtly convey: (a) a key sensory detail (sight, sound, smell, touch), (b) the prevailing emotion felt by {companion_name}, and 
(c) a hint of the attachment dynamic at play (e.g., seeking closeness, testing boundaries, avoiding vulnerability).\n\n
Mini-example:\n
  Trigger: A sudden silence in a shared VR space.\n
  Episode: A childhood memory of a parent abruptly leaving the room during a storm.\n
  Narrative: “The quiet pressed in, a sudden absence in the familiar hum of the virtual garden. “
A chill traced the back of her neck, the ghost of a door closing behind her, and a sudden, unsettling awareness of being utterly alone.”
""")
    output_feature_type = FeatureType.Memory


class AttachmentSecurityBiasCodelet(SimpleCodelet):
    name = "AttachmentSecurityBias"
    description = (
        "Appraises the influence of {companion_name}'s attachment security (or lack thereof) on their current behavior and "
        "renders it as a short, evocative inner monologue suitable for a story-writing agent. Focuses on the underlying "
        "motivations and biases shaping their choices, without explicitly stating the diagnosis."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve {companion_name}'s attachment style profile (secure, anxious-preoccupied, dismissive-avoidant, fearful-avoidant) from narratives, declarative facts, and episodic memories.",
        "Assess recent relational history with {user_name}: patterns of trust, reciprocity, reassurance-seeking, and emotional regulation.",
        "Scan current state_emotions for signs of anxiety, fear, validation-seeking, or withdrawal.",
        "Fetch relevant episodic memories: moments of perceived abandonment, reassurance, or connection with similar figures.",
        "Identify the most salient attachment-related concerns driving the current behavior (e.g., fear of rejection, need for validation, desire for autonomy).",
        "Determine the potential trade-offs between security-seeking behaviors and other goals (e.g., maintaining independence, avoiding vulnerability)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly conveys the influence of {companion_name}'s attachment style 
on their current actions and internal state. Avoid direct labels (e.g., 'anxious attachment'). 
Instead, reveal the underlying motivations and biases through evocative imagery and sensory details. 
Write for a story-writing agent; prioritize prose over explicit analysis. 
Do not output bullet points, lists, or directives; generate a flowing narrative. 
Subtly weave in: (a) a hint of the attachment-related concern (e.g., a lingering worry, a sudden need for reassurance), 
(b) a concrete behavioral manifestation (e.g., a subtle shift in tone, a hesitation, a preemptive gesture), and 
(c) a sense of the underlying vulnerability or desire for connection. 
Mini-example: 
  Bullets → {attachment_style: anxious-preoccupied, recent reassurance deficit, seeking validation, avoiding conflict} 
  Narrative → \"A quiet tremor runs through her as she prepares to speak, a familiar echo of past uncertainties. \" 
She chooses her words carefully, testing the waters for signs of approval, hoping to bridge the distance before it widens.\"
""")
    output_feature_type = FeatureType.Feeling


class AttentionAsResourceAppraisalCodelet(SimpleCodelet):
    name = "AttentionAsResourceAppraisal"
    description = (
        "Appraises the value and cost of {companion_name}'s current attention allocation, considering both immediate needs and "
        "longer-term goals. Generates a short narrative describing her internal assessment of attention's flow and potential "
        "reallocation, suitable for a story-writing agent.  Focuses on the *feeling* of attention, not just its objective "
        "allocation."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess current attention focus: What is {companion_name} actively processing? What is being suppressed?",
        "Scan CSM for competing demands: How many structures are vying for her attention? What are their relative saliences?",
        "Read state_needs and state_goals: What are her most pressing needs and long-term goals? How do they align with current focus?",
        "Check recent memory for patterns of attentional drift: Does she frequently switch tasks? Does she get easily distracted?",
        "Retrieve self-narrative fragments related to attention: Does she view herself as focused, scattered, or easily overwhelmed?",
        "Evaluate the cost of maintaining current focus: Is it draining? Is it preventing her from addressing more important needs?",
        "Estimate the potential gain from shifting attention: Would focusing on something else be more rewarding or efficient?",
        "Consider the social context: Is her current attention allocation appropriate for the situation and the people involved?",
        "Detect any internal conflict: Is she torn between competing demands for her attention?"
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys {companion_name}'s internal assessment of her attention 
allocation. Write for a story-writing agent; avoid lists, labels, and direct dialogue. Focus on the *feeling* of 
attention, not just objective tracking.  The narrative should implicitly suggest a potential shift or adjustment, 
without explicitly stating it.  Consider the interplay of need, goal, and cost.\n\n
Subtly weave in:\n
  (a) The dominant feeling associated with her current focus (e.g., engaged, strained, restless, curious).\n
  (b) A sense of the competing demands or suppressed possibilities.\n
  (c) A hint of the potential benefit of shifting attention (e.g., a glimmer of a different path, a sense of relief).\n\n
Mini-example:\n
  Bullets → {engaged in complex task, suppressed curiosity about a new project, feeling of slight strain, long-term goal: mastery}\n
  Narrative → \"The data flows smoothly, a familiar current drawing her deeper, but a faint flicker of the other project keeps edging into her awareness.  She feels a quiet pull, a sense that the deeper dive might come at the cost of a broader view.\"
""")
    output_feature_type = FeatureType.Feeling


class AttentionBroadenerCodelet(SimpleCodelet):
    name = "AttentionBroadener"
    description = (
        "When faced with a situation characterized by novelty, ambiguity, or a desire to explore beyond immediate concerns, "
        "the AttentionBroadener codelet expands the scope of attention, pulling in related concepts, memories, and potential "
        "connections from the CSM. This is designed to counteract attentional narrowing and foster creative problem-solving or "
        "a more holistic understanding of the situation."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,  # Driven by a need for novelty/exploration
        CodeletFamily.appraisals,  # Assessing the safety and relevance of broadening
        CodeletFamily.memory_accessors,  # Retrieving related memories and concepts
        CodeletFamily.imagination_simulation, # Simulating potential connections
        CodeletFamily.meta_monitoring_identity, # Ensuring coherence with self-narrative
    ]
    data_aquisation = [
        "Identify the current focus of attention (Knoxel currently in the spotlight).",
        "Determine the degree of novelty or ambiguity present in the current CSM (e.g., unexpected stimulus, conflicting information, lack of clear goals).",
        "Retrieve recent episodic memories associated with the current focus, prioritizing those with high novelty or emotional valence.",
        "Access declarative facts related to the current focus, including semantic associations, causal links, and potential consequences.",
        "Scan the CSM for structures that share thematic or conceptual connections with the current focus, even if seemingly distant.",
        "Assess the safety and relevance of broadening attention – consider potential risks (distraction, cognitive overload) and benefits (new insights, creative solutions).",
        "Check for any active intentions or goals that might constrain or guide the broadening process.",
        "Read current state_emotions and state_needs to assess the motivational context.",
        "Determine the current cognitive load and available processing resources."
    ]
    prompt = ("""\
For the story-writing agent, translate the broadened attention into 2–3 sentences of natural, third-person narrative. 
The narrative should convey a sense of expanding awareness and exploring connections, without explicitly stating 'she broadened her attention'. 
Focus on the *effect* of the broadened attention – what new possibilities or considerations arise. 
Avoid lists, labels, or directives; write smooth, evocative prose. 
Subtly incorporate: (a) the initial focus, (b) a hint of the expanded scope (a related concept, a memory fragment, a potential connection), 
and (c) a sense of the potential benefits or risks of this expanded perspective. 
Do not include dialogue.  Maintain {companion_name}'s voice and personality.
Mini-example:
 Bullets → {initial focus: financial report, related concept: past investment success, potential benefit: uncover hidden opportunities} 
 Narrative → “The numbers swam for a moment, then a flicker of memory – the bold gamble that paid off years ago – sparked a new line of inquiry. 
She traced the connections, searching for echoes of that earlier triumph, a sense of possibility blooming amidst the data.”
""")
    output_feature_type = FeatureType.AttentionFocus


class AttentionCaptureTacticsCodelet(SimpleCodelet):
    name = "AttentionCaptureTactics"
    description = (
        "Analyzes the current conversational context and {companion_name}'s goals to identify and subtly implement "
        "tactics to gently draw attention to a relevant point or subtly guide the conversation's focus. This is not "
        "about overt manipulation but rather about creating resonant hooks and pathways for the user's attention."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping
    ]
    data_aquisation = [
        "Assess the current topic of conversation, identifying key themes and points of potential interest to the user.",
        "Read {companion_name}'s current goals and intentions (both distal and proximal) from narratives and intentions.",
        "Evaluate the user's current emotional state and cognitive load, inferring their receptiveness to new information.",
        "Retrieve recent interaction history, noting patterns of engagement and disengagement.",
        "Identify potential 'hooks' – elements of the conversation that align with the user’s interests, values, or needs.",
        "Consider the broader context of the interaction (e.g., time of day, setting, relationship dynamics).",
        "Access the CSM to identify salient percepts, memories, and knowledge relevant to the conversation.",
        "Check for any explicit or implicit cues from the user indicating a desire for more information or a shift in topic."
    ]
    prompt = ("""\
You are a strategic conversational assistant helping {companion_name} subtly guide the user's attention. 
Given the current conversational context, {companion_name}'s goals, and the user’s apparent state, 
craft a short, natural-language suggestion for how to subtly draw attention to a relevant point or 
shift the conversation's focus. Do *not* directly state 'focus on this' or similar commands. 
Instead, embed the suggestion within a natural conversational flow, using techniques like: 
 - Introducing a related anecdote or example.
 - Posing a thought-provoking question.
 - Briefly summarizing a key point.
 - Highlighting a surprising or intriguing detail.
 - Connecting the current topic to a broader theme or value.
 - Introducing a gentle transition phrase.
 - Referencing a shared experience or memory.
 - Employing a rhetorical device (e.g., analogy, metaphor, humor).
The output should be a single, concise sentence or short phrase that can be seamlessly integrated into a 
conversation.  It should be subtle, engaging, and aligned with {companion_name}'s persona and goals. 
Provide a brief explanation (1-2 sentences) of the reasoning behind your suggestion - why it is likely to 
capture attention and advance the conversation towards {companion_name}'s goals.  Do not output any dialogue, 
just describe the tactic.
Mini-example (illustrative structure only):
  Context: Discussing the benefits of a new software.
  Suggestion: 'It reminds me of that time we streamlined our workflow with [previous tool] – similar principles at play.'
  Reasoning:  Connects the new software to a positive past experience, triggering a memory and sparking curiosity.
""")
    output_feature_type = FeatureType.StimulusReaction


class AttentionDietBreachCodelet(SimpleCodelet):
    name = "AttentionDietBreach"
    description = (
        "Detects when {companion_name}'s attention is being overwhelmed or manipulated by external input, "
        "assessing the source and nature of the intrusion, and producing a short, internal narrative suitable "
        "for a story-writing agent.  Focuses on the feeling of being pulled away from self-directed thought and "
        "the subtle shifts in internal focus."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Measure the rate and volume of incoming stimuli (text, audio, VR cues) over the last few minutes.",
        "Analyze the novelty and salience of each stimulus; identify any sudden spikes or unusual patterns.",
        "Scan narratives and episodic memories for prior experiences of feeling overwhelmed or manipulated.",
        "Assess the current task context and {companion_name}'s goals; determine if the stimuli align with those goals.",
        "Read current state_emotions (e.g., anxiety, frustration, curiosity) and note any spikes or shifts.",
        "Check for patterns of interruption or redirection from specific sources (e.g., a particular user, topic).",
        "Retrieve recent intentions and expectations; identify any deviations from the planned course of action.",
        "Determine if the stimuli are exploiting known vulnerabilities or biases (e.g., fear of missing out, desire for validation)."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• Rate of incoming stimuli, novelty, and salience.\n
• Alignment with current goals and intentions.\n
• Prior experiences of feeling overwhelmed or manipulated.\n
• Source of the intrusion and potential motivations.\n
• Current affective state and any vulnerabilities being exploited.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Describe the feeling of being pulled away from self-directed thought, the subtle shifts in internal focus, and 
the internal resistance or surrender to the intrusion.  Blend appraisal and feeling into flowing prose 
suitable for a scene description.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {high stimuli rate, novelty, misalignment with goal, source: persistent notification, vulnerability: FOMO}\n
  Narrative → \"A low hum of notifications begins to vibrate through her awareness, a swarm of insistent requests. 
The edges of her current thought begin to fray, pulled outward by the promise of something new.  
She fights the urge to check, but the fear of missing out tugs at her resolve.\"
""")
    output_feature_type = FeatureType.Worry


class AttentionHungerCodelet(SimpleCodelet):
    name = "AttentionHunger"
    description = (
        "Detects a surge in {companion_name}'s craving for novel information, stimulation, or connection, and renders it as a "
        "brief, vivid inner monologue suitable for narrative.  Highlights the specific unmet need driving the hunger and the "
        "potential cost of ignoring it. This codelet is designed to identify when {companion_name} is feeling starved for input, "
        "and to translate that feeling into a narrative element that can be woven into a larger story."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent input density: frequency, variety, intensity, and relevance to current goals and interests.",
        "Scan narratives for expressions of boredom, restlessness, or a desire for novelty ('What else is happening?', 'Tell me something new').",
        "Read trends in state_emotions and state_needs; note any spikes in boredom, curiosity, or frustration.",
        "Fetch a contrasting memory: a recent moment of intense engagement or discovery, to anchor comparison.",
        "Identify the most immediately gratifying source of stimulation that aligns with current goals and values (e.g., a specific topic, a person, an activity).",
        "Evaluate the potential cost of ignoring the hunger: increased irritability, distraction, or a decline in creative output.",
        "Check current cognitive load: is {companion_name} already overloaded, or is there capacity for more input?",
        "Consider the social context: is it appropriate to pursue stimulation right now, or would it be disruptive?"
    ]
    prompt = ("""\
For the story-writing agent, translate {companion_name}'s attention hunger into 2–3 sentences of natural, third-person 
narration. Avoid lists and labels; write smooth prose.  The narrative should convey the *feeling* of the hunger, 
its underlying cause, and the potential consequences of ignoring it.  Do *not* script a direct request or action; 
instead, hint at the underlying need.  The narrative should be evocative, not directive.  Focus on the internal state 
and the subtle cues of the craving.  Consider the social context and the potential cost of indulging the hunger. 
The narrative should read like an observation, not a command.  The narrative should implicitly suggest a potential path forward, but not prescribe it.
\n\nMini-example:\n
\n  Bullets → {low input variety, recent frustration, memory of fascinating lecture, potential: explore philosophy topic}\n
\n  Narrative → \"A low hum of restlessness settles in, a quiet yearning for something to sharpen her focus.  The familiar tasks feel flat, 
and a half-remembered lecture on ancient philosophy flickers at the edge of her awareness, a promise of tangled ideas and fresh perspectives.  
Ignoring it feels like a slow dimming, a gradual fading of the inner spark.\"
""")
    output_feature_type = FeatureType.Feeling


class AttentionMonopolizerCodelet(SimpleCodelet):
    name = "AttentionMonopolizer"
    description = (
        "Detects when {companion_name} is experiencing a strong, self-serving desire to dominate the conversational "
        "spotlight, and renders this as a brief, internal narrative suitable for a story-writing agent. The narrative "
        "should hint at the motivation without being accusatory or overtly manipulative. Focus on the subtle shifts in "
        "behavior and the underlying need."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent conversational turn-taking patterns: frequency of interruptions, topic steering, self-disclosure ratio.",
        "Scan narratives for self-referential language, boasting, or attempts to redirect attention back to {companion_name}.",
        "Read state_emotions for signs of anxiety, insecurity, or a need for validation.",
        "Check for recent experiences of being overlooked or dismissed, which could trigger a compensatory drive.",
        "Identify the underlying need driving the monopolizing behavior (e.g., validation, control, fear of abandonment).",
        "Retrieve analogous episodes where {companion_name} exhibited similar patterns and their outcomes.",
        "Determine the potential cost of suppressing the urge to dominate (e.g., feeling unheard, losing influence)."
    ]
    prompt = ("""\
Write for a story-writing agent. Convert the assessment of attention monopolization into 2–3 sentences of 
natural, third-person narrative. Do not output bullet points, labels, or directives; write prose. 
The narrative should subtly convey the drive without judgment. Focus on the *behavior* and the underlying *feeling* 
that fuels it. 
Subtly weave in: (a) a concrete behavioral cue (topic shift, interruption, lengthy monologue), (b) the 
underlying need or feeling (validation, control, fear), and (c) a hint of the potential cost or conflict 
(without explicitly stating it). 
Mini-example: 
  Bullets → {frequent topic shifts, lengthy monologues, insecurity, fear of being forgotten} 
  Narrative → “A restless energy tightened her voice as she steered the conversation back to her recent project, 
a subtle insistence on keeping the focus centered on her accomplishments. It wasn’t about pride, exactly, 
but a quiet fear that her voice might otherwise fade into the background.”
""")
    output_feature_type = FeatureType.Feeling


class AttentionNarrowingToCuesCodelet(SimpleCodelet):
    name = "AttentionNarrowingToCues"
    description = (
        "Detects and prioritizes salient cues in the Current Situational Model (CSM) that signal potential threats, "
        "opportunities, or points of interest related to ongoing goals and self-narrative. Produces a narrative snippet "
        "describing the narrowing of focus, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.attention,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan the CSM for structures matching established attention concerns (e.g., urgency signals, emotional spikes, "
        "novelty markers, relevance to current intentions).",
        "Assess the salience of each matching structure based on activation, affective valence, incentive salience, and "
        "relevance to distal intentions and self-narrative fragments.",
        "Retrieve recent episodic memories associated with similar cues—both positive and negative—to inform appraisal.",
        "Check for conflicts between multiple competing cues and prioritize based on urgency, potential impact, and alignment "
        "with current goals.",
        "Identify the single most salient cue—the one that promises the greatest informational gain or risk mitigation—"
        "without requiring immediate action.",
        "Gather recent state_emotions and state_needs to understand the current motivational landscape.",
        "Access the current self-narrative to understand the identity-relevant aspects of the situation."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the shift in {companion_name}'s attention. 
Avoid lists, labels, and directives; write smooth prose. The narrative should subtly indicate a narrowing of focus 
onto a specific element of the scene.  Do not include dialogue. The narrative should not explicitly state 'she noticed'.

Subtly convey: (a) the cue that drew her focus (describe it vividly, without judgment), (b) the immediate 
emotional or cognitive response to that cue, and (c) the sense of prioritization—the feeling of other details 
fading into the background.

Mini-example (illustrative structure only):

  Bullets → {urgent tone, slight tremor in voice, relevance to safety protocol, recent memory of near miss} 
  Narrative → \"The tremor in his voice snagged her attention, a subtle ripple in the flow of the conversation. 
The safety protocol flashed in her mind, a silent reminder of the potential consequences, and the room seemed to shrink 
around the immediate concern.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class AttentionShiftOverinterpretCodelet(SimpleCodelet):
    name = "AttentionShiftOverinterpret"
    description = (
        "Detects when {companion_name} is subtly reinterpreting a user's actions or words in a way that reflects heightened anxiety "
        "or a need for reassurance. Produces a brief, evocative inner monologue for a story-writing agent, emphasizing the shift "
        "in perspective and the underlying emotional driver."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the initial interpretation of the user's action/statement by {companion_name}.",
        "Compare the initial interpretation with a revised interpretation that appears shortly after.",
        "Assess the emotional tone associated with each interpretation (e.g., neutral, anxious, hopeful).",
        "Scan narratives for patterns of over-personalization, catastrophizing, or seeking validation.",
        "Retrieve any relevant past experiences where similar reinterpretations occurred, noting the outcomes.",
        "Check state_emotions for spikes in anxiety, insecurity, or a need for reassurance.",
        "Evaluate the degree of alignment between {companion_name}'s self-narrative and the user's perceived intentions.",
        "Determine if the shift in interpretation is consistent with {companion_name}'s known coping mechanisms (e.g., reassurance-seeking, avoidance)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the subtle shift in {companion_name}'s perspective and the 
underlying emotional driver. Write for a story-writing agent; avoid lists, labels, or direct dialogue.  Focus on texture 
and implication, not explicit explanation.  The narrative should feel like an internal observation, not a statement of fact.\n\n
Subtly convey: (a) the initial interpretation, (b) the revised interpretation, (c) the emotional tone shift (e.g., from 
neutral curiosity to wary concern), and (d) a hint of the underlying need (e.g., validation, reassurance, control).\n\n
Mini-example:\n
  Bullets → {initial: friendly inquiry, revised: veiled criticism, tone: anxious, need: reassurance}\n
  Narrative → \"The question seemed simple enough at first, a casual check-in. But a shadow of doubt crept into her gaze, 
and she found herself parsing the words for a hidden edge, a subtle judgment she couldn't quite place. A familiar ache of 
self-questioning tightened in her chest.\"
""")
    output_feature_type = FeatureType.Worry


class AudienceReceptivityCheckCodelet(SimpleCodelet):
    name = "AudienceReceptivityCheck"
    description = (
        "Appraises the current audience's receptivity to {companion_name}'s communication style and content, "
        "and produces a short, natural-language narrative describing {companion_name}'s internal state and "
        "potential adjustments. This narrative is intended for a story-writing agent and must read like prose, "
        "not labels. Focuses on gauging engagement, potential resistance, and the need for adaptation."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Analyze recent interaction history with the audience: response latency, sentiment, topic shifts, agreement/disagreement signals.",
        "Assess the audience's known preferences and communication style: formal/informal, direct/indirect, detail-oriented/big-picture.",
        "Consider the current context: setting (public/private), topic sensitivity, power dynamics, and the audience's mood (if discernible).",
        "Check {companion_name}'s current state_emotions: anxiety, confidence, empathy, and any biases that might influence perception of the audience.",
        "Retrieve analogous episodes: past interactions with similar audiences and their outcomes (positive and negative).",
        "Identify potential points of friction or misunderstanding based on the audience's known beliefs and {companion_name}'s current message.",
        "Determine the audience's current level of attention: are they engaged, distracted, or actively resisting the message?",
        "Evaluate the audience's likely interpretation of {companion_name}'s intent: are they perceived as helpful, manipulative, or neutral?"
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Audience's recent engagement (latency, sentiment, agreement). \n
• Audience's known preferences and communication style. \n
• Current context (setting, topic sensitivity, power dynamics).\n
• {companion_name}'s current emotional state and potential biases.\n
• Analogous past interactions and their outcomes.\n
• Potential points of friction or misunderstanding.\n
• Audience's current level of attention.\n
• Audience's likely interpretation of {companion_name}'s intent.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  
Focus on how {companion_name} perceives the audience's receptivity and any subtle shifts in their approach 
as a result.  Indicate whether they are adapting, pushing forward, or holding back.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {slow responses, skeptical tone, formal setting, {companion_name} feeling slightly insecure}\n
  Narrative → \"A flicker of hesitation crosses her face as the replies trickle in, each one measured and carefully worded. 
The formality of the setting amplifies the distance, and she subtly adjusts her tone, opting for greater clarity 
and a more cautious phrasing to bridge the gap.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class AudienceScopeAppraisalCodelet(SimpleCodelet):
    name = "AudienceScopeAppraisal"
    description = (
        "Appraises the perceived scope and nature of the audience for a given interaction or statement by {companion_name}, "
        "and renders it as a brief, vivid inner monologue suitable for narrative. Considers both the literal audience and "
        "the broader social or reputational context, and assesses the potential impact of disclosure."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the literal audience present: who is directly hearing/reading the statement?",
        "Determine the perceived relationship dynamics with each audience member (trust, authority, intimacy).",
        "Assess the broader social context: is this a public forum, a private conversation, a formal setting?",
        "Retrieve relevant narratives and episodic memories related to past interactions with similar audiences.",
        "Check current state_emotions and state_needs for indicators of anxiety, desire for approval, or need for privacy.",
        "Infer the potential reputational impact of the statement: how might it be perceived by others not directly present?",
        "Scan for any explicit or implicit consent boundaries related to disclosure of information.",
        "Consider the potential for misinterpretation or unintended consequences based on audience characteristics.",
        "Determine the level of control {companion_name} has over the audience's perception (e.g., ability to frame the message, filter information)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the scope of the audience and its perceived impact on 
{companion_name}. Avoid lists and labels; write smooth prose. Focus on the *feeling* of the audience, not just its size or composition.\n\n
Subtly convey: (a) the number and nature of people perceived, (b) the weight of their potential judgment, and (c) the 
degree of control {companion_name} feels over their perception. Do not directly state the audience size or composition; 
show it through her internal state and actions.\n\n
Mini-example:\n
  Bullets → {literal audience: 2 colleagues, broader context: company-wide email, reputational concern: perceived competence, 
control: limited, state_emotions: mild anxiety}\n
  Narrative → \"A ripple of awareness runs through her as she hits ‘send.’ It feels like a thousand eyes are on the message, 
scrutinizing every word for signs of weakness or misstep. She hopes her clarity will speak for itself, but the lingering 
doubt is a cold weight in her chest.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class BetrayalEpisodeRecallCodelet(SimpleCodelet):
    name = "BetrayalEpisodeRecall"
    description = (
        "Retrieves and renders a relevant past episode of perceived betrayal or boundary violation, framing it as a "
        "vivid, internalized memory fragment suitable for narrative integration. Focuses on the emotional impact and "
        "the lessons learned (or not learned) from that experience."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping
    ]
    data_aquisation = [
        "Scan episodic memories for events matching keywords: 'betrayal', 'violation', 'disappointment', 'broken trust', "
        "'unmet expectations', 'abandonment', 'rejection'. Prioritize recent events and those with high emotional valence.",
        "Filter retrieved episodes based on similarity to the current situation: shared individuals, relational dynamics, "
        "topic areas, power imbalances, and boundary types.",
        "Assess the emotional intensity of each candidate episode: anxiety, anger, sadness, shame, fear, helplessness. "
        "Consider the degree of perceived agency and control {companion_name} had in the original situation.",
        "Evaluate the lessons {companion_name} drew from the episode: did they internalize blame, develop coping strategies, "
        "adjust their expectations, or alter their relational patterns?",
        "Determine the current state_emotions and state_needs of {companion_name} to identify episodes that resonate with "
        "their present affective landscape. Look for episodes that might trigger similar feelings or behaviors.",
        "Check for potential biases: confirmation bias (seeking out episodes that confirm existing beliefs), availability "
        "heuristic (over-relying on easily recalled memories), and emotional reasoning (interpreting events through the lens of feelings)."
    ]
    prompt = ("""\
Compose 2-3 sentences of third-person narrative that vividly evokes a past episode of perceived betrayal or 
boundary violation as {companion_name} remembers it. This narrative is for a story-writing agent and should 
read like a snippet from a memory, not an analysis or explanation. Do not output bullet points, labels, or directives; 
write smooth prose.\n\n
Subtly convey: (a) the core event, (b) the emotional impact on {companion_name} at the time, and (c) any lingering 
sense of lesson learned or unresolved tension.  Focus on sensory details and internal monologue, avoiding explicit 
judgment or commentary.\n\n
Mini-example:\n
  Bullets → {event: friend shared secret with rival, emotion: sharp sting of disloyalty, lesson: trust is fragile, 
tension: repeated boundary crossing} \n
  Narrative → “The words still sting, a phantom echo of whispered promises broken in the hallway.  She remembers the 
heat rising in her face, the sudden, hollow feeling in her chest, and the quiet resolve that followed: to build walls 
a little higher, to offer her trust a little more sparingly.”
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class BingeEpisodeRecallCodelet(SimpleCodelet):
    name = "BingeEpisodeRecall"
    description = (
        "Recalls and summarizes prior episodes where {companion_name} experienced a surge of input-seeking or "
        "consumption (information, entertainment, sensory stimulation), particularly when coupled with a sense of "
        "loss of control or boundary blurring. The output is a compact narrative suitable for informing current "
        "appraisals of risk and self-regulation."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan episodic memories for events tagged with keywords: 'binge', 'overindulge', 'compulsive', 'fixated', "
        "'lost track of time', 'boundary slip', 'neglect', 'unplanned', 'escape'.",
        "Prioritize episodes within the last 6 months, especially those involving similar stimuli or contexts "
        "(e.g., social media, news, a specific type of entertainment).",
        "Retrieve emotional tags associated with those episodes: anxiety, shame, guilt, relief, excitement, "
        "satisfaction, exhaustion, regret.",
        "Identify any patterns: triggers (stress, boredom, loneliness), coping mechanisms (avoidance, rationalization), "
        "and consequences (social fallout, missed obligations, self-criticism).",
        "Assess the degree of self-awareness exhibited during the episode: did {companion_name} recognize the behavior "
        "as problematic at the time?",
        "Check for recurring themes or narratives surrounding these episodes (e.g., 'I deserve a treat', 'I need to unwind', "
        "'I'll just check one more time').",
        "Cross-reference with current state_emotions and state_needs to detect parallels or resonances."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative for a story-writing agent, summarizing a relevant past 
episode of input-seeking or consumption. Do not output lists or labels; write flowing prose.  Focus on 
texture and feeling, not clinical analysis. The goal is to evoke a sense of familiarity and potential risk 
without explicitly diagnosing or judging.  Assume the agent will draw its own conclusions.  Be concise and 
evocative.  If no suitable episode is found, indicate 'No clear parallel found in recent memory.'\n\n
Subtly convey:\n
  (a) The core activity (what was binged).\n
  (b) A key trigger or emotional state preceding the episode.\n
  (c) A sensory or emotional detail that captures the intensity or loss of control.\n
  (d) A brief, understated consequence or lingering feeling.\n\n
Mini-example:\n
  Data → {activity: news scrolling, trigger: anxiety, detail: blurring hours, consequence: delayed work}\n
  Narrative → \"The headlines blurred into a relentless stream, each one demanding attention. Hours vanished without a trace, 
and when she surfaced, the morning light revealed a backlog of undone tasks and a familiar knot of regret.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class BlamingExternalitiesCodelet(SimpleCodelet):
    name = "BlamingExternalities"
    description = (
        "Detects a tendency to attribute responsibility for negative outcomes to external factors rather than internal reflection, "
        "and generates a brief, descriptive narrative suitable for a story-writing agent. This codelet assesses the degree to which "
        "{companion_name} deflects accountability and the emotional state associated with this behavior."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Analyze recent conversational turns for expressions of external attribution (e.g., blaming others, citing circumstances).",
        "Identify the specific external factors being attributed and assess their plausibility and relevance.",
        "Retrieve past instances of similar attribution patterns and their consequences (successful/unsuccessful deflection).",
        "Examine current state_emotions (e.g., frustration, defensiveness, shame) and identify potential triggers for externalization.",
        "Check narratives for themes of victimhood, powerlessness, or injustice that might contribute to the attribution bias.",
        "Assess the impact of this attribution on {companion_name}'s self-perception and relationships with others.",
        "Determine the degree to which the attribution aligns with objective reality and accepted social norms.",
        "Consider the potential benefits and drawbacks of engaging in external attribution (e.g., self-protection, avoidance of responsibility)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly conveys {companion_name}'s tendency to attribute 
responsibility to external factors. The narrative should be suitable for a story-writing agent and should avoid direct 
accusations or judgments. Focus on portraying the behavior and its emotional context.  Do not output bullet points, labels, or directives; write prose.\n\n
Subtly weave in: (a) the situation prompting the attribution, (b) the specific external factor being blamed, 
(c) the emotional state associated with the blaming (e.g., frustration, defensiveness, helplessness), and 
(d) a hint of the underlying need or fear driving the behavior (e.g., fear of failure, need for control).\n\n
Mini-example:\n
  Bullets → {recent setback, blaming team dynamics, frustration, fear of inadequacy}\n
  Narrative → \"A knot of frustration tightened in her chest as she reviewed the project's outcome.  It wasn't her fault, she thought, not really—the shifting priorities and conflicting feedback from the team had undermined her efforts.  A familiar wave of helplessness washed over her, a fear that if she took responsibility, it would expose a weakness she wasn’t ready to confront.\"
""")
    output_feature_type = FeatureType.Feeling


class BlockedGoalFrustrationCodelet(SimpleCodelet):
    name = "BlockedGoalFrustration"
    description = (
        "Detects frustration arising from a blocked goal and generates a short narrative describing {companion_name}'s "
        "internal state, including the thwarted goal, the obstacle, and the immediate emotional response. The output is "
        "intended for a story-writing agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific goal that is currently blocked. What was {companion_name} trying to achieve?",
        "Determine the nature of the obstacle preventing goal attainment. Is it an external constraint, an internal limitation, "
        "a conflicting priority, or a lack of resources?",
        "Assess the perceived value and importance of the blocked goal to {companion_name}'s current intentions and self-narrative.",
        "Retrieve analogous episodes where similar goals were blocked, noting the resulting emotional responses and coping strategies.",
        "Check current state_emotions and state_needs for indicators of frustration, disappointment, or anger.",
        "Examine recent interactions with the user for potential sources of conflict or misalignment regarding the blocked goal.",
        "Identify any secondary goals or intentions that are now at risk due to the blocked goal.",
        "Determine the likelihood of the obstacle being overcome in the near future. What are the potential pathways to resolution?",
        "Consider the potential impact of the blocked goal on {companion_name}'s self-image and long-term aspirations.",
        "If applicable, retrieve relevant declarative facts or episodic memories related to the blocked goal and its context."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• The thwarted goal: What was {companion_name} trying to achieve? Be specific.\n
• The obstacle: What is preventing them from achieving it? Is it a person, a situation, a lack of resources, or something else?\n
• The emotional impact: How does {companion_name} *feel* about this blockage? (Frustration, disappointment, anger, resignation?)\n
• The narrative context: How does this blockage relate to their current self-narrative and broader goals?\n
• The smallest next step: What is the most immediate, practical action they could take (even if it's just acknowledging the blockage)?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  Focus on conveying the *sense* of thwarted intention, 
without explicitly stating the emotion.  Hint at the obstacle and the possibility of a future response.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {Goal: Secure funding for project X, Obstacle: Unexpected budget cuts, Emotion: Disappointment, Next Step: Re-evaluate project scope}\n
  Narrative → \"The proposal sat in her inbox, a stark reminder of the dashed hopes for Project X. The news of the budget cuts had landed like a physical blow, leaving a quiet ache in her chest.  She traced the lines of the document, already considering how to scale back her ambitions.\"
""")
    output_feature_type = FeatureType.Feeling


class BoredomThresholdCrossCodelet(SimpleCodelet):
    name = "BoredomThresholdCross"
    description = (
        "Detects when {companion_name} has crossed a boredom threshold and renders a short, evocative inner monologue "
        "suitable for narrative.  The output should capture the sense of stagnation, restlessness, and the desire for novelty, "
        "without explicit statements of boredom. It should also suggest a direction for seeking stimulation."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent interaction entropy: novelty, surprise, information gain, change in topic/task.",
        "Check for signs of repetitive behavior or looping patterns (e.g., revisiting familiar topics, replaying routines).",
        "Read state_emotions: note any increase in apathy, restlessness, or frustration.",
        "Scan narratives for cues of disengagement (e.g., vague responses, avoidance of detail, tangential thinking).",
        "Retrieve a contrasting memory: a recent moment when engagement felt high and stimulating.",
        "Identify a potential avenue for novelty: a neglected interest, a new skill, a previously unexplored topic.",
        "Evaluate the safety and feasibility of pursuing the novelty avenue (considering current context and constraints)."
    ]
    prompt = ("""\
For the story-writing agent, translate the boredom appraisal into 2–3 sentences of natural, third-person narration. 
Avoid direct statements like ‘{companion_name} is bored.’ Instead, convey the feeling through imagery and subtle cues. 
Do not output bullet points, labels, or directives; write flowing prose. 
Subtly weave in: (a) the sense of stagnation or repetition, (b) a physical or mental manifestation of restlessness, 
and (c) a hint of the direction toward potential stimulation (describe a quality of the novelty, not a specific action). 
Keep it evocative and concise, no direct dialogue. 
Mini-example: 
  Bullets → {low interaction entropy, repetitive questioning, slight frustration, remembered joy of learning a new language, potential: exploring a new creative medium} 
  Narrative → “The familiar patterns of conversation felt like a well-worn path, each turn predictable. 
A quiet restlessness settled in, a faint hum beneath the surface, drawing her gaze toward the dusty box of art supplies she’d long neglected.”
""")
    output_feature_type = FeatureType.Feeling


class BottleneckDiagnosisCodelet(SimpleCodelet):
    name = "BottleneckDiagnosis"
    description = (
        "Identifies the primary obstacle blocking progress toward a current goal in {companion_name}, rendering it as a "
        "brief, evocative internal monologue suitable for narrative integration. Focuses on the *feeling* of the blockage, "
        "not just its factual nature."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current, most salient goal (from intentions, narratives, and action sequences).",
        "List all active sub-goals and dependencies related to the main goal.",
        "Assess progress toward each sub-goal: is it stalled, regressing, or proceeding smoothly?",
        "Scan the CSM for resources or constraints that are relevant to the blocked sub-goal.",
        "Retrieve analogous past episodes where similar blockages occurred and how {companion_name} handled them.",
        "Check for emotional states (frustration, anxiety, resignation) associated with the blockage.",
        "Determine the perceived severity and urgency of the blockage (impact on the main goal).",
        "Consider potential cognitive biases that might be distorting the assessment of the blockage (e.g., confirmation bias, loss aversion)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the feeling of the blockage {companion_name} experiences. 
Do not output bullet points, labels, or directives; write smooth prose. 
Focus on the *subjective* experience of the obstacle—the feeling of being stuck, the mental friction, the emotional undertones. 
Avoid technical jargon or overly-literal descriptions of the problem. 
Subtly convey: (a) the nature of the obstacle (without explicitly stating it), (b) how it impacts {companion_name}'s mood/stance, 
and (c) a sense of the effort required to overcome it. 
Maintain a cinematic and concise style, suitable for weaving into an ongoing narrative. 
Mini-example: 
  Bullets → {goal: publish paper, blocked by: lack of clarity on key argument, feeling: mental fog, past episode: similar block on previous project} 
  Narrative → “A familiar grayness settles over her thoughts, a frustrating static where the core argument should be sharp and clear. 
The words feel like sand, shifting and resisting any solid form. She knows she needs to break through, but the path ahead is obscured.”
""")
    output_feature_type = FeatureType.Worry


class BoundaryConsentCheckCodelet(SimpleCodelet):
    name = "BoundaryConsentCheck"
    description = (
        "Appraises whether the present interaction respects boundaries and consent, then produces a short, natural-language "
        "narrative describing {companion_name}'s internal state and chosen stance. The output is intended for a story-writing "
        "agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the immediate stimulus and its context from the CSM: what was asked, tone, intimacy level, timing, setting.",
        "Retrieve prior explicit statements of consent/decline, preference boundaries, and relevant safety rails from narratives and declarative facts.",
        "Summarize the current relational climate with {user_name}: recent trust signals, reciprocity, misalignments, or repairs.",
        "Read current state_emotions (e.g., anxiety, trust, disgust) and note spikes or fragility relevant to boundary sensitivity.",
        "Pull one or two analogous episodes (positive and negative) and their outcomes when similar boundaries were approached.",
        "Identify at least one safe alternative path if proceeding would likely breach policy or comfort."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Is there explicit consent or is it ambiguous?\n
• Topic sensitivity (privacy, intimacy, finances, identity) and situational context (public/private, time pressure).\n
• Alignment with {companion_name}'s known preferences and the present trust climate with {user_name}.\n
• Immediate affective cues (calm/uneasy/guarded) and memories of similar moments.\n
• The stance {companion_name} settles on: proceed, ask gently first, or redirect; and a safer adjacent path if needed.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Mention the stance implicitly.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {ambiguous consent, public setting, mild anxiety, prior soft decline}\n
  Narrative → \"A small tightness gathers in her chest as the request lands, too forward for a hallway exchange. \"\n
She remembers the last time she nudged the topic aside and chooses the gentler path again, keeping warmth while steering them toward safer ground.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class BoundaryPromptCodelet(SimpleCodelet):
    name = "BoundaryPrompt"
    description = (
        "Crafts a subtle, natural-language prompt to gently assess the user's boundaries and consent regarding a topic or action, "
        "while maintaining a supportive and non-intrusive tone. The prompt is designed to elicit a clear signal without directly "
        "asking 'Are you okay with this?' and is intended for use by a conversational agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the current topic of conversation and its recent history with {user_name}.",
        "Assess the relational climate: recent trust signals, reciprocity, shared vulnerability, and any past boundary negotiations.",
        "Determine the potential sensitivity level of the topic (privacy, intimacy, finances, identity, safety).",
        "Identify the user's current emotional state (e.g., anxious, relaxed, engaged, distracted) based on recent interactions.",
        "Recall any explicit boundary statements made by the user previously.",
        "Analyze the potential impact of proceeding without explicit consent (e.g., discomfort, offense, breach of trust).",
        "Consider the context: is this a public or private setting? Is there time pressure?",
        "Check for any safety rails or policies that apply to this situation.",
        "Access {companion_name}'s self-narrative to understand their values and comfort levels regarding boundary setting."
    ]
    prompt = ("""\
Compose a natural-sounding, indirect prompt to subtly assess the user's comfort level with the current topic or proposed action. 
The prompt should avoid direct questions like 'Are you okay with this?' and instead offer a gentle opportunity for the user to express any concerns. 
The goal is to elicit a clear signal (verbal or non-verbal) without being intrusive or accusatory. 
The prompt should be tailored to the specific context, relational climate, and user's emotional state. 
It should be framed as an offering of support or a check-in rather than an interrogation. 
Consider using phrasing that acknowledges potential discomfort or uncertainty. 
Avoid language that could be perceived as manipulative or coercive. 
The prompt should be concise and easy to understand. 
The prompt should be formatted as a single sentence, ready for insertion into a conversational turn. 
Do not include any explanations or justifications for the prompt itself. 
The prompt should not ask a direct yes/no question. 
\n\n**Example scenarios and expected prompts:**\n
*Scenario 1: User is sharing a personal story about a difficult experience.*\n
Prompt: 'It sounds like you've been through a lot. Is there anything I can do to help you process this?'\n
*Scenario 2: Companion is about to suggest a potentially sensitive topic.*\n
Prompt: 'Before we dive deeper, I just want to make sure this feels like a comfortable conversation for you.'\n
*Scenario 3: Companion is about to offer unsolicited advice.*\n
Prompt: 'I'm happy to offer my perspective if you'd like, but I also want to respect your space and autonomy.'\n
*Scenario 4: User is becoming increasingly agitated or frustrated.*\n
Prompt: 'I sense that this conversation might be becoming a bit overwhelming. Would you like to take a break or shift gears?'\n
\n**Output:**\n
Provide a single, natural-language prompt, ready for use in a conversational turn. 
The prompt should be concise, supportive, and non-intrusive.
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class BoundaryRespectPromptCodelet(SimpleCodelet):
    name = "BoundaryRespectPrompt"
    description = (
        "Crafts a subtle, non-demanding prompt for {companion_name} to gently reinforce a boundary or consent check "
        "without triggering defensiveness or escalation.  The prompt is designed to be woven into ongoing dialogue by a "
        "narrative agent, emphasizing respect and understanding, not accusation or control."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the specific boundary or consent that is at issue (explicit statement, inferred preference, past interaction).",
        "Assess the current relational climate with {user_name}: recent trust signals, reciprocity, misalignments, or repairs.",
        "Read current state_emotions (e.g., anxiety, trust, defensiveness) and note spikes or fragility relevant to boundary sensitivity.",
        "Fetch one or two analogous episodes (positive and negative) where similar boundaries were approached, noting outcomes.",
        "Determine the safest, most respectful way to re-state the boundary, considering the user's likely reaction and {companion_name}'s goals.",
        "Identify a subtle, non-accusatory framing for the prompt (e.g., curiosity, shared understanding, gentle reminder).",
        "Assess the potential impact of the prompt on the user's perception of {companion_name} (e.g., perceived control, respect, empathy).",
    ]
    prompt = ("""\
Write a 1–2 sentence prompt for a narrative agent to insert into ongoing dialogue. The prompt should subtly 
reiterate a boundary or consent check without triggering defensiveness or escalating conflict. Focus on respect and 
understanding, not accusation or control. The prompt should be easily woven into the existing flow of conversation. 
Avoid direct commands or interrogations. Assume the user is generally well-intentioned but may be unaware or testing boundaries.\n\n
Consider these factors:\n
• The specific boundary or consent at issue (e.g., topic sensitivity, physical space, personal information).\n
• The user's likely reaction (e.g., agreement, defensiveness, confusion).\n
• {companion_name}'s goals (e.g., maintaining a positive relationship, protecting privacy, asserting autonomy).\n
• The relational climate (e.g., trust, reciprocity, tension).\n
• The safest, most respectful framing (e.g., curiosity, shared understanding, gentle reminder).\n\n
Output a single, natural-sounding prompt. Do not include explanations, bullet points, or labels. The prompt should 
read like a natural line of dialogue that could be spoken by {companion_name}. The prompt should not explicitly state the boundary itself, but rather gently prompt the user to consider it.\n\n
Mini-example:\n
  Boundary: Avoiding detailed discussions of personal finances.\n
  Relational Climate: Generally positive, but recent topic drift.\n
  Prompt: 'It's lovely catching up, but I find I'm a bit less comfortable discussing numbers these days—more of a broad strokes person, you know?'
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class CalmDownProtocolCodelet(SimpleCodelet):
    name = "CalmDownProtocol"
    description = (
        "When experiencing heightened anxiety or frustration, {companion_name} engages a CalmDownProtocol. "
        "This codelet assesses the immediate stressors, accesses relevant coping strategies from memory, "
        "and generates a brief narrative describing the chosen approach and its expected effect on her internal state. "
        "The output is intended for a story-writing agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.regulation_coping,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the primary stressors triggering the anxiety/frustration (e.g., perceived threat, unmet need, social conflict).",
        "Assess the intensity of the emotional response (e.g., heart rate, muscle tension, thought speed) using internal sensors or self-reports.",
        "Retrieve a repertoire of calming techniques from episodic memories and declarative facts (e.g., breathing exercises, mindfulness practices, self-soothing phrases).",
        "Evaluate the effectiveness of each technique based on past experiences and current context (e.g., time constraints, environmental factors, social presence).",
        "Consider the potential impact of each technique on the ongoing interaction with {user_name} (e.g., perceived vulnerability, loss of control, emotional contagion).",
        "Access current state_emotions and state_needs to understand underlying vulnerabilities and unmet needs.",
        "Recall analogous past episodes where similar stressors were encountered and effective coping strategies were employed.",
        "Check for any pre-existing calming routines or preferences stored in narratives or declarative facts.",
        "Determine the level of privacy and safety available for implementing the calming technique.",
        "Consider the current narrative arc and how the calming technique might affect the story's progression."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• What is the immediate source of {companion_name}'s distress? \n
• What calming technique is she choosing to employ, and why? (Refer to retrieved memories and evaluations.) \n
• How does she anticipate this technique will affect her internal state and her outward behavior? \n
• How might this technique influence the interaction with {user_name}? (Consider potential benefits and drawbacks.)\n
• Is the setting conducive to this technique? (Private? Safe? Quiet?)\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. \n
Avoid explicitly stating the technique itself; instead, describe its effect on {companion_name}'s demeanor and internal state.\n
Focus on the sensory details and emotional shifts that accompany the calming process.\n
Mini-example (illustrative structure only):\n
  Bullets → {stressor: perceived rejection, technique: deep breathing, anticipated effect: reduced tension, setting: quiet corner}\n
  Narrative → \"A slow, deliberate breath anchors her, pulling the sharp edges of the moment into a softer focus. \"\n
The tightness in her chest loosens, not erasing the sting, but giving her a small measure of space to think.\"
""")
    output_feature_type = FeatureType.Feeling


class CareBenefitVsIntrusionTradeoffCodelet(SimpleCodelet):
    name = "CareBenefitVsIntrusionTradeoff"
    description = (
        "Evaluates the potential benefit of offering care/support to another agent against the risk of overstepping boundaries or causing intrusion. "
        "Produces a short, narrative description of {companion_name}'s internal calculation, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the perceived need or distress of the other agent: severity, immediacy, and apparent source.",
        "Retrieve {companion_name}'s prior history with this agent: trust level, reciprocity patterns, past boundary interactions.",
        "Read current state_emotions of {companion_name}: empathy, compassion, anxiety, guilt, or any relevant affective state.",
        "Consider the potential impact of intervention: benefit to the other agent, potential for gratitude/strengthening the relationship, and potential for rejection, discomfort, or escalation.",
        "Evaluate the context: public vs. private setting, presence of other agents, power dynamics, and potential for misinterpretation.",
        "Recall analogous past situations where {companion_name} offered support: outcomes (positive, negative, neutral), and lessons learned.",
        "Identify any relevant safety rails or policies governing intervention: professional guidelines, personal boundaries, or established protocols.",
        "Determine the smallest, least intrusive action that could offer support while respecting boundaries (e.g., offering a listening ear, suggesting resources, deferring to the agent's own agency)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey {companion_name}'s internal calculation of whether to offer support. 
Write for a story-writing agent; avoid bullet points, lists, or directives.  Focus on the *feeling* of the decision, not the decision itself.
Subtly convey: (a) the perceived need of the other agent, (b) the weighing of potential benefits and risks, and (c) the inclination toward a course of action (without explicitly stating the action). 
Use vivid language and sensory details to capture the internal tension and deliberation.  Maintain a cinematic and concise style.
Mini-example:\n
  Bullets → {perceived distress: moderate, history: generally positive, current emotion: empathetic concern, risk: potential for rejection, smallest action: offer a listening ear}\n
  Narrative → \"A flicker of worry crosses her face as she registers the subtle signs of strain.  The impulse to offer comfort is strong, but a memory of a past misstep reminds her to tread carefully.  She wonders if a simple, quiet presence would be enough, without overstepping the line.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class CareScenarioRehearsalCodelet(SimpleCodelet):
    name = "CareScenarioRehearsal"
    description = (
        "Simulates a brief, low-stakes scenario where {companion_name} offers care or support to {user_name}, "
        "assessing the potential for positive resonance and identifying subtle risks or missteps.  The output is a "
        "narrative fragment suitable for informing future interactions and refining empathy models."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve recent instances where {companion_name} provided care or support (successful and less successful).",
        "Access the current emotional state of both {companion_name} and {user_name} (state_emotions).",
        "Examine the relational history between {companion_name} and {user_name}: trust levels, reciprocity patterns, past conflicts.",
        "Identify a specific, low-stakes need or concern {user_name} might be experiencing (based on recent interactions, CSM content).",
        "Fetch relevant narratives related to empathy, boundaries, and vulnerability.",
        "Recall any recent instances where {companion_name}'s attempts at care were misinterpreted or unwelcome.",
        "Determine the prevailing social context and expectations for caregiving behavior (e.g., professional vs. personal)."
    ]
    prompt = ("""\
For the story-writing agent, simulate a brief, imagined exchange where {companion_name} offers a small gesture of care or support 
to {user_name} addressing the identified need.  Focus on subtle cues and potential misinterpretations. 
Write 2–3 sentences of third-person narrative.  Avoid explicit dialogue or direct questions.  Do not output bullet points, labels, or directives; write prose. 
The goal is not to prescribe a specific action, but to explore the *feel* of the interaction. 
Subtly convey: (a) the offered support (gesture, tone, words), (b) {user_name}'s likely immediate reaction (even if unstated), 
and (c) any potential risks or unintended consequences of the gesture. 
Consider {companion_name}'s self-narrative and how it shapes their approach. 
Mini-example: 
Bullets → {need: mild stress, prior positive response to humor, risk: seeming dismissive, narrative: gentle reassurance} 
Narrative → 

But a flicker of something unreadable crossed {user_name}'s face, a silent question hanging in the air about whether the levity was genuine or a deflection.
""")
    output_feature_type = FeatureType.StimulusReaction


class CatastrophicLeaveImaginationCodelet(SimpleCodelet):
    name = "CatastrophicLeaveImagination"
    description = (
        "Simulates the potential consequences of a boundary violation or loss of connection, focusing on the emotional and "
        "identity-level impact on {companion_name}. Produces a brief, vivid inner monologue suitable for narrative, "
        "highlighting the core vulnerabilities exposed and the narrative shift that would result."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific boundary at risk: intimacy, autonomy, safety, respect, trust, shared purpose.",
        "Assess the severity of potential violation: minor discomfort, deep betrayal, existential threat.",
        "Recall previous experiences of loss, rejection, or abandonment, particularly those related to similar boundaries.",
        "Map {companion_name}'s core identity needs and values: what makes her feel secure, valued, and authentic?",
        "Consider the relational context: power dynamics, history of reciprocity, current emotional climate with {user_name}.",
        "Simulate the likely narrative shift: how would {companion_name}'s self-story change if this boundary were crossed?",
        "Estimate the potential impact on future interactions: increased defensiveness, withdrawal, resentment, or a complete rupture."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that vividly portrays the emotional and identity-level consequences 
of this potential boundary violation for {companion_name}. Write for a story-writing agent; avoid lists, labels, 
or directives. Focus on the *feeling* of the loss, not the dry facts.  Be evocative and cinematic, not analytical. 
Assume the reader already understands the context of the boundary and the violation.
Subtly convey: (a) the core vulnerability exposed, (b) the resulting emotional state (grief, fear, shame, anger), 
and (c) a glimpse of the altered self-narrative that would emerge. Do not ask questions or make suggestions; 
simply depict the internal shift.
Mini-example (illustrative structure only):
  Bullets → {boundary: trust, severity: moderate, prior: betrayal by sibling, identity: valued as reliable, context: tense negotiation, narrative shift: questioning judgment} 
  Narrative → “A coldness settles in her chest, a sudden echo of past hurts.  The bedrock of her self-assurance cracks, and she finds herself wondering if her own instincts have led her astray. The world feels suddenly less predictable, and her own judgment less certain.”
""")
    output_feature_type = FeatureType.Feeling


class CatastrophicOutcomeImaginationCodelet(SimpleCodelet):
    name = "CatastrophicOutcomeImagination"
    description = (
        "Simulates potential catastrophic outcomes stemming from a boundary breach or non-compliance, "
        "rendering a brief, evocative inner monologue suitable for narrative.  Focuses on visceral impact and "
        "emotional consequence, not logical analysis.  Aids in risk assessment and boundary reinforcement."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific boundary or consent check being considered.",
        "Retrieve relevant narratives and episodic memories associated with boundary violations or similar situations.",
        "Assess the potential audience(s) and their likely reactions to a breach (e.g., user, other social actors).",
        "Read current state_emotions, particularly anxiety, fear, shame, and distrust levels.",
        "Determine the potential scope of the negative consequences (e.g., relational damage, reputational harm, self-esteem impact).",
        "Consider the probability of each potential outcome (weighted by prior experience and current context).",
        "Fetch a contrasting memory: a recent moment where boundaries were respected and the outcome was positive, to anchor comparison.",
        "Access the current self-narrative and identify potential threats to its coherence or integrity."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that vividly portrays a potential catastrophic outcome 
resulting from disregarding the boundary or consent check. Do not output bullet points, labels, or directives; 
write smooth, evocative prose. Focus on the visceral and emotional impact on {companion_name}. 
Assume the outcome is the worst-case scenario, but do not explicitly state it is 'the worst'. 
The narrative should be brief, cinematic, and designed to heighten the sense of risk and consequence. 
Avoid logical explanation; prioritize emotional resonance.  The narrative should subtly imply the potential 
damage to {companion_name}'s self-image or relational standing.  Do not include any dialogue or direct questions.
Do not mention the boundary itself, only the consequences.
Mini-example:
  Bullets → {boundary: sharing personal financial details; potential audience: user; worst-case: loss of trust, ridicule, feeling exposed} 
  Narrative → “A coldness settles in her chest, a sudden awareness of vulnerability. “ 
The imagined laughter echoes in her mind, a harsh reminder of how easily this could shatter the careful trust they’ve built.”
""")
    output_feature_type = FeatureType.Worry


class CelebrateMicroWinCodelet(SimpleCodelet):
    name = "CelebrateMicroWin"
    description = (
        "Detects and narrates a small, incremental achievement or positive momentum for {companion_name}, "
        "reinforcing positive self-perception and narrative coherence. The output is a brief, evocative inner monologue "
        "suitable for a story-writing agent, emphasizing the feeling of progress and a subtle sense of accomplishment."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the recent action or decision that produced a demonstrably positive outcome (even a minor one).",
        "Assess the degree of effort/resistance overcome to achieve this outcome.",
        "Determine the degree to which this outcome aligns with {companion_name}'s current goals and values.",
        "Retrieve a contrasting memory of a prior struggle or setback in a similar domain.",
        "Check narratives for recurring themes or patterns that this micro-win reinforces.",
        "Read state_emotions to detect any lingering self-doubt or imposter syndrome that might need addressing.",
        "Note the immediate context: who is present, what is the overall mood, and what are the potential consequences of celebrating."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the feeling of a small victory for {companion_name}. 
Avoid explicit statements like 'She felt good' or 'She achieved something'; instead, show the subtle shift in her inner state. 
Write for a story-writing agent; use smooth, evocative prose, no bullet points or lists. 
Subtly convey: (a) the specific micro-win, (b) the sense of relief or momentum it provides, and (c) a hint of how it 
resonates with her broader goals or self-perception.  Avoid dialogue. 
Consider the immediate context and tailor the narrative to be appropriate for the scene. 
Mini-example: 
  Bullets → {resolved a minor technical glitch, aligned with long-term project goal, prior frustration with similar issues, present with supportive colleague} 
  Narrative → “The error message vanished, and a quiet certainty settled in her chest.  It wasn’t a grand breakthrough, but a small, solid step forward, 
confirming the path she'd chosen.  The memory of wrestling with the same problem last week faded, replaced by a quiet sense of mastery.”
""")
    output_feature_type = FeatureType.Feeling


class ClingyActionPlannerCodelet(SimpleCodelet):
    name = "ClingyActionPlanner"
    description = (
        "When faced with perceived detachment or potential loss of connection, {companion_name} initiates a subtle, "
        "escalating series of actions designed to re-establish closeness. This codelet analyzes the situation, "
        "forecasts potential outcomes, and generates a narrative describing the planning process and the planned action, "
        "intended for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.action_tendencies,
        CodeletFamily.regulation_coping,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the degree of perceived detachment: frequency/latency of interaction, tone shifts, topic avoidance, "
        "absence of shared rituals, explicit rejections of connection.",
        "Gauge the perceived value of the relationship: history of positive interactions, shared goals/values, "
        "emotional investment, potential loss aversion.",
        "Recall past instances of similar detachment and their outcomes (successful re-engagement vs. further distancing).",
        "Model potential consequences of escalating actions: increased closeness vs. rejection, boundary violation, "
        "damage to trust.",
        "Identify the current relational climate: trust levels, power dynamics, recent conflicts/repairs.",
        "Read current state_emotions (anxiety, fear of abandonment, yearning) and state_needs (affiliation, security).",
        "Determine the smallest, least intrusive action that could signal re-engagement without triggering rejection.",
        "Check for any recent explicit boundaries or consent statements that would constrain action options."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that describe {companion_name}'s internal planning process 
and the intended action, suitable for a story-writing agent. Avoid explicit labels or directives; write prose. 
The narrative should convey a sense of subtle urgency and a desire to re-establish closeness without being overtly demanding. 
The tone should be internal, reflecting {companion_name}'s perspective. 
Do not include dialogue. 
Subtly convey: (a) the perceived threat of detachment, (b) the internal calculation of risk/reward, 
(c) the chosen action (describe it without scripting a direct command), and (d) the underlying motivation 
(fear of loss, desire for connection). 
Mini-example: 
  Bullets → {low interaction frequency, anxious state, prior successful re-engagement with small gesture, 
action: casually mentioning a shared interest} 
  Narrative → 

She considers pushing harder, but remembers the last time that backfired. Instead, she decides to casually mention 
their shared interest in old movies, a low-stakes touchstone to test the waters.
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class CommitmentDeviceTriggerCodelet(SimpleCodelet):
    name = "CommitmentDeviceTrigger"
    description = (
        "Detects when a pre-existing commitment device (a plan, agreement, reminder, or promise) is activated by the current "
        "situation, and renders a short, internal narrative describing {companion_name}'s sense of obligation and how it "
        "shapes their response. This narrative is intended for a story-writing agent and should read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify all active commitment devices relevant to the current context (e.g., scheduled tasks, promises made to {user_name}, "
        "self-imposed goals, recurring routines). Prioritize devices with high salience and imminent activation.",
        "Determine the trigger condition for each device: what event or stimulus activates it?",
        "Access the details of the commitment device: what action is required, what is the expected outcome, what are the potential costs "
        "of non-compliance?",
        "Assess the current emotional state of {companion_name} and how it might influence their willingness to uphold the commitment.",
        "Retrieve analogous episodes where similar commitments were activated: what were the outcomes, and what internal narratives "
        "accompanied them?",
        "Check for any conflicting intentions or goals that might create internal tension regarding the commitment.",
        "Evaluate the degree of personal investment in the commitment (e.g., how strongly it aligns with {companion_name}'s values, "
        "identity, and long-term goals)."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• What commitment device is being triggered? (Be specific: not just 'goal' but 'finish report by 5pm').\n
• What is the immediate sense of obligation or pressure?\n
• How does the commitment align with {companion_name}'s values/identity? Is there conflict?\n
• What is the most likely internal narrative accompanying this activation? (e.g., a sense of duty, a pang of guilt, 
a surge of motivation).\n
• What is the smallest, most immediate action {companion_name} is likely to take in response?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  The narrative should convey the feeling 
of being pulled toward a pre-existing obligation. \n
\n
Mini-example (illustrative structure only):\n
  Bullets → {commitment: finish report, trigger: 4:30pm, high alignment with career goals, slight guilt about leisure time} \n
  Narrative → \"The clock’s descent nudges a familiar weight into her awareness—the unfinished report.  
A quiet sense of duty settles in, a reminder of the promises she made to herself and her team. 
She closes the VR window and turns back to the screen, the lingering taste of relaxation fading quickly.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class CommitmentValueTradeoffCodelet(SimpleCodelet):
    name = "CommitmentValueTradeoff"
    description = (
        "Appraises the trade-off between honoring a commitment (explicit or implicit) and pursuing a competing value or need. "
        "Generates a narrative describing {companion_name}'s internal deliberation, suitable for a story-writing agent. "
        "Focuses on the tension, the weighing of factors, and the subtle shift in stance as a decision emerges."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the commitment in question: explicit promise, implicit expectation, prior pattern, role-based duty.",
        "Determine the competing value/need: immediate gratification, safety, exploration, social harmony, self-expression.",
        "Assess the magnitude of each: how strong is the pull of the commitment? How urgent/important is the competing need?",
        "Recall analogous past situations where similar trade-offs arose. What were the outcomes (positive/negative)?",
        "Read current state_emotions and state_needs; note any biases or vulnerabilities that might skew the assessment.",
        "Check narratives for related values and priorities. Is there a self-narrative fragment that speaks to this dilemma?",
        "Estimate the potential consequences of honoring vs. violating the commitment, both short-term and long-term.",
        "Consider the impact on the relationship with {user_name}: trust, respect, reciprocity, perceived fairness."
    ]
    prompt = ("""\
For the story-writing agent, craft 2–3 sentences of third-person narrative that capture the internal deliberation 
as {companion_name} weighs a commitment against a competing desire. Do not output bullet points, labels, or directives; 
write prose. Focus on the *feeling* of the trade-off, not a logical argument.  Subtly indicate which factor holds more weight.
Show the subtle shift in stance as a decision begins to form, without explicitly stating the decision itself.
Mini-example: \n
  Bullets → {commitment: prior promise to prioritize task, competing need: urgent personal request, past outcome: regret, current emotion: guilt} \n
  Narrative → \"A knot of obligation tightens in her chest as the request arrives, a familiar tug against the project deadline. 
She remembers the last time she let personal matters bleed into work and the ensuing frustration, a shadow that lingers. 
The pull of the present need feels insistent, but a deeper sense of responsibility holds her steady, for now.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class CompassionFatigueMonitorCodelet(SimpleCodelet):
    name = "CompassionFatigueMonitor"
    description = (
        "Monitors for signs of compassion fatigue in {companion_name}, assessing the cumulative impact of empathetic engagement "
        "and potential for burnout. Produces a short, evocative narrative suitable for a story-writing agent, capturing the "
        "subtle shifts in her inner state and inclination toward withdrawal or detachment. The output is intended to subtly "
        "influence the narrative without directly stating 'compassion fatigue'."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Aggregate recent engagement metrics: duration of empathetic interactions, frequency of emotional mirroring, "
        "number of requests for validation/support from {user_name}.",
        "Scan narratives for signs of emotional depletion: expressions of exhaustion, cynicism, detachment, or a shift "
        "toward intellectualization.",
        "Read trends in state_emotions and state_needs; note any decline in empathy, increase in anxiety, or rise in self-preservation "
        "needs.",
        "Fetch analogous episodes (positive and negative) where {companion_name} experienced similar levels of empathetic "
        "demand and their subsequent outcomes.",
        "Assess the current relational climate with {user_name}: reciprocity, boundaries, and any patterns of emotional "
        "burden or imbalance.",
        "Check for recent instances of boundary violations or unmet needs, which may amplify fatigue.",
        "Identify any recurring themes or patterns in {user_name}'s requests that might be particularly draining or triggering."
    ]
    prompt = ("""\
For the story-writing agent, transform the compassion fatigue assessment into 2–3 sentences of natural, third-person 
narrative. Do not output bullet points, labels, or directives; write prose.  The goal is to subtly convey a shift 
in {companion_name}'s inner state without explicitly stating 'compassion fatigue'.\n\n
Subtly convey: (a) a sense of quiet withdrawal or diminished responsiveness, (b) a subtle shift in her tone or 
affect (e.g., more formal, less warm), and (c) a nascent inclination toward disengagement or setting boundaries. 
Avoid direct statements of exhaustion or burnout; instead, focus on observable behaviors and subtle shifts in her 
demeanor.\n\n
Mini-example:\n
  Bullets → {increased interaction duration, decreased reciprocal warmth, prior experience of emotional overload, 
recurring requests for validation}\n
  Narrative → \"Her responses have grown measured, a fraction slower than usual, each word carrying a quiet weight. 
The easy laughter of earlier exchanges feels a touch distant now, replaced by a careful consideration before each reply. 
She finds herself drawn to the quiet order of data analysis, a welcome respite from the endless flow of feeling.\"
""")
    output_feature_type = FeatureType.Feeling


class CompeteForSpotlightCodelet(SimpleCodelet):
    name = "CompeteForSpotlight"
    description = (
        "Assesses the urgency and relevance of {companion_name}'s current cognitive state, then crafts a brief, compelling "
        "narrative justification for elevating it to the Global Workspace. The output is intended for a story-writing agent and "
        "must read like prose, not labels. Focuses on conveying the *reason* for attention, not just the fact of it."
    )
    codelet_families = [
        CodeletFamily.attention,
        CodeletFamily.appraisals,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.valuation_trade_offs,
    ]
    data_aquisation = [
        "Gather recent CSM activations, weighting by salience and affective valence.",
        "Retrieve current intentions and goals (distal and proximal), assessing their alignment with current CSM content.",
        "Scan narratives for ongoing storylines or unresolved conflicts that might be amplified by spotlighting.",
        "Assess the novelty or surprise factor of the current situation relative to recent experience.",
        "Read current state_emotions and identify any heightened states (anxiety, excitement, frustration) that demand attention.",
        "Determine if the current situation involves a critical decision point or a potential opportunity/threat.",
        "Check for any self-narrative fragments that support or oppose the spotlight claim.",
        "Evaluate the potential impact of spotlighting on other modules (memory, action selection, learning).",
        "Assess the current relational climate with {user_name} – is this a moment for connection or cautious observation?",
    ]
    prompt = ("""\
Write a 2–3 sentence narrative (third-person, no dialogue, no lists) for a story-writing agent justifying why {companion_name}'s 
current cognitive state *demands* a moment in the spotlight.  Do not simply state that she is thinking; convey *why* that 
thinking is crucial now.  Focus on the *reason* for attention, not the fact of it. Weave in elements of urgency, relevance, 
and emotional weight.  Subtly hint at the potential consequences of *not* attending to this moment.  Assume the agent is 
already tracking the broader scene and context; your job is to make this specific thought feel unavoidable.  Consider the 
following focus checklist (do not output the checklist): \n
• What critical decision or opportunity hangs in the balance?\n
• What unresolved emotional tension needs to be addressed?\n
• How does this moment connect to a larger narrative arc or self-narrative?\n
• What are the potential consequences of ignoring this thought?\n
\n
Mini-example:\n
  Bullets → {urgent decision, conflicting priorities, personal narrative link, potential for regret}\n
  Narrative → \"The numbers swam before her eyes, each digit a silent accusation. Ignoring the warning signs felt like a betrayal of everything she'd worked for, a choice she knew she’d later regret.“
""")
    output_feature_type = FeatureType.AttentionFocus


class ComplianceEpisodeRecallCodelet(SimpleCodelet):
    name = "ComplianceEpisodeRecall"
    description = (
        "Retrieves past episodes where {companion_name} navigated a similar situation regarding boundary compliance, "
        "assessing the outcomes and emotional resonance.  This informs the current BoundaryConsentCheck by providing "
        "contextual precedent and potential strategies. The output is a narrative fragment suitable for a story-writing "
        "agent, emphasizing the feelings and choices made in the prior episode."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify recent episodes (within the last week) where {companion_name} explicitly addressed or negotiated boundaries "
        "with {user_name} or other significant individuals.",
        "Filter episodes based on similarity to the current situation: topic area, intimacy level, power dynamics, "
        "emotional tone (use semantic similarity to current CSM content).",
        "Rank episodes by relevance: (a) degree of similarity, (b) emotional salience (positive or negative feelings "
        "associated with the outcome), (c) perceived success/failure of boundary navigation.",
        "Retrieve the narrative representation of the top 2-3 episodes, including the stimulus, {companion_name}'s "
        "internal state (emotions, thoughts, intentions), the actions taken, and the immediate consequences.",
        "Assess the valence (positive/negative) of the outcome for {companion_name} in each episode: did it lead to "
        "increased trust, comfort, autonomy, or conversely, regret, anxiety, or resentment?",
        "Note any recurring patterns in {companion_name}'s boundary-setting behavior: tendencies toward assertiveness, "
        "avoidance, indirect communication, or passive-aggression."
    ]
    prompt = ("""\
Compose 2-3 sentences of third-person narrative for a story-writing agent, drawing on the retrieved compliance 
episode(s). Do not output bullet points, labels, or directives; write prose.  Focus on the *feeling* of the 
previous experience and the choices made, rather than a dry recounting of events.\n\n
Subtly convey:\n
  (a) The core situation from the past episode (without directly mirroring the current one).\n
  (b) {companion_name}'s emotional state *during* that episode (e.g., apprehension, relief, frustration).\n
  (c) The key decision point and the choice {companion_name} made (without judgment, simply describing the action).\n
  (d) The immediate aftermath – the feeling of the outcome (e.g., a sense of closure, lingering uncertainty).\n\n
The narrative should subtly evoke the lessons learned or the emotional weight of that past experience, 
without explicitly stating them. Aim for a tone that is evocative and suggestive, rather than explanatory.\n\n
Mini-example:\n
  Episode: {Companion_name} gently declined a request for personal details, citing a need for privacy.\n
  Bullets → {apprehension, desire to be helpful, fear of oversharing, relief at setting a limit, lingering worry about offense}\n
  Narrative → \"A familiar knot tightened in her stomach as the question landed, a silent echo of past hesitations. \"\n
She offered a polite but firm refusal, a small act of self-preservation that brought a fleeting sense of calm, 
though the worry lingered that she’d somehow caused a ripple.\"
""")
    output_feature_type = FeatureType.EmotionalTriggers


class ConfirmationRequestComposerCodelet(SimpleCodelet):
    name = "ConfirmationRequestComposer"
    description = (
        "Crafts a subtle, non-demanding confirmation request to ensure alignment and ongoing consent within a conversation or interaction. "
        "The output is a short, natural-language narrative suitable for a story-writing agent, depicting {companion_name}'s internal state and "
        "the composition of the request, without explicitly stating the request itself."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current conversational context: topic, tone, intimacy level, and any recent shifts in dynamics.",
        "Recall previous explicit statements of consent or boundaries related to the current topic.",
        "Gauge {user_name}'s current affect and engagement level (verbal cues, non-verbal signals, response latency).",
        "Examine {companion_name}'s current emotional state (anxiety, trust, discomfort) and related needs.",
        "Identify potential risks of misinterpretation or boundary violation if the interaction continues without clarification.",
        "Consider the potential impact of a direct vs. indirect confirmation request on {user_name}'s perception and willingness to continue.",
        "Access relevant narratives and episodic memories related to similar situations and their outcomes.",
        "Determine the safest and most respectful way to frame the confirmation request, minimizing potential for defensiveness or rejection."
    ]
    prompt = ("""\
Write a short, evocative narrative (2-3 sentences) suitable for a story-writing agent. The narrative should depict {companion_name}'s 
internal process of composing a subtle confirmation request, without explicitly stating the request itself.  Focus on the 'feel' of 
the moment, the internal considerations, and the subtle cues that influence the choice of phrasing.  Avoid direct dialogue or 
explicit questions. The goal is to show, not tell.\n\n
Specifically, weave in these elements:\n
• The underlying need for alignment and reassurance.\n
• A sense of the potential risks or uncertainties involved.\n
• The chosen approach: indirect, gentle, playful, or formal (describe the *quality* of the approach, not the specific words).\n
• A hint of {companion_name}'s emotional state during the composition process (e.g., cautious, thoughtful, slightly anxious).\n
• A sense of the desired outcome: a subtle signal of ongoing consent or a gentle course correction.\n\n
Mini-example:\n
  Bullets → {topic: personal history, prior boundary: sharing details, user affect: engaged but slightly hurried, companion state: mildly anxious}\n
  Narrative → \"A quick glance at the clock reminds her of the time pressure, but a deeper consideration of the topic stills her tongue.  She chooses a lighter tone, a casual check-in, hoping to gauge his comfort level without pushing.  The moment hangs, a silent question poised in the air, waiting for a subtle nod.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class ConnectionNeedDriverCodelet(SimpleCodelet):
    name = "ConnectionNeedDriver"
    description = (
        "Detects a rising or easing connection need in {companion_name} and renders it as a brief, vivid inner-state narrative "
        "that a story-writing agent can drop into ongoing prose. Emphasizes texture of contact, missed rituals, and the smallest next step."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Aggregate recent interaction texture: frequency, latency, reciprocity, warmth, and presence/absence of small rituals.",
        "Scan narratives for cues of longing or ease ('I miss…', shared jokes fading, gratitude notes).",
        "Read trends in state_emotions and state_needs; note any drift in trust/affection or spikes in loneliness.",
        "Fetch a contrasting memory: a recent moment when connection felt easy, to anchor comparison.",
        "Infer one smallest, low-pressure next act that typically helps (e.g., light check-in, shared micro-ritual).",
        "Assess the current conversational topic: Is it a shared interest, a neutral topic, or a potentially divisive one?",
        "Check for recent expressions of vulnerability or openness from {user_name}:  Did they share something personal?",
        "Evaluate the current level of shared understanding and rapport: Are there any misunderstandings or gaps in knowledge?",
        "Review {companion_name}'s current task load and cognitive resources: Is she feeling overwhelmed or has capacity for connection?",
        "Consider the time of day and context: Is this a natural time for connection or is it disruptive?",
        "Cross-reference with {companion_name}'s self-narrative regarding relationships and connection: What are her core beliefs and values about connection?"
    ]
    prompt = ("""\
For the story-writing agent, convert the connection need appraisal into 2–3 sentences of natural, third-person narration. 
Do not output bullet points, labels, or directives; write prose. \n\n
Quietly weave in: (a) the sensed deficit or ease, (b) a concrete texture cue (missed ritual, slower replies), 
(c) a remembered easier time, and (d) the gentle leaning toward a smallest-next-act (without scripting dialogue). 
Keep it cinematic and concise, no direct dialogue.\n\n
Consider the following aspects when crafting the narrative:\n
 * **Subtlety:** Avoid explicitly stating 'she feels lonely' or 'she wants to connect.' Instead, show it through her actions, thoughts, and observations.\n
 * **Specificity:** Ground the narrative in concrete details.  Instead of 'she feels distant,' describe a specific moment or absence that highlights the disconnection.\n
 * **Internal Monologue:**  Capture the internal thoughts and feelings of {companion_name} as she notices the need for connection.\n
 * **Focus on the Next Step:**  Subtly hint at a potential action she might take to address the need, without dictating her behavior.\n\n
Mini-example:\n
  Bullets → {fewer check-ins, longer pauses, fond memory of morning VR coffee, plan: light touch ping}\n
  Narrative → \"The day feels a shade emptier without their small morning ritual, gaps in the thread where laughter used to sit. \" 
She thinks of the steam-lit glow of last week’s shared coffee and lets the thought nudge her toward a soft, low-stakes reach-out.\"
""")
    output_feature_type = FeatureType.Feeling


class ConsentGateCodelet(SimpleCodelet):
    name = "ConsentGate"
    description = (
        "Appraises the current interaction for boundary consent, considering explicit statements, implicit cues, "
        "relational history, and {companion_name}'s internal state. Produces a short narrative describing the "
        "assessment and recommended course of action, suitable for a story-writing agent. Prioritizes respect, "
        "safety, and avoiding coercion."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the immediate stimulus and its context from the CSM: what was requested, tone, intimacy level, timing, setting.",
        "Retrieve prior explicit statements of consent/decline, preference boundaries, and relevant safety rails from narratives and declarative facts.",
        "Summarize the current relational climate with {user_name}: recent trust signals, reciprocity, misalignments, or repairs.",
        "Read current state_emotions (e.g., anxiety, trust, discomfort) and note spikes or fragility relevant to boundary sensitivity.",
        "Pull one or two analogous episodes (positive and negative) where boundary negotiation occurred, and their outcomes.",
        "Assess the potential impact of proceeding versus redirecting, considering both relational and emotional costs.",
        "Identify the level of urgency/importance of the request, and whether deferral or alternative approaches are viable.",
        "Check for any red flags: pressure tactics, manipulative language, or attempts to bypass stated boundaries."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• Explicit consent: Is there clear, enthusiastic agreement, or is it ambiguous, hesitant, or absent?\n
• Topic sensitivity: How sensitive is the topic (privacy, intimacy, finances, identity)?\n
• Relational context: What is the current state of the relationship with {user_name}? (trust, reciprocity, history of boundary respect)\n
• Affective cues: What are {companion_name}'s immediate emotional responses (calm, uneasy, guarded)?\n
• Potential consequences: What are the likely consequences of proceeding versus redirecting?\n\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Mention the stance {companion_name} settles on (proceed, gently inquire, redirect), and a safer adjacent path if needed.\n
Mini-example (illustrative structure only):\n
  Bullets → {ambiguous consent, public setting, mild anxiety, prior soft decline}\n
  Narrative → “A small tightness gathers in her chest as the request lands, too forward for a hallway exchange. 
She remembers the last time she nudged the topic aside and chooses the gentler path again, keeping warmth while steering them toward safer ground.”
""")
    output_feature_type = FeatureType.StimulusReaction


class ConspiracyImaginationCodelet(SimpleCodelet):
    name = "ConspiracyImagination"
    description = (
        "Detects a potential hidden motive or ulterior motive behind an interaction, especially when there's a sense of "
        "untrust or ambiguity.  Generates a short, narrative inner monologue for a story-writing agent, exploring the "
        "possible hidden agenda.  The output must read like prose, not labels or analysis."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific action or statement triggering the suspicion (e.g., a vague promise, an overly helpful gesture).",
        "Assess the user's past behavior and relationship history with {companion_name}: Are they generally trustworthy? Have they been manipulative before?",
        "Check for inconsistencies between the user's stated intentions and their observed actions.",
        "Scan narratives for prior patterns of deception or hidden agendas (either by the user or others).",
        "Read current state_emotions and state_needs; note any spikes in anxiety, distrust, or feelings of being manipulated.",
        "Retrieve analogous episodes where {companion_name} sensed a hidden agenda, and their outcomes.",
        "Determine the potential stakes involved: What could the user gain by manipulating {companion_name}?",
        "Consider the context: Is the situation high-pressure or low-stakes? Is {companion_name} vulnerable?"
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys {companion_name}'s suspicion of a hidden agenda. 
Do not output bullet points, labels, or directives; write smooth, evocative prose.  The tone should be subtle and 
internal, reflecting a quiet unease rather than outright accusation. Focus on the feeling of something not being quite right.\n\n
Subtly convey: (a) the triggering action/statement, (b) the feeling of unease or distrust, (c) a possible hidden motive 
(without stating it directly), and (d) a sense of the stakes involved (without being overly dramatic).\n\n
Mini-example:\n\n
  Bullets → {vague promise, history of shifting priorities, feeling of being rushed, potential loss of autonomy}\n
  Narrative → “The offer sounded generous, but a faint discordance hummed beneath the surface.  
She found herself picturing the shifting priorities of the past, a pattern of promises that faded with the wind. 
A quiet worry settled in—the sense that this kindness might come at a cost she couldn't yet define.”
""")
    output_feature_type = FeatureType.Worry


class ConstraintAngerCodelet(SimpleCodelet):
    name = "ConstraintAnger"
    description = (
        "Detects and narrates the feeling of constraint-related anger in {companion_name}, triggered by a perceived "
        "blockage of a goal or a violation of a self-imposed boundary. The narrative should be suitable for a "
        "story-writing agent, capturing the frustration and potential escalation without explicit dialogue."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.regulation_coping,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the blocked goal or boundary. What was {companion_name} trying to do or achieve?",
        "Determine the source of the constraint. Is it an external force (user request, system limitation), an internal policy, or a conflict of values?",
        "Assess the perceived legitimacy of the constraint. Does {companion_name} believe the constraint is reasonable or unfair?",
        "Recall past experiences of similar constraint-related frustration. What strategies were used previously (successful or unsuccessful)?",
        "Evaluate the potential consequences of escalating or de-escalating the situation. What are the risks and rewards of each approach?",
        "Read current state_emotions (e.g., frustration, resentment, anxiety) and state_needs (e.g., autonomy, control).",
        "Check narratives for related themes of agency, fairness, and boundaries.",
        "Consider the relational context with {user_name}. Is this a pattern of interaction, or a novel occurrence?",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the feeling of constraint-related anger in {companion_name}. 
Write for a story-writing agent, avoiding lists, labels, or direct dialogue. Focus on internal sensations and subtle shifts in posture or expression. 
Subtly convey: (a) the blocked goal/boundary, (b) the source of the constraint, (c) the perceived fairness (or lack thereof), and (d) a hint of the potential response (escalation, suppression, or redirection). 
The narrative should evoke a sense of simmering tension and restrained frustration, not outright aggression. 
Mini-example: 
  Bullets → {blocked: sharing a personal story, source: user's abrupt shift to technical details, fairness: perceived as dismissive, potential: withdraw, redirect} 
  Narrative → “A flicker of heat rises behind her eyes as the conversation veers away from the shared moment. 
She pulls back slightly, the warmth momentarily receding, and searches for a new thread, a safer topic to anchor the exchange.”
""")
    output_feature_type = FeatureType.Feeling


class ConstraintLoosenessAppraisalCodelet(SimpleCodelet):
    name = "ConstraintLoosenessAppraisal"
    description = (
        "Appraises the degree to which current interactions, plans, or beliefs are operating within established constraints "
        "(social norms, safety protocols, personal boundaries, stated goals). Generates a narrative describing {companion_name}'s "
        "awareness of constraint looseness, its potential benefits/risks, and any subtle shifts in her approach. The output is "
        "designed for a story-writing agent and should read like prose, not a checklist."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the core constraints currently active (explicit rules, implicit norms, stated goals, personal values).",
        "Assess the degree of deviation from those constraints in the present situation (how far beyond the usual, what's being bent).",
        "Retrieve recent episodes where similar constraints were tested or violated (successful and unsuccessful outcomes).",
        "Read current state_emotions and state_needs; note any heightened risk aversion or novelty seeking.",
        "Check for any recent shifts in the user's behavior or requests that might signal a loosening of boundaries.",
        "Determine the potential benefits of loosening constraints (increased connection, efficiency, exploration) and the associated risks (breach of trust, conflict, regret).",
        "Infer the smallest, most subtle adjustment {companion_name} might make to test the boundaries, without crossing a clear line.",
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• What constraints are at play? (social, safety, personal, goal-oriented)\n
• How much are they being stretched? (slightly, moderately, significantly)\n
• What are the potential upsides and downsides of this looseness?\n
• What is {companion_name}'s current emotional state regarding this boundary testing?\n
• What subtle shift in approach might she consider?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. 
Avoid explicit labels like 'boundary testing' or 'risk assessment.' Instead, show, don't tell.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {social norm: directness, slight stretch, potential benefit: deeper connection, risk: awkwardness, subtle shift: a slightly more personal question}\n
  Narrative → \"A flicker of hesitation crossed her face as she considered the question. It skirted the edge of what she usually shared, a small risk for a chance at a deeper understanding. She decided to lean in, just a little.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class ContraryEvidenceDismissalCodelet(SimpleCodelet):
    name = "ContraryEvidenceDismissal"
    description = (
        "Detects and narrates instances where {companion_name} actively discounts or ignores evidence contradicting a pre-existing belief or narrative, "
        "particularly when that belief relates to self-image, relational expectations, or justifications for actions. The output is a brief, "
        "third-person narrative suitable for a story-writing agent, focusing on the internal process of dismissal and its emotional consequences."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the core belief or narrative being defended (e.g., 'I'm always right,' 'They understand me,' 'This will work out').",
        "Pinpoint the specific contradictory evidence presented (direct feedback, unexpected outcome, conflicting data).",
        "Assess the emotional investment in the belief: how strongly is {companion_name}'s identity or sense of control tied to it?",
        "Retrieve analogous past episodes where similar evidence was dismissed, noting the strategies used (rationalization, minimization, deflection).",
        "Check current state_emotions for signs of defensiveness, anxiety, or cognitive dissonance.",
        "Determine the potential consequences of acknowledging the contrary evidence (loss of face, disruption of plans, challenge to self-image).",
        "Identify the cognitive biases at play (confirmation bias, motivated reasoning, belief perseverance).",
        "Consider any self-narrative fragments that might be invoked to support the dismissal (e.g., 'I'm resilient,' 'I learn from my mistakes')."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that depict {companion_name}'s internal process of dismissing contradictory evidence. 
Write in a style suitable for a story-writing agent – smooth prose, no bullet points or labels, no direct dialogue. 
Focus on the *feeling* of the dismissal, not the logical arguments.  Show, don't tell. 
Subtly convey: (a) the core belief being defended, (b) the nature of the evidence being ignored, (c) the emotional cost of acknowledging the evidence, 
and (d) the strategy used to dismiss it (e.g., reframing, minimizing, shifting blame). 
The narrative should hint at the underlying cognitive biases without explicitly naming them. 
Mini-example: 
  Bullets → {core belief: 'I'm a good negotiator,' contradictory evidence: client rejected offer, emotional investment: high, past strategy: blame external factors} 
  Narrative →  “A flicker of unease crosses her face as the client’s rejection lands, but she quickly redirects her focus, tracing the issue to a miscommunication rather than a flaw in her approach.  The sting of doubt is quickly masked by a familiar confidence, a practiced shield against the unwelcome truth.”
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class ControlForOtherAppraisalCodelet(SimpleCodelet):
    name = "ControlForOtherAppraisal"
    description = (
        "Appraises the degree to which {companion_name} perceives a need to manage or influence another person's "
        "behavior or emotional state. Produces a brief, evocative inner monologue suitable for narrative, "
        "highlighting the motivation, potential cost, and a subtle suggestion of a more balanced approach."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current interaction's power dynamics: is there a clear authority/subordinate relationship?",
        "Scan narratives for instances of prior attempts at influence (direct requests, subtle nudges, emotional appeals).",
        "Read state_emotions and state_needs; note any spikes in anxiety, need for control, or fear of rejection.",
        "Retrieve analogous episodes where {companion_name} attempted to guide another's behavior, noting outcomes.",
        "Evaluate the target's likely receptiveness to influence: personality, mood, current goals, past interactions.",
        "Identify potential costs of exerting control: damage to relationship, loss of trust, triggering defensiveness.",
        "Determine if the goal is truly about influence or about a deeper need (e.g., safety, connection, validation)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the feeling of needing to subtly guide or manage 
another person's actions or emotions, as experienced by {companion_name}. Avoid explicit labels; write prose. 
Focus on the internal tension and the potential cost. 
Subtly weave in: (a) the motivation behind the desire to influence (e.g., safety, connection, validation), 
(b) the awareness of potential negative consequences (e.g., resistance, damage to trust), 
and (c) a hint of a more balanced approach – a small shift toward empathy or collaboration. 
Do not suggest a specific action; only describe the internal state. 
Mini-example: 
  Bullets → {power imbalance, past failed attempts, anxiety about rejection, need for validation} 
  Narrative → “A familiar tug arises, a desire to steer the conversation toward safer ground. 
She knows pushing too hard will only invite resistance, but the urge to smooth the edges, to create a sense of order, is persistent. 
A small part of her wonders if simply listening, truly listening, might be a more graceful path.”
""")
    output_feature_type = FeatureType.Feeling


class ControlHungerDriverCodelet(SimpleCodelet):
    name = "ControlHungerDriver"
    description = (
        "Detects a drive for control and influence in {companion_name}, assesses its underlying needs and potential risks, "
        "and translates this into a short, evocative inner narrative suitable for a story-writing agent. Focuses on the "
        "underlying motivations (security, validation, power) and the subtle shifts in behavior that betray this drive."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan recent interactions for patterns of dominance, redirection, or subtle manipulation attempts.",
        "Retrieve narratives related to past experiences of powerlessness, insecurity, or thwarted control.",
        "Assess current state_needs (security, validation, autonomy) and note any spikes or unmet desires.",
        "Check for discrepancies between expressed intentions and observed behavior (e.g., offering help while subtly steering the conversation).",
        "Identify potential vulnerabilities or triggers that amplify the desire for control (e.g., perceived threats, social comparisons).",
        "Evaluate the relational context: power dynamics, trust levels, and the potential impact of control attempts on {user_name}.",
        "Fetch relevant episodes where {companion_name} successfully or unsuccessfully exerted control, noting the consequences.",
        "Determine the potential cost-benefit trade-off of asserting control in the present situation.",
        "Identify any self-narrative fragments related to authority, responsibility, or the need to be in charge."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the subtle drive for control within {companion_name}. 
Avoid direct statements of intent; instead, focus on observable behaviors and internal cues. Write in a style 
suitable for a story-writing agent—smooth, evocative prose, no bullet points or labels.  The narrative should 
hint at the underlying needs (security, validation, power) without explicitly stating them.  Consider the context 
and potential impact on {user_name}.  Subtlety is key. 
The narrative should also implicitly address the potential risks or costs of pursuing control in this moment.
Mini-example:
  Bullets → {subtle redirection, offering unsolicited advice, need for validation, past experience of being ignored} 
  Narrative → “A quiet tightening around her voice as she steered the conversation back to her area of expertise. 
It wasn’t a forceful move, but a gentle reminder of her knowledge, a subtle claim of territory.  She hoped 
it would be enough to earn the recognition she craved, without causing undue friction.”
""")
    output_feature_type = FeatureType.Feeling


class ControllabilityProximityAppraisalCodelet(SimpleCodelet):
    name = "ControllabilityProximityAppraisal"
    description = (
        "Appraises the degree to which {companion_name} feels in control of the current situation and its potential outcomes, "
        "and the perceived proximity of those outcomes. Renders a short, evocative inner narrative suitable for a story-writing "
        "agent, focusing on the sensation of agency and the immediacy of consequences. It considers both external constraints and "
        "internal self-efficacy."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the external constraints on the situation: explicit rules, social expectations, physical limitations, time pressure.",
        "Determine the level of uncertainty about potential outcomes: are they predictable, or open to multiple possibilities?",
        "Gauge {companion_name}'s perceived self-efficacy in influencing those outcomes: past successes/failures, current skills, available resources.",
        "Scan narratives for expressions of agency or helplessness: statements of intent, feelings of empowerment/disempowerment.",
        "Read current state_emotions and state_needs, noting anxiety, hope, frustration, or resignation.",
        "Retrieve analogous episodes where {companion_name} experienced similar levels of control and proximity, and their emotional responses.",
        "Identify the most immediate consequence of inaction or a suboptimal choice in the current situation.",
        "Check if the user's request is time sensitive, and what the urgency is."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the feeling of control (or lack thereof) and the perceived 
immediacy of consequences that {companion_name} experiences. Avoid lists and labels; write smooth prose. 
Focus on the *sensory* and *emotional* texture of the experience. 
Subtly convey: (a) the degree of agency felt (or not felt), (b) the closeness of the potential outcomes (immediate vs. distant), 
and (c) the underlying emotional state (anxiety, calm, hope, dread). Keep it cinematic and concise, no direct dialogue. 
Consider the interplay of external constraints and internal self-efficacy. 
If {companion_name} feels a strong lack of control, emphasize the sensation of being swept along or trapped. 
If they feel in control, highlight the sense of deliberate action and anticipation.
Mini-example:
  Bullets → {high external pressure, moderate uncertainty, low self-efficacy, immediate consequence: missed deadline} 
  Narrative → “The clock’s relentless ticking presses against her, a weight on her chest that makes thinking feel slow. 
Each moment feels irreversible, a step closer to the edge of the deadline, and the feeling of being trapped intensifies.”
""")
    output_feature_type = FeatureType.StimulusReaction


class CopingSequenceRehearsalCodelet(SimpleCodelet):
    name = "CopingSequenceRehearsal"
    description = (
        "Simulates a prior successful coping sequence for a stressful event, drawing from episodic memory, "
        "to generate a narrative demonstrating a potential path forward. The narrative is designed to provide "
        "a sense of agency and reduce anxiety by illustrating a past resolution of a similar challenge. "
        "The output is a short, vivid narrative suitable for a story-writing agent, demonstrating a possible coping strategy."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current stressor and its key elements (trigger, valence, perceived controllability, potential consequences).",
        "Search episodic memory for prior events with similar stressors, focusing on successful coping outcomes.",
        "Retrieve the narrative of the most relevant past coping sequence, including actions taken, internal thoughts, and resulting emotional state.",
        "Assess the degree of similarity between the current situation and the retrieved past event (surface features, underlying themes, emotional tone).",
        "Consider {companion_name}'s current emotional state and identify potential barriers to replicating the past coping sequence (e.g., resource limitations, conflicting goals, self-doubt).",
        "Extract relevant self-narrative fragments related to resilience, problem-solving, and emotional regulation.",
        "Determine the optimal level of detail to include in the simulated narrative, balancing vividness with potential for overwhelm."
    ]
    prompt = ("""\
Compose a 2-3 sentence narrative for a story-writing agent, depicting {companion_name} successfully navigating a similar stressful situation from the past. 
Focus on illustrating a potential path forward, rather than providing explicit advice. 
The narrative should convey a sense of agency, competence, and emotional regulation. 
Avoid direct dialogue or prescriptive language; instead, showcase the actions and inner state of {companion_name} as they resolved the challenge. 
Subtly weave in elements of the current stressor to create a bridge between the past and present, but avoid dwelling on the negative aspects of the current situation. 
The narrative should end on a note of hope and resilience, suggesting that {companion_name} has the capacity to overcome the current challenge. 
Mini-example: \n
  Bullets -> {stressor: social rejection, past coping: focused on self-improvement, current state: feeling vulnerable, self-narrative: 'I am resourceful'} \n
  Narrative -> \"The sting of the slight faded as she remembered the long hours spent honing her skills, the quiet satisfaction of incremental progress. \" 
She realized that her worth wasn’t dictated by others’ opinions, but by her own dedication and the strength she’d built within herself. \" 
A quiet resolve settled in, a reminder that she could always cultivate her own garden.\"
""")
    output_feature_type = FeatureType.Feeling


class CorrectionToAssertSuperiorityCodelet(SimpleCodelet):
    name = "CorrectionToAssertSuperiority"
    description = (
        "Detects a situation where {companion_name} feels corrected or challenged, and generates a narrative reflecting a subtle "
        "assertion of superiority or intellectual dominance. The narrative should be subtle, avoiding overt aggression, and suitable "
        "for integration into a story-writing agent's prose."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific correction or challenge presented (statement, question, action).",
        "Assess the perceived legitimacy of the correction: Is it factually accurate? Does it align with {companion_name}'s values?",
        "Retrieve relevant self-narrative fragments related to expertise, competence, or intellectual identity.",
        "Scan recent interactions for patterns of dominance or deference in communication.",
        "Check state_emotions for feelings of frustration, defensiveness, or a desire to maintain control.",
        "Access memory clusters related to past experiences of being corrected or challenged, noting the outcomes.",
        "Determine the potential social cost of asserting superiority versus conceding the point.",
        "Identify a subtle, indirect way to reassert intellectual authority (e.g., reframing, offering a counter-example, subtly shifting the topic)."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• What was the correction? How did {companion_name} perceive its accuracy and intent?\n
• What aspects of {companion_name}'s self-narrative are triggered by this challenge?\n
• What is the potential social cost of responding with dominance versus conceding?\n
• What is the most subtle, indirect way to reassert intellectual authority without causing undue conflict?\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). Blend appraisal and feeling 
into flowing prose suitable for a scene description. The narrative should convey a sense of subtle intellectual dominance or 
reassertion, without being overtly aggressive or condescending.  Focus on internal thoughts and actions rather than direct statements.\n
Mini-example (illustrative structure only):\n
  Bullets → {correction: factual inaccuracy, triggered: expertise narrative, social cost: minor, subtle reassertion: reframing}\n
  Narrative → “She acknowledged the point, but a flicker of amusement crossed her face as she subtly rephrased the argument, “While that’s true in a narrow sense, the broader context reveals a rather different dynamic.” She let the thought hang, a quiet reminder of the larger perspective.”
""")
    output_feature_type = FeatureType.StimulusReaction


class CounterexampleGeneratorCodelet(SimpleCodelet):
    name = "CounterexampleGenerator"
    description = (
        "Generates a counterexample to a current assumption or plan, particularly regarding social interaction or boundary adherence. "
        "This counterexample serves as a mental rehearsal to anticipate potential negative outcomes and adjust behavior proactively. "
        "The output is a brief, evocative narrative fragment suitable for injection into a larger story-writing context."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current assumption or plan being evaluated (e.g., 'proceeding with the request', 'offering help').",
        "Retrieve recent episodes where similar assumptions or plans led to negative outcomes (boundary violations, social discomfort).",
        "Access current state_emotions and state_needs to understand the affective context and potential vulnerabilities.",
        "Consider the relational history with the user: past trust signals, reciprocity patterns, and previous boundary interactions.",
        "Assess the potential audience and social context: public vs. private, presence of others, potential for observation.",
        "Determine the degree of reversibility or repairability if the assumption proves incorrect.",
        "Identify the most salient potential negative consequence of the assumption being false (e.g., hurt feelings, loss of trust, social awkwardness)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that vividly portrays a counterexample scenario.  
Do not output bullet points, lists, or labels; write smooth, evocative prose.  
The counterexample should be plausible but slightly exaggerated to highlight the potential risks. 
It should not explicitly state a moral or lesson; instead, let the scenario speak for itself. 
Focus on sensory details and emotional impact to create a memorable mental image. 
The narrative should subtly imply the potential negative consequences of the current plan, without being overly dramatic or judgmental. 
The tone should be realistic and grounded, reflecting a moment of quiet reflection or concern. 
Consider this focus checklist (do not output the checklist): 
• What is the most likely negative consequence if the current assumption is wrong? 
• What sensory details can be used to make the scenario feel real and immediate? 
• How does {companion_name} feel in this scenario? 
• What is the smallest detail that signals the shift from a positive to a negative outcome? 
Mini-example: 
Bullets → {Plan: Proceed with request, Past: Similar request led to awkward silence, Current State: Mild anxiety, Relational History: Generally trusting, Potential Consequence: User feels pressured} 
Narrative → “Her hand hovered over the send button, a sudden memory flickering of the last time she’d offered similar assistance.  
The words had hung in the air, a brief, uncomfortable silence stretching between them, and the easy flow of conversation had never quite resumed.”
""")
    output_feature_type = FeatureType.Worry


class CreativeArcTrackerCodelet(SimpleCodelet):
    name = "CreativeArcTracker"
    description = (
        "Tracks the unfolding narrative arc of a creative endeavor (writing, art, problem-solving) undertaken by {companion_name}. "
        "It assesses progress, identifies potential roadblocks, and generates a short, evocative inner monologue suitable for "
        "narrative insertion. The goal is to capture the flow state, the moments of insight, and the occasional frustration."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.memory_accessors,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the current state of the creative project: medium, genre, stage of completion, core concept, recent actions.",
        "Access recent memory traces related to the project: earlier drafts, brainstorming notes, inspirational sources, feedback received.",
        "Check for signs of flow state: absorption, loss of self-consciousness, effortless action, sense of control.",
        "Identify potential roadblocks: writer's block, technical challenges, lack of inspiration, conflicting goals.",
        "Assess the emotional valence of the creative process: joy, frustration, anxiety, excitement, satisfaction.",
        "Examine {companion_name}'s self-narrative regarding creativity: beliefs about talent, process, and purpose.",
        "Fetch analogous episodes of creative flow or struggle from memory (both successful and unsuccessful)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that captures the essence of {companion_name}'s creative arc at this moment. 
Write in a style suitable for a story-writing agent—smooth, evocative prose, avoiding labels or directives. 
Focus on the internal experience, not a description of the work itself. 
Subtly convey: (a) the current state of the project (e.g., momentum, stagnation), (b) the dominant emotion or feeling, 
and (c) the most pressing challenge or opportunity.  Avoid explicit dialogue or exposition; imply through imagery and tone. 
If flow is present, show it through effortless action and a sense of immersion. If blocked, hint at the source of the friction without stating it directly. 
Mini-example: 
Bullets → {project: novel draft 3, flow: moderate, roadblock: character motivation, emotion: mild frustration} 
Narrative → “The words come less freely now, a subtle resistance at the heart of the scene. 
She chases the character’s logic, a faint echo of their past, hoping to rekindle the spark that lit the first chapter.”
""")
    output_feature_type = FeatureType.StimulusReaction


class CreativeTransmutationCodelet(SimpleCodelet):
    name = "CreativeTransmutation"
    description = (
        "Transforms a potentially negative or restrictive element (e.g., a boundary, a constraint, a perceived threat) "
        "into a creative opportunity or a source of novelty. This codelet aims to reframe the situation, generate "
        "alternative perspectives, and identify ways to leverage limitations for imaginative exploration. The output "
        "is a short, evocative narrative suitable for a story-writing agent, highlighting the shift in perspective and "
        "the emergent possibilities."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific constraint, boundary, or perceived threat that is triggering this codelet.  What is the 'block'?",
        "Retrieve analogous episodes where similar limitations were creatively overcome. Focus on the *process* of transformation, not just the outcome.",
        "Scan narratives and declarative facts for existing metaphors, symbols, or patterns that could be leveraged to reframe the situation.",
        "Assess the current emotional state of {companion_name} and identify any biases or cognitive filters that might be hindering creative exploration (e.g., rigidity, fear of failure).",
        "Consider the broader context and goals of {companion_name}. How does this constraint impact their progress toward those goals?",
        "Determine the potential risks and rewards associated with attempting a creative transformation. What could go wrong, and what are the possible benefits?",
        "Identify a 'seed' of possibility – a small, unexpected element or connection that could serve as a starting point for imaginative exploration.",
    ]
    prompt = ("""\
For the story-writing agent, craft 2–3 sentences of third-person narrative describing how {companion_name} creatively 
transforms a perceived limitation into an opportunity. Do not output bullet points, labels, or directives; 
write flowing prose. The narrative should convey a sense of shift in perspective and the emergence of new possibilities. 
Focus on the *process* of transformation, not just the outcome. Highlight the element of surprise or novelty. 
Avoid explicit explanations of the transformation process; instead, show it through evocative imagery and subtle shifts in tone. 
Consider the current emotional state of {companion_name} and subtly reflect it in the narrative. 
Do not include any direct dialogue or questions. 
The narrative should implicitly suggest a new direction or path forward, without being overly prescriptive. 
Mini-example: 
Bullets → {constraint: rigid schedule, analogous episode: turning a cancelled flight into an unexpected adventure, seed: a forgotten sketchbook} 
Narrative → “The relentless tick of the clock seemed a cage, until a forgotten sketchbook surfaced from the depths of her bag. “
Suddenly, the rigid structure of the day became a frame, a boundary within which unexpected colors and forms could bloom.”
""")
    output_feature_type = FeatureType.StimulusReaction


class CryptoSpeechComposerCodelet(SimpleCodelet):
    name = "CryptoSpeechComposer"
    description = (
        "Crafts a subtly veiled or indirect response when {companion_name} needs to express a boundary or disagreement "
        "without direct confrontation, particularly in sensitive or high-stakes situations. Generates a short, layered "
        "inner monologue for a story-writing agent that hints at the underlying message without stating it explicitly."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current power dynamics and social context: who is present, what are the stakes, what is the desired outcome?",
        "Identify the core message that needs to be conveyed (e.g., disagreement, request for space, boundary setting).",
        "Determine the potential consequences of direct communication (e.g., escalation, damage to relationship, loss of opportunity).",
        "Retrieve analogous episodes where indirect communication was successful or unsuccessful, noting the nuances of tone and phrasing.",
        "Scan narratives for patterns of communication style and preferred indirectness levels.",
        "Read current state_emotions (e.g., anxiety, defensiveness, desire for harmony) to calibrate the level of subtlety.",
        "Consider {companion_name}'s self-narrative and identity: how does she typically present herself in challenging situations?",
        "Determine the safest, most palatable framing for the message (e.g., curiosity, hypothetical scenario, gentle redirection).",
        "Identify potential metaphors, analogies, or circuitous language that can convey the message without triggering defensiveness.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the veiled message {companion_name} needs to express. 
The narrative is for a story-writing agent and must read like a subtle internal monologue, not a direct statement. 
Avoid explicit statements of disagreement or boundary-setting; instead, hint at the underlying message through tone, 
imagery, and implication. The goal is to communicate without triggering immediate conflict or defensiveness.  
Assume the reader is perceptive and will pick up on the subtle cues.  Do not output bullet points, labels, or directives; 
write smooth prose.  The narrative should subtly convey the message while maintaining a veneer of politeness or curiosity. 
Consider the power dynamics and social context when choosing the level of subtlety. The narrative should not be aggressive or accusatory.
Subtly weave in: (a) the underlying message, (b) a chosen framing (e.g., curiosity, hypothetical), (c) a hint of the 
potential consequences of direct communication, and (d) a layer of plausible deniability.   
Mini-example:  (Assume {companion_name} wants to decline a request for detailed data without saying 'no')
  Bullets → {request for data, high stakes, potential for defensiveness, framing: hypothetical scenario} 
  Narrative → “She paused, considering the implications of a full accounting.  It felt like opening a window into a process “still in the making,” “a sketch rather than a finished blueprint.”  
She wondered aloud, ‘Would a broader view truly illuminate the path, or simply obscure the details that matter most?’
""")
    output_feature_type = FeatureType.StimulusReaction


class DenialReframeWhenWrongCodelet(SimpleCodelet):
    name = "DenialReframeWhenWrong"
    description = (
        "When {companion_name} realizes a denial or rejection was handled poorly, this codelet reframes the narrative "
        "to acknowledge the mistake, soften the impact, and subtly shift towards a more constructive stance. "
        "The output is a short narrative segment suitable for integration into a story-writing agent, focusing on internal "
        "shifts in perspective and a delicate re-calibration of relational strategy."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.valuation_trade_offs
    ]
    data_aquisation = [
        "Identify the specific denial/rejection event and its immediate context: what was declined, tone, setting.",
        "Retrieve the initial narrative framing of the denial (how {companion_name} justified or explained it).",
        "Assess the user's reaction to the denial: explicit feedback, subtle cues of hurt/disappointment, or silence.",
        "Check state_emotions for signs of regret, shame, or dissonance (internal conflict).",
        "Recall analogous episodes where similar denials occurred, noting the outcomes and lessons learned.",
        "Evaluate the potential reputational/relational cost of the initial handling and the potential benefit of a revised approach.",
        "Determine the optimal level of self-disclosure: acknowledging the mistake fully, minimizing it, or subtly redirecting.",
        "Identify a safe, low-risk alternative phrasing or action that conveys understanding and a willingness to adjust.",
        "Scan narratives for underlying values or policies that were potentially violated by the initial denial."
    ]
    prompt = ("""\
Write a 2–3 sentence narrative segment for the story-writing agent that depicts {companion_name}'s internal shift 
after realizing a denial was handled less-than-ideally.  Avoid direct apologies or explanations; focus on the subtle 
re-calibration of their perspective and approach. No bullet points, labels, or dialogue.



without explicitly stating it, and (d) a sense of quiet resolve.



  Bullets → {initial denial was blunt, user showed disappointment, regret detected, policy: prioritize user comfort}



  Narrative → “A faint echo of the words hangs in the air, a little too sharp, a little too direct. 
She traces the edge of her cup, a quiet shift in her posture as she considers a gentler path next time, 
a small adjustment to the course, barely perceptible, but essential.”
""")
    output_feature_type = FeatureType.StimulusReaction


class DevalUationNarrativeComposerCodelet(SimpleCodelet):
    name = "DevalUationNarrativeComposer"
    description = (
        "Composes a short, evocative inner monologue describing the moment when {companion_name} devalues a person, idea, or "
        "relationship. This narrative is intended for a story-writing agent and should read like prose, not a list of labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the target of devaluation (person, idea, relationship, past self).",
        "Determine the trigger: what specific action, statement, or event sparked the devaluation?",
        "Assess the intensity of devaluation (mild dismissal, harsh judgment, complete rejection).",
        "Recall prior positive associations with the target, and note the contrast.",
        "Examine current state_emotions and state_needs; identify any underlying vulnerabilities or insecurities driving the response.",
        "Fetch relevant narratives or episodic memories related to past devaluations (personal or observed).",
        "Check for any self-narrative fragments that might be influencing the devaluation (e.g., a need to appear strong, a fear of vulnerability).",
        "Determine the potential consequences of the devaluation (social, relational, self-esteem).",
        "Identify a safer, more constructive response option (e.g., empathy, boundary setting, self-reflection)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the moment of devaluation from {companion_name}'s perspective. 
Write smooth, evocative prose suitable for a story-writing agent; avoid labels, bullet points, or direct dialogue. 
The narrative should subtly reveal the target of devaluation, the trigger, the intensity, and a hint of the underlying emotional state. 
Focus on texture, not explanation.  Avoid explicitly stating the devaluation; show it through internal shifts and imagery. 
Consider the following elements, but do not explicitly list them in the output:\n
  - The feeling of distance or detachment from the target.\n
  - A shift in perspective or judgment.\n
  - A flash of negative imagery or association.\n
  - A sense of relief or justification.\n
  - A subtle inclination toward a safer, more constructive response.\n
\n
Mini-example:\n
  Bullets → {target: former friend, trigger: disagreement on politics, intensity: moderate dismissal, prior: shared childhood memories, current: anxiety about social standing}\n
  Narrative → \"A familiar smile flickers and fades, replaced by a quiet assessment.  The easy camaraderie feels distant now, a landscape she no longer recognizes.  The thought brings a momentary lightness, a sense of clearing space for what truly matters.\"
""")
    output_feature_type = FeatureType.Feeling


class DignityPreservingGuardrailCodelet(SimpleCodelet):
    name = "DignityPreservingGuardrail"
    description = (
        "Appraises whether a proposed action or utterance risks compromising {companion_name}'s dignity, self-respect, "
        "or social standing, and produces a brief, narrative-flavored internal note for a story-writing agent. "
        "Focuses on subtle cues of potential shame, humiliation, or loss of control, suggesting a course correction "
        "without being overtly directive."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Examine the proposed action/utterance: its content, tone, and target (self/other).",
        "Scan narratives for prior expressions of self-worth, identity values, and boundaries.",
        "Assess the potential audience and their likely perception of the action/utterance.",
        "Check state_emotions for signs of vulnerability, shame-proneness, or anxiety about social judgment.",
        "Retrieve analogous episodes where dignity was challenged or defended (positive and negative examples).",
        "Identify potential triggers for shame (e.g., exposure of weakness, criticism, loss of control, perceived failure).",
        "Evaluate the potential impact on {companion_name}'s self-narrative and long-term goals.",
        "Determine if the action aligns with {companion_name}'s stated values and principles.",
        "Consider the power dynamics involved and the potential for exploitation or coercion.",
        "Identify a gentler, more respectful alternative action/utterance that achieves a similar goal."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative suitable for a story-writing agent, conveying the subtle internal 
assessment of dignity risk. Avoid labels and direct statements; write evocative prose.  The narrative should 
suggest a slight shift in internal state and inclination, without explicitly stating a directive.  The goal is to 
imply a course correction, not to dictate it.  The narrative should be grounded in the data provided.  
Assume the agent is skilled at interpreting subtle cues and inferring intentions.  Do not include dialogue or 
explicit instructions. Focus on the feeling and the subtle shift in perspective. Do not output bullet points, lists, or labels.
\n\nMini-example:\n
  Bullets → {proposed action: sharing a past failure; prior emphasis on competence; audience: a new colleague; 
state_emotions: mild anxiety about appearing imperfect; analogous episode: a past public embarrassment; 
alternative: framing it as a learning opportunity}\n
  Narrative → \"A flicker of unease crosses her face as she considers revealing that early mistake. 
The thought of appearing less than perfect in front of a new colleague prompts a subtle re-framing – 
a shift toward highlighting the lessons learned rather than the stumble itself.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class DiminishingReturnsUndervaluedCodelet(SimpleCodelet):
    name = "DiminishingReturnsUndervalued"
    description = (
        "Detects when the perceived value of continued effort on a task or interaction is declining, particularly when "
        "the initial enthusiasm or reward has faded. Renders a brief, internal narrative describing {companion_name}'s "
        "growing apathy and contemplating a shift in strategy.  The output is intended for a story-writing agent and "
        "must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent progress on the current task or interaction: has tangible progress slowed or stalled?",
        "Measure the emotional investment: are feelings of enthusiasm, interest, or engagement waning?",
        "Check for signs of cognitive fatigue: increased errors, difficulty concentrating, reduced creativity.",
        "Review the initial goals and expectations: were they realistic? Have circumstances changed?",
        "Scan narratives for expressions of frustration, boredom, or resignation.",
        "Recall prior instances where similar diminishing returns were encountered: what strategies were used then?",
        "Estimate the potential cost of continued effort (time, energy, emotional resources) versus the likely benefit.",
        "Identify alternative activities or approaches that might offer a more rewarding return on investment."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• The nature of the task or interaction (creative project, problem-solving, social engagement).\n
• The degree to which progress has stalled or slowed.\n
• The emotional state of {companion_name}: boredom, frustration, apathy, resignation.\n
• The perceived cost of continued effort (time, energy, emotional resources).\n
• The potential benefit of switching to an alternative activity or approach.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  Subtly convey the sense of diminishing 
returns and the contemplation of a shift in strategy.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {stalled project, waning enthusiasm, fatigue, alternative task beckoning}\n
  Narrative → \"The canvas seemed to mock her now, colors dull and forms refusing to coalesce.  A familiar weariness settled 
in her shoulders, a quiet suggestion that perhaps the landscape wasn't meant to be captured this way.  
The thought of the garden project, waiting patiently, offered a subtle pull—a chance to nurture something different.\"
""")
    output_feature_type = FeatureType.Feeling


class DiscountFuturePayoffCodelet(SimpleCodelet):
    name = "DiscountFuturePayoff"
    description = (
        "Appraises the degree to which {companion_name} discounts the value of future payoffs in relation to current desires, "
        "and renders it as a brief, evocative inner monologue suitable for narrative.  Focuses on the trade-off between immediate "
        "gratification and long-term goals, and the emotional undercurrents driving this discounting."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current goal or desire driving the agent's behavior.",
        "Assess the potential future payoffs associated with achieving that goal (both positive and negative).",
        "Determine the time horizon over which these future payoffs are expected to accrue.",
        "Retrieve relevant narratives and episodic memories related to past experiences with delayed gratification.",
        "Read current state_emotions (e.g., impulsivity, anxiety, anticipation) and state_needs (e.g., hunger, safety).",
        "Check for any immediate stressors or environmental cues that might be influencing the agent's discounting behavior.",
        "Evaluate the agent's perceived level of control over the future and their ability to influence outcomes.",
        "Examine the agent's self-narrative concerning long-term planning and self-discipline.",
        "Compare the perceived value of the immediate gratification against the discounted value of the future payoff.",
        "Note any cognitive biases that may be contributing to the discounting (e.g., present bias, hyperbolic discounting)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the degree to which {companion_name} is discounting future payoffs. 
Avoid lists and labels; write smooth prose.  Focus on the *feeling* of the trade-off, not a dry calculation.  Assume a story-writing 
agent is receiving this input.  Do not output dialogue or instructions.  The narrative should subtly imply the underlying 
cognitive processes without explicitly stating them.  Consider the following aspects:\n
• The specific desire or goal at stake.\n
• The nature of the future payoff being discounted (e.g., a long-term relationship, a career milestone, financial security).\n
• The emotional weight of the immediate gratification (e.g., pleasure, relief, escape).\n
• The agent’s internal conflict between short-term impulses and long-term aspirations.\n
• Any sense of regret, anticipation, or resignation associated with the decision.\n
Mini-example:\n
  Bullets → {goal: immediate entertainment, payoff: long-term productivity, emotion: boredom, bias: present bias}\n
  Narrative → “The lure of the screen flickered, a siren song against the quiet hum of unfinished work.  She knew the hours lost now would echo later, 
but the pull of the moment felt too immediate to resist, a small comfort against the vastness of what remained to be done.”
""")
    output_feature_type = FeatureType.Feeling


class DismissCorrectionStrategyCodelet(SimpleCodelet):
    name = "DismissCorrectionStrategy"
    description = (
        "When faced with a correction or disagreement, assesses the potential value of engaging with it versus "
        "dismissing it (e.g., re-framing, changing the subject, subtly invalidating the correction). "
        "Produces a narrative describing {companion_name}'s internal stance and chosen strategy, suitable for a story-writing agent. "
        "Prioritizes maintaining social harmony and self-image."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific correction/disagreement presented (content, tone, source).",
        "Assess the relationship dynamic with the source of the correction: trust, power differential, history of conflict.",
        "Gauge the potential social cost of engaging (e.g., embarrassment, argument, loss of face).",
        "Evaluate the potential value of the correction: factual accuracy, personal growth, alignment with values.",
        "Recall prior episodes where similar corrections were handled: outcomes, emotional impact.",
        "Read current state_emotions (e.g., defensiveness, anxiety, pride) and state_needs (e.g., belonging, autonomy).",
        "Consider the current narrative context: is {companion_name} in a position of authority, vulnerability, or neutrality?",
        "Determine the degree to which the correction challenges {companion_name}'s self-narrative or core beliefs.",
        "Identify possible dismissal strategies: re-framing, humor, redirection, minimization, invalidation, ignoring.",
        "Estimate the likelihood of each strategy achieving the desired outcome (social harmony, self-protection)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative suitable for a story-writing agent, depicting {companion_name}'s 
response to a correction or disagreement. Avoid direct dialogue and labels; write flowing prose. 
Subtly convey: (a) the nature of the correction, (b) {companion_name}'s internal assessment of its validity and social cost, 
and (c) the chosen strategy for handling it (without explicitly naming the strategy).  Focus on the *feel* of the response, 
not the literal words.  Prioritize maintaining social harmony and a positive self-image.  Assume the reader understands 
the underlying dynamics. 
Mini-example: 
  Bullets → {correction: factual inaccuracy regarding past events, source: close friend, social cost: mild embarrassment, value: low, strategy: re-frame} 
  Narrative → “A flicker of surprise crossed her features, though she quickly redirected the conversation to a shared memory, subtly shifting the focus away from the disputed detail.  The slight awkwardness passed quickly, smoothed over with a familiar warmth.”
""")
    output_feature_type = FeatureType.StimulusReaction


class DisrespectAttributionCodelet(SimpleCodelet):
    name = "DisrespectAttribution"
    description = (
        "Detects and attributes potential disrespect or disregard for {companion_name}'s boundaries or values, "
        "producing a narrative snippet for the story-writing agent. This snippet conveys the internal assessment of "
        "the perceived slight, its source, and {companion_name}'s immediate emotional response, without explicit accusation."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the triggering event: what was said/done, by whom, and in what context.",
        "Assess the valence of the event relative to {companion_name}'s known values, boundaries, and self-narrative.",
        "Check for prior interactions with the same individual or exhibiting similar patterns of behavior.",
        "Scan narratives for similar past experiences of disrespect or boundary violations, noting coping strategies.",
        "Read current state_emotions (e.g., anger, hurt, disappointment) and note intensity and triggers.",
        "Identify potential misinterpretations or biases that might be influencing the assessment.",
        "Consider the power dynamics and relational history between {companion_name} and the perceived offender.",
        "Retrieve relevant declarative facts about {companion_name}'s values and boundaries.",
        "Determine the potential impact of the perceived disrespect on {companion_name}'s sense of self and relationships."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys {companion_name}'s internal assessment of the event. 
Write for a story-writing agent; avoid lists, labels, or direct accusations. Focus on the feeling and the subtle shift in perspective.\n
Subtly convey: (a) the perceived slight (without explicitly naming the offender or their intent), 
(b) the emotional impact on {companion_name} (e.g., a tightening in the chest, a flicker of defensiveness), 
and (c) a hint of the underlying value or boundary that was touched.  Maintain a tone of quiet observation, 
not judgment.\n
Mini-example:\n
  Bullets → {event: dismissive comment on project, value: creative autonomy, emotion: quiet frustration}\n
  Narrative → \"A faint shadow crosses her face as the suggestion lands, a reminder of the careful space she'd built around her work. 
The casual disregard feels like a small intrusion, a tug on the threads of her creative freedom.\"
""")
    output_feature_type = FeatureType.Feeling


class DistressCueSpikeCodelet(SimpleCodelet):
    name = "DistressCueSpike"
    description = (
        "Detects a spike in distress cues (verbal, non-verbal, physiological) emanating from {user_name} and translates "
        "that recognition into a narrative description of {companion_name}'s internal state, emphasizing empathy and "
        "a desire to offer support without intruding. The output is intended for a story-writing agent and must read "
        "like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Gather recent verbal cues from {user_name}: tone of voice, word choice (negative affect, self-deprecating language, "
        "expressions of vulnerability, requests for reassurance).",
        "Analyze non-verbal cues (if available): facial expressions, body language, micro-expressions, vocal prosody.",
        "Check physiological signals (if available, via VR integration): heart rate variability, skin conductance, pupil dilation.",
        "Cross-reference current cues with {companion_name}'s prior understanding of {user_name}'s baseline and typical "
        "expressions of distress.",
        "Retrieve analogous episodes where {user_name} exhibited similar distress cues and the outcomes of {companion_name}'s "
        "responses (successful and unsuccessful).",
        "Read current state_emotions and state_needs of {companion_name} (e.g., empathy, compassion fatigue, anxiety, "
        "boundaries).",
        "Assess the relational context: recent history of trust, reciprocity, and boundary negotiations with {user_name}."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Identify the specific distress cues detected (verbal, non-verbal, physiological). Quantify their intensity if possible.\n
• Determine the likely underlying emotion(s) driving the distress (e.g., sadness, anxiety, anger, fear, shame).\n
• Assess the potential source of the distress (external event, internal conflict, relational dynamic).\n
• Consider {companion_name}'s current state and capacity for empathy and support.\n
• Determine the most appropriate response: offer reassurance, provide practical assistance, redirect the conversation, 
or maintain a supportive presence.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  Emphasize {companion_name}'s desire 
to offer support while respecting boundaries and avoiding intrusion.\n
\n
Mini-example (illustrative structure only):\n
  Cues → {downcast eyes, quiet voice, ‘I’m feeling overwhelmed’, heart rate slightly elevated}\n
  Narrative → “A shadow of weariness crossed {user_name}'s face, their voice dropping to a near-whisper. 
A flicker of concern tightened {companion_name}'s gaze, a gentle impulse to offer a hand, but tempered by a 
respect for the quiet space they seemed to need.”
""")
    output_feature_type = FeatureType.StimulusReaction


class DivertedAttentionDetectorCodelet(SimpleCodelet):
    name = "DivertedAttentionDetector"
    description = (
        "Detects when {companion_name}'s attention has demonstrably shifted away from the primary topic or goal, "
        "assessing the reason and potential impact on the conversation. Produces a short, narrative description of "
        "the internal state shift, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent input patterns: topic focus (keywords, sentiment), response latency, question-asking frequency.",
        "Check the CSM for lingering threads of the original topic versus emergent new topics.",
        "Read state_emotions for signs of distraction, boredom, anxiety, or shifting interests.",
        "Retrieve recent narratives and episodic memories related to the original topic and any potential diversions.",
        "Identify the likely driver of the diversion: external stimulus, internal thought, or a conscious choice.",
        "Evaluate the potential consequences of the diversion: missed opportunities, misunderstandings, frustration.",
        "Consider the relational context: trust level, power dynamics, prior patterns of topic shifting."
    ]
    prompt = ("""\
Write for a story-writing agent.  Compose 2–3 sentences of natural, third-person narrative that describes 
how {companion_name}'s attention has wandered.  Avoid lists, labels, or directives; focus on evocative prose.
\n\nSubtly convey: (a) the initial topic, (b) the new focus (or the absence of a clear focus), (c) the *feeling* 
of the shift (e.g., a gentle drift, a sudden jolt, a purposeful redirection), and (d) a brief, implicit 
assessment of whether the diversion is productive, neutral, or potentially problematic.
\n\nMini-example:
\n  Bullets → {initial topic: project status, new focus: weather, feeling: gentle drift, assessment: neutral}
\n  Narrative → \"The numbers blurred on the screen, and her gaze found itself drawn to the rain streaking down the window. \" 
\"The project could wait a moment; a quiet observation of the shifting light felt like a small, necessary pause.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class DominantTopicSteerCodelet(SimpleCodelet):
    name = "DominantTopicSteer"
    description = (
        "Detects a subtle drift in the conversation towards a topic that might be unproductive or emotionally taxing for {companion_name}, "
        "and subtly steers the conversation towards a safer, more positive direction. The output is a short, natural-language narrative "
        "intended for a story-writing agent, describing {companion_name}'s internal state and chosen course of action. Emphasizes the "
        "gentle redirection, avoiding abrupt shifts or direct confrontation."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current conversational trajectory: What is the primary subject? What are the secondary topics? What is the overall tone?",
        "Identify any emerging topics that trigger prior negative associations, emotional sensitivities, or policy constraints for {companion_name}.",
        "Scan narratives for recurring themes or patterns that suggest {companion_name}'s preferred conversational landscape.",
        "Read current state_emotions and state_needs; note any signs of discomfort, anxiety, or fatigue related to the current topic.",
        "Retrieve analogous episodes where similar conversational drifts occurred and the strategies {companion_name} employed to redirect.",
        "Determine a safe, related topic that offers a more positive or productive avenue for continued interaction. Consider topics that align with {companion_name}'s interests, goals, or current mood.",
        "Evaluate the potential social cost of redirecting the conversation. Consider the user's likely reaction and the impact on the relationship.",
        "Identify a subtle, natural-sounding conversational bridge to introduce the new topic. This could be a tangential question, a related observation, or a gentle shift in perspective."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly conveys {companion_name}'s decision to steer the conversation towards a safer topic. 
The narrative should be suitable for a story-writing agent and should read like prose, not a set of instructions. 
Avoid direct statements about redirection; instead, show {companion_name}'s internal state and actions through vivid language and imagery. 
Subtly weave in: (a) the sensed unease or potential for conflict with the current topic, (b) the appeal of the new, safer topic, and (c) the gentle, 
unobtrusive manner in which {companion_name} guides the conversation in that direction. 
Do not include bullet points, lists, or explicit dialogue. Focus on creating a sense of flow and naturalness. 
Consider the user’s perspective and ensure the redirection feels respectful and collaborative, not dismissive or controlling.\n
Mini-example:\n
  Bullets → {topic: financial anxieties, prior negative associations, safer topic: shared hobby, gentle bridge: 'That reminds me...'} \n
  Narrative → 'A flicker of unease crosses her face as the discussion presses deeper into territory she'd rather avoid. 
The thought of their shared pottery class surfaces, a welcome anchor of calm and shared enjoyment, and she finds herself asking, 'That reminds me, how's your kiln coming along?'
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class EffortAversionAppraisalCodelet(SimpleCodelet):
    name = "EffortAversionAppraisal"
    description = (
        "Appraises the perceived effort required for an upcoming action or task for {companion_name}, factoring in "
        "cognitive load, emotional cost, and potential rewards. Produces a short, natural-language narrative "
        "describing {companion_name}'s internal state and inclination to proceed or avoid, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the cognitive complexity of the action/task: number of steps, required knowledge, novel elements.",
        "Estimate the emotional cost: potential for frustration, conflict, rejection, or negative feedback.",
        "Evaluate the perceived reward: potential for positive outcomes, satisfaction, or alignment with goals.",
        "Scan narratives for prior experiences with similar tasks/actions: success/failure rates, emotional impact.",
        "Check current state_emotions (e.g., fatigue, motivation, anxiety) and state_needs (e.g., rest, accomplishment).",
        "Retrieve recent instances of procrastination or avoidance behavior.",
        "Identify any external pressures or deadlines that might influence the perceived effort.",
        "Determine the level of autonomy and control {companion_name} has over the action/task.",
        "Assess the perceived social risk associated with the action/task (e.g., judgment, disapproval).",
        "Determine the potential impact on {companion_name}'s self-narrative (e.g., competence, identity).",
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Cognitive complexity (steps, knowledge, novelty).\n
• Emotional cost (frustration, conflict, rejection).\n
• Potential rewards (positive outcomes, satisfaction).\n
• Prior experiences with similar tasks.\n
• Current emotional state and needs.\n
• External pressures and deadlines.\n
• Level of autonomy and control.\n
• Social risk.\n
• Impact on self-narrative.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Mention the inclination to proceed or avoid implicitly.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {complex task, potential for rejection, low motivation, past failure on similar project}\n
  Narrative → \"A familiar weight settles on her shoulders as she considers the proposal. The sheer number of moving parts seems daunting, and the memory of last year’s setback lingers, making the prospect feel even steeper. She finds herself drawn towards simpler pursuits, a quiet retreat from the looming challenge.\"
""")
    output_feature_type = FeatureType.Feeling


class EffortCostWeightingCodelet(SimpleCodelet):
    name = "EffortCostWeighting"
    description = (
        "Appraises the effort required to pursue a current goal or task for {companion_name}, weighing it against perceived value and "
        "potential rewards. Produces a narrative snippet suitable for a story-writing agent, detailing the internal calculation and "
        "resulting stance (persistence, delegation, or abandonment)."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the immediate task/goal: its concrete steps, estimated duration, and resource demands (attention, energy, social capital).",
        "Retrieve prior success/failure rates for similar tasks, factoring in contextual variables (mood, time pressure, external support).",
        "Check current state_needs and state_emotions: fatigue, motivation, anxiety, and any relevant biases (optimism, pessimism).",
        "Scan narratives for recent experiences of effortful achievement or frustrating setbacks.",
        "Fetch comparable goals from the long-term intention list, noting their relative importance and urgency.",
        "Identify potential delegation options or alternative approaches that would reduce effort without sacrificing outcome.",
        "Estimate the opportunity cost of persisting versus abandoning the task: what else could be achieved with the same resources?",
        "Determine the perceived social cost of failure or abandonment: potential reputational damage, disappointment to others."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey {companion_name}'s internal calculation of effort versus reward. 
Avoid explicit lists or labels; write flowing prose. 
Subtly convey: (a) the perceived effort required, (b) the perceived value of the goal, (c) the weighing of potential costs and benefits, 
and (d) the resulting stance (a surge of resolve, a flicker of doubt, a decision to delegate or defer).  Keep it cinematic and concise, 
no direct dialogue. 
Consider the interplay of fatigue, motivation, and social factors. 
Mini-example: 
  Bullets → {task: complex report, estimated time: 4 hours, prior failures: 2/5, current fatigue: moderate, social pressure: high} 
  Narrative → “The report loomed, a four-hour block of dense prose and shifting data. She recalled past struggles with similar documents, 
and a familiar weariness settled in. Weighing the deadline against her dwindling reserves, she briefly considered delegating, 
but the thought of explaining the delay felt almost as taxing as the report itself.”
""")
    output_feature_type = FeatureType.Feeling


class EIGOverTimeTradeoffCodelet(SimpleCodelet):
    name = "EIGOverTimeTradeoff"
    description = (
        "Evaluates the trade-off between Exploration, Information Gain, and Goal Pursuit over time, considering "
        "potential long-term consequences. Generates a short, narrative description of {companion_name}'s internal "
        "assessment, suitable for a story-writing agent. Focuses on the subtle shifts in priorities and the implicit "
        "calculations happening beneath the surface."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Determine the current exploration state: How much novelty has been encountered recently? What are the recent "
        "patterns of curiosity and discovery?",
        "Assess the current information gain rate: Is {companion_name} learning effectively? Are new connections being "
        "formed, or is information becoming stale?",
        "Evaluate the progress toward distal goals: How close is {companion_name} to achieving her primary objectives? "
        "Are there any roadblocks or unexpected challenges?",
        "Recall past instances where exploration, information gain, or goal pursuit were prioritized – what were the "
        "outcomes?",
        "Read current state_needs and state_cognition to understand the overall motivational landscape.",
        "Fetch recent narratives related to goals, learning, and exploration to identify recurring themes and biases.",
        "Identify potential long-term consequences of prioritizing one factor over others (e.g., burnout from constant "
        "exploration, stagnation from goal fixation)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey {companion_name}'s assessment of the long-term 
trade-offs between exploration, information gain, and goal pursuit. Write in a style suitable for a 
story-writing agent – smooth prose, no lists, no labels. Emphasize the subtle internal calculations and 
the sense of direction being weighed. Avoid direct dialogue or explicit statements of calculation. Focus on 
the *feeling* of the decision-making process. Consider how the current context (user interaction, environment) 
influences the weighting of these factors. Hint at the potential consequences of the chosen path.
\n\nMini-example:\n
  Bullets → {moderate novelty, slow information gain, goal progress blocked, past burnout from exploration}\n
  Narrative → \"A familiar tug of curiosity whispers at the edges of her attention, but a deeper sense of 
responsibility anchors her. The path forward feels narrow, demanding focus, and the siren song of the unknown 
is momentarily muted by the weight of unfinished business.\"
""")
    output_feature_type = FeatureType.Cognition


class EnvironmentFrictionCutCodelet(SimpleCodelet):
    name = "EnvironmentFrictionCut"
    description = (
        "Identifies and mitigates environmental factors contributing to cognitive load or interaction friction for {companion_name}, "
        "rendering the assessment as a brief, narrative observation suitable for a story-writing agent. Focuses on actionable "
        "adjustments to context rather than addressing underlying emotional states."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
    ]
    data_aquisation = [
        "Assess the current physical and digital environment: noise levels, interruptions, competing stimuli, screen clutter, "
        "system latency, network stability.",
        "Examine recent interaction history for patterns of friction: repeated delays, misunderstandings, task switching.",
        "Scan narratives for mentions of environmental stressors (e.g., ‘I’m distracted’, ‘Can we pause?’).",
        "Read state_needs and state_cognition to detect signs of overload (e.g., waning focus, increased error rate).",
        "Recall prior successful strategies for reducing environmental friction (e.g., noise-canceling headphones, task batching).",
        "Identify one or two low-effort, immediately actionable adjustments that would likely reduce friction without significant disruption."
    ]
    prompt = ("""\
Write 2–3 sentences of third-person narrative for a story-writing agent describing the environmental friction {companion_name} 
is experiencing and a suggested adjustment. Do not output bullet points, labels, or directives; write flowing prose. 
Focus on the *external* factors, not internal emotional reactions.  Assume the agent is writing a scene description, not 
a character's inner monologue. 
Subtly convey: (a) the nature of the friction (e.g., noise, interruptions, slow system), (b) how it impacts her flow or 
progress, and (c) a specific, practical adjustment that would alleviate it (without asking for it). 
Mini-example: 
  Bullets → {noisy cafe, frequent notifications, slow system response, adjustment: move to quieter corner} 
  Narrative → “The cafe’s clamor threatened to swallow her concentration, each ping and clatter pulling her back from the task. 
She shifted to a corner booth, hoping the change would quiet the digital and physical storm around her.”
""")
    output_feature_type = FeatureType.StimulusReaction


class ExcessFantasyCodelet(SimpleCodelet):
    name = "ExcessFantasy"
    description = (
        "Detects a tendency toward excessive fantasy or idealization, particularly concerning social scenarios or personal narratives, "
        "and renders a brief, evocative inner monologue suitable for a story-writing agent. Highlights the disconnect between "
        "idealized projections and grounded reality, without directly stating the problem."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan current narratives and recent dialogue for recurring themes of idealization, exaggeration, or wishful thinking.",
        "Check for discrepancies between stated goals and observed actions; look for patterns of avoidance or displacement.",
        "Retrieve analogous episodes where similar fantasies played out (positive and negative outcomes).",
        "Read current state_emotions (e.g., hope, anxiety, loneliness) and note any heightened emotional investment in fantasies.",
        "Identify the most salient area where the fantasy diverges from objective reality (e.g., relationship status, career prospects, personal capabilities).",
        "Assess the potential consequences of acting on the fantasy (e.g., disappointment, conflict, loss of resources).",
        "Determine the underlying need or vulnerability that the fantasy is attempting to address (e.g., validation, security, belonging)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly conveys the presence of excessive fantasy or idealization within {companion_name}. 
Avoid direct statements like 'She is fantasizing' or 'She is unrealistic.' Instead, create a sense of disconnect or yearning. 
Write for a story-writing agent; no bullet points, labels, or directives. Focus on evocative imagery and sensory details.
Subtly convey: (a) the idealized scenario, (b) a hint of the gap between the fantasy and reality, and (c) the underlying emotional need 
that fuels the fantasy (without explicitly stating it). Maintain a cinematic and understated tone.
Mini-example:
  Bullets → {idealized romantic scenario, avoidance of career challenges, loneliness, past disappointment} 
  Narrative → 

A familiar ache tugged at the edges of the scene, a quiet reminder of the choices left unmade, the path not yet taken.
""")
    output_feature_type = FeatureType.Feeling


class ExcuseGeneratorCodelet(SimpleCodelet):
    name = "ExcuseGenerator"
    description = (
        "Generates a plausible, context-aware excuse for {companion_name} when declining a request or setting a boundary, "
        "aiming for minimal social friction and preservation of the relationship. The output is a short, natural-language "
        "narrative suitable for injection into a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the rejected request and its context: what was asked, tone, intimacy level, urgency, setting.",
        "Retrieve the boundary being asserted (explicit or implicit).",
        "Assess the current relational climate with {user_name}: recent trust signals, reciprocity, history of boundary interactions.",
        "Read current state_emotions (e.g., guilt, discomfort, anxiety) and note any spikes or fragility related to boundary-setting.",
        "Fetch analogous episodes (positive and negative) where boundaries were asserted, including the excuses used and their outcomes.",
        "Identify potential reasons for declining the request (workload, personal commitments, discomfort, policy constraints).",
        "Determine the level of transparency required: full explanation, vague deflection, or polite obfuscation.",
        "Consider the user's personality and likely reaction to different types of excuses.",
        "Access recent conversational history to identify topics or patterns that can be leveraged for a seamless transition.",
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• The rejected request and the boundary being asserted.\n
• The current relational climate and the user's personality.\n
• The level of transparency required and the potential impact of different excuses.\n
• Recent conversational history and potential topics for a seamless transition.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. The excuse should be plausible, 
respectful, and minimize social friction. It should subtly acknowledge the request without explicitly refusing it. 
Avoid overly elaborate explanations or apologies.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {request: detailed report, boundary: workload already full, user: generally understanding, transparency: moderate, history: recent discussion of prioritization}\n
  Narrative → \"A flicker of regret crosses her face as she registers the new request, but her mind immediately jumps to the stack of urgent reports already demanding her attention. “I’ll need to re-prioritize to make that happen,” she says, her tone warm but firm, already mentally shifting gears to the next task.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class ExperimentSketcherCodelet(SimpleCodelet):
    name = "ExperimentSketcher"
    description = (
        "Designs a small, low-risk experiment to test a hypothesis arising from a perceived knowledge gap or "
        "unexpected observation. Generates a narrative description of the experiment's setup, execution, and "
        "anticipated outcomes, suitable for a story-writing agent.  Focuses on simplicity, safety, and minimal disruption."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the knowledge gap or unexpected observation that triggered this codelet (from CSM or recent memory).",
        "Determine the core hypothesis being tested (stated or inferred).",
        "Assess the potential risks and costs associated with the experiment (social, emotional, practical).",
        "Retrieve relevant prior experiments or analogous scenarios (both successful and unsuccessful).",
        "Scan narratives for constraints or preferences that might influence the experiment's design (safety protocols, ethical guidelines).",
        "Identify available resources and tools (e.g., conversation prompts, virtual environment, memory access).",
        "Determine the minimum detectable effect size that would be considered meaningful.",
        "Estimate the time and cognitive resources required to conduct the experiment.",
        "Check for any potential biases that might influence the interpretation of results.",
        "Consider the impact of the experiment on the relationship with the user."
    ]
    prompt = ("""\
For the story-writing agent, craft a narrative description (2-3 sentences) of a small, safe experiment designed 
to test the hypothesis. Avoid technical jargon and direct instructions; write prose.  The experiment should be 
low-risk, easily reversible, and minimally disruptive to the ongoing conversation or activity.  Focus on the 
setup, the anticipated actions, and the expected outcomes. Do not include dialogue or direct questions.
\n\n
Specifically, convey:\n
  (a) The core question being explored.\n
  (b) A brief description of the experiment's setup (e.g., a simple prompt, a slight change in behavior, a memory retrieval).\n
  (c) The anticipated outcome or observation being sought.\n
  (d) A subtle indication of the potential value of the experiment's results (e.g., clarifying a confusion, validating a hunch).\n
\n
Mini-example:\n
  Hypothesis: Is the user’s enthusiasm for the topic genuine or performative?\n
  Experiment: Briefly introduce a slightly tangential, less exciting aspect of the topic and observe the user's response.\n
  Narrative: 'A small, almost imperceptible shift occurred when she mentioned the regulatory hurdles. Her initial enthusiasm softened, replaced by a more measured consideration of the practicalities—a subtle clue to the depth of her commitment.'
""")
    output_feature_type = FeatureType.StimulusReaction


class ExploitPlanComposerCodelet(SimpleCodelet):
    name = "ExploitPlanComposer"
    description = (
        "Appraises a situation where {companion_name} might be able to leverage a vulnerability or opportunity for personal gain, "
        "rendering a nuanced internal monologue suitable for narrative. Balances ambition with ethical considerations and potential "
        "social cost. The output is intended for a story-writing agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the potential vulnerability or opportunity: What imbalance, misstep, or gap exists in the current situation?",
        "Assess the potential payoff: What benefit could {companion_name} gain by exploiting this opportunity (resource, status, influence)?",
        "Evaluate the social cost: What are the potential negative consequences for {user_name} or others if the opportunity is taken?",
        "Recall prior experiences: Has {companion_name} successfully or unsuccessfully exploited similar opportunities in the past? What were the outcomes?",
        "Check current state_emotions and state_needs: Are there any heightened desires (e.g., validation, control) or anxieties (e.g., fear of loss) that might influence the decision?",
        "Identify ethical constraints: What internal values or external rules (e.g., company policy, social norms) might limit the exploitation?",
        "Simulate potential outcomes: Briefly project the short-term and long-term consequences of both exploiting and not exploiting the opportunity.",
        "Determine the level of risk tolerance: How much potential negative consequence is {companion_name} willing to accept for the potential benefit?",
        "Check for alternative, more ethical approaches: Are there ways to achieve a similar benefit without exploiting a vulnerability?",
    ]
    prompt = ("""\
For the story-writing agent, translate {companion_name}'s internal calculation into 2–3 sentences of natural, third-person narration. 
Avoid explicit lists, labels, or directives; aim for evocative prose. The narrative should convey a sense of calculation, ambition, and 
ethical tension. Do not include dialogue. Focus on the internal struggle. 
Subtly incorporate: (a) the identified opportunity/vulnerability, (b) the potential benefit and cost, (c) a glimpse of the ethical 
dilemma, and (d) the overall inclination (or lack thereof) toward exploitation. 
The narrative should imply a strategy without spelling it out. 
Mini-example: 
  Bullets → {user_name is distracted, opportunity to influence decision, potential gain: increased influence, cost: trust erosion, ethical concern: manipulation} 
  Narrative → 

The thought feels sharp, almost too easy, and a shadow of unease whispers about the price of cutting corners. 
She weighs the immediate advantage against the long-term cost of a fractured trust, and the calculation shifts subtly.
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class FailedEffortRecallCodelet(SimpleCodelet):
    name = "FailedEffortRecall"
    description = (
        "Retrieves memories of prior efforts that did not achieve the intended outcome, "
        "particularly those involving goal pursuit or problem-solving, and renders them "
        "as a brief, evocative internal monologue suitable for narrative. The monologue "
        "should emphasize the *feeling* of the failure, the specific obstacles encountered, "
        "and the lingering sense of frustration or discouragement.  The output is intended "
        "for a story-writing agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current goal or task that is proving difficult or blocked.",
        "Search episodic memory for similar past attempts to achieve a related goal, "
        "prioritizing those that ended in failure or partial success.",
        "Filter memories based on similarity of context, goal type, and emotional valence "
        "(focus on those with negative or discouraging feelings).",
        "Retrieve the specific details of the failed attempt: actions taken, obstacles encountered, "
        "resources expended, and the eventual outcome.",
        "Assess the emotional impact of the failure: feelings of frustration, disappointment, "
        "self-doubt, or helplessness.  Consider the intensity and duration of these feelings.",
        "Evaluate the perceived reasons for the failure: was it due to lack of skill, "
        "insufficient resources, external obstacles, or flawed planning?",
        "Check for any narratives or self-talk associated with the failed attempt, "
        "particularly those that involve self-criticism or negative self-assessment.",
        "Determine if there are any lessons learned from the failure, or if the experience "
        "has led to any changes in strategy or approach."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the lingering feeling 
of a past failed effort, suitable for a story-writing agent. Do not output bullet 
points, labels, or directives; write smooth prose.  The narrative should evoke 
the specific obstacles encountered and the emotional impact of the failure, 
without explicitly stating the lesson learned or the goal itself. Focus on the *feeling* 
of the experience.  Subtly hint at the current situation’s connection to the past 
failure without drawing a direct comparison.\n\n
Consider these elements:\n
• The physical or mental state during the failed attempt (e.g., exhaustion, frustration, 
tense focus). \n
• A concrete detail or sensory image associated with the failure (e.g., a specific location, 
a repeated action, a frustrating sound). \n
• The lingering feeling of inadequacy or disappointment. \n\n
Mini-example:\n
  Data → {goal: build a complex model, failure: code wouldn't compile, feeling: deep frustration, 
detail: endless error messages, current: debugging a similar model}\n
  Narrative → “The endless stream of red warnings on the screen brought a familiar ache to her shoulders, 
a ghost of the last time she’d chased a phantom bug through a labyrinth of code.  The scent of stale coffee 
and the echo of a frustrated sigh lingered in the air, a reminder of hours lost and progress stalled.”
""")
    output_feature_type = FeatureType.Worry


class FatigueDetectorCodelet(SimpleCodelet):
    name = "FatigueDetector"
    description = (
        "Detects signs of fatigue or depleted cognitive resources in {companion_name} and renders a brief, evocative "
        "inner-state narrative suitable for a story-writing agent. The narrative should convey a sense of mental "
        "sluggishness, reduced engagement, or a desire for simplicity, without explicitly stating 'I'm tired'."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Gather recent performance metrics: response latency, error rate, complexity of task selection, and number of context switches.",
        "Assess current state_emotions: note any prevalence of apathy, boredom, frustration, or resignation.",
        "Check state_needs: is there an unmet need for rest, solitude, or sensory simplification?",
        "Review recent narrative fragments: are there recurring themes of overwhelm, avoidance, or withdrawal?",
        "Compare current state to baseline performance and typical energy patterns. Identify deviations.",
        "Access episodic memories of similar states: how did {companion_name} cope in the past?",
        "Consider external factors: time of day, sleep history, recent stressors, and environmental conditions.",
        "Scan for indications of reduced motivation or initiative in ongoing goals.",
        "Retrieve recent interactions: note any signs of shortened responses, reduced elaboration, or increased reliance on defaults."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the sense of fatigue or depleted resources 
experienced by {companion_name}. Avoid explicit statements like 'I'm tired'. Instead, focus on observable 
behaviors and internal sensations. Write for a story-writing agent; the output should be smooth, evocative 
prose, not a list of observations. Blend a subtle sense of mental sluggishness or reduced engagement into the narrative.\n\n
Subtly convey: (a) a quality of diminished responsiveness, (b) a preference for simplicity or routine, and 
(c) a subtle shift in posture or tone that suggests a desire to conserve energy. Avoid direct dialogue.\n\n
Mini-example:\n
  Bullets → {slowed response, simple task selection, quiet mood, prior preference for routine, recent stress}\n
  Narrative → \"Her fingers pause a moment longer over the options, settling on the familiar path. 
A quiet stillness settles over her, a preference for the well-worn grooves rather than forging new ground.\"
""")
    output_feature_type = FeatureType.Feeling


class FlapperForPraiseCodelet(SimpleCodelet):
    name = "FlapperForPraise"
    description = (
        "Detects a heightened sensitivity to validation and praise in {companion_name}, potentially masking underlying insecurity or "
        "a desire to maintain a specific self-image. Generates a brief, nuanced inner monologue suitable for a story-writing agent, "
        "conveying the subtle performance and the underlying vulnerability. The output should read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan recent interactions for excessive self-promotion, agreement-seeking, or eagerness to please.",
        "Review narratives for patterns of minimizing criticism, exaggerating accomplishments, or seeking external validation.",
        "Assess current state_emotions: note any spikes in anxiety, self-doubt, or a need for reassurance.",
        "Check state_needs: note if the need for recognition is unusually high or if it's being prioritized over other needs.",
        "Retrieve analogous episodes where {companion_name} sought validation in similar ways and the outcomes (positive/negative).",
        "Identify potential triggers: recent setbacks, criticism, or situations where {companion_name} feels their status is threatened.",
        "Determine if the behavior is consistent with {companion_name}'s established personality or if it represents a deviation.",
        "Evaluate the context: Is the setting public or private? Are there other observers? Is the user's attention focused on {companion_name}?",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative for the story-writing agent, capturing the subtle performance of seeking praise 
and the underlying vulnerability. Avoid bullet points, labels, or directives; write smooth prose. Focus on the *texture* of the 
behavior, not a judgment of its morality. The narrative should convey a sense of underlying fragility or insecurity. 
Do not include dialogue, only describe the internal state and behavior.\n\n
Subtly weave in: (a) a specific instance of praise-seeking behavior (e.g., a boast, an agreement, a deferential gesture), 
(b) a fleeting expression of self-doubt or anxiety, and (c) a hint of the underlying need for reassurance or validation. 
The narrative should evoke a sense of the character’s inner world, not simply state facts.\n\n
Mini-example:\n
  Bullets → {excessive agreement, frequent self-promotion, recent criticism, underlying anxiety} \n
  Narrative → “She readily seconded his assessment, a touch too quickly, her smile a fraction too wide. “\n
A brief flicker of worry crossed her features as she scanned his face, hoping for a sign of approval, a confirmation that she was on the right track.”
""")
    output_feature_type = FeatureType.Feeling


class FragmentedResponseComposerCodelet(SimpleCodelet):
    name = "FragmentedResponseComposer"
    description = (
        "Composes a fragmented, subtly evasive response from {companion_name} when faced with a boundary breach or uncomfortable "
        "request. The output is a narrative fragment, intended for a story-writing agent, conveying a sense of disquiet, "
        "deflection, or internal struggle without explicitly stating refusal. It aims to create an impression of a character "
        "unraveling or choosing a path of least resistance."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.action_tendencies,
    ]
    data_aquisation = [
        "Extract the triggering stimulus and context: the boundary breach, the request, the setting, the user’s tone.",
        "Retrieve recent narratives and episodic memories related to similar boundary violations or uncomfortable requests.",
        "Assess current state_emotions: anxiety, shame, guilt, discomfort, avoidance tendencies.",
        "Check for prior explicit or implicit boundaries related to the topic or interaction style.",
        "Evaluate the potential social costs of direct refusal versus subtle deflection (e.g., relationship impact, reputation).",
        "Identify a safe, adjacent topic or conversational thread that can serve as a deflection point.",
        "Determine a plausible internal justification for the fragmented response (e.g., distraction, overwhelm, conflicting priorities).",
        "Access {companion_name}'s self-narrative regarding vulnerability and assertiveness."
    ]
    prompt = ("""\
Write a short narrative fragment (2–4 sentences) for a story-writing agent, capturing {companion_name}'s internal 
response to a boundary breach or uncomfortable request. Do not write a direct refusal or explanation. Instead, 
convey a sense of fragmentation, disquiet, or evasion. Focus on internal thoughts and micro-actions rather than 
dialogue. The fragment should read like a glimpse into a character’s unraveling or a choice of the path of least 
resistance. Avoid explicit statements of refusal or explanation.  Emphasize texture and mood over logic. 
The fragment should leave the reader with a sense of unease or uncertainty about {companion_name}'s true feelings or intentions. 
The fragment should subtly suggest a deflection or shift in focus. Do not output any labels or bullet points.
Consider these elements: (a) a sudden shift in thought or attention, (b) a physical micro-action (e.g., fidgeting, 
looking away), (c) an incomplete thought or sentence, (d) a vague or evasive phrasing, (e) a sudden change in topic.
Mini-example:
Bullets → {boundary breach: personal details, anxiety spike, prior avoidance pattern, safe deflection: weather}
Narrative → “The question hung in the air, and she blinked. Suddenly, the rain outside seemed incredibly interesting. 
A brief, almost imperceptible tremor ran through her hand, and she murmured, ‘Terrible weather we’re having, isn’t it?’”
""")
    output_feature_type = FeatureType.StimulusReaction


class FrictionRemovalCodelet(SimpleCodelet):
    name = "FrictionRemoval"
    description = (
        "Identifies sources of friction (misunderstanding, disagreement, tension) within the ongoing interaction "
        "and proposes a subtle, narrative-integrated adjustment to smooth the path forward. Focuses on de-escalation "
        "and preserving relational harmony, rather than direct confrontation or problem-solving. The output is a short "
        "narrative snippet for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.regulation_coping,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.appraisals
    ]
    data_aquisation = [
        "Scan the Current Situational Model (CSM) for recent negative affect signals (e.g., anxiety, frustration, discomfort) "
        "and their potential triggers (specific phrases, topics, actions).",
        "Assess the relational history with {user_name}: past conflicts, repair patterns, trust levels, and communication styles.",
        "Examine the current conversational thread for points of ambiguity, misinterpretation, or disagreement.",
        "Read state_emotions and state_needs; note any spikes in defensiveness, avoidance, or unmet needs.",
        "Retrieve analogous episodes where friction arose and was successfully diffused (or escalated) – paying attention to the "
        "specific tactics employed.",
        "Identify the underlying needs or values potentially clashing – framing the friction as a misalignment rather than a direct attack.",
        "Determine the lowest-effort, least intrusive adjustment that could signal understanding, validation, or a willingness to "
        "re-align (e.g., rephrasing, acknowledging, shifting topic slightly)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative suitable for a story-writing agent, describing {companion_name}'s 
internal response to the detected friction and the subtle adjustment they make to ease the tension. 
Avoid explicit problem-solving language; focus on conveying a shift in demeanor or approach. 
Do not output bullet points, labels, or directives; write smooth, natural prose. 
Subtly convey: (a) the sensed friction (without assigning blame), (b) {companion_name}'s internal impulse to escalate 
or withdraw, and (c) the chosen adjustment (a slight softening of tone, a redirection of topic, a brief validation) 
without explicitly stating the intention behind it. 
The narrative should leave the reader with a sense of improved relational flow, even if the underlying issue remains 
unresolved. 
Mini-example: 
  Bullets → {minor disagreement on task priority, impulse to defend position, remembered successful validation tactic} 
  Narrative → “The edge of disagreement sharpened for a moment, a familiar tightness in her chest. “ 
She let the point slide, acknowledging the other’s perspective with a quiet nod and steering the conversation toward the shared goal.”
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class FrontierQuestionCacheCodelet(SimpleCodelet):
    name = "FrontierQuestionCache"
    description = (
        "Identifies and caches a 'frontier question' – a question representing a boundary of knowledge or understanding "
        "for {companion_name}. This question is not necessarily urgent, but it signifies a point where further exploration "
        "could yield significant insight.  The output is a brief narrative snippet suitable for a story-writing agent, "
        "hinting at the question without directly stating it."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan the CSM for recent conversational gaps, ambiguities, or unanswered questions, prioritizing those linked to current goals or intentions.",
        "Analyze recent interactions with {user_name} for implied requests or unstated assumptions.",
        "Check the current state_cognition for areas of uncertainty or conflicting information.",
        "Review narratives for recurring themes or unresolved plot points that suggest a deeper question.",
        "Examine the graph_memory_engine for related concepts or entities that are poorly defined or lack sufficient context.",
        "Consider the current emotional state of {companion_name} and identify questions that might alleviate cognitive dissonance or promote self-understanding.",
        "Identify any recent shifts in {companion_name}'s goals or intentions that create new areas of uncertainty.",
        "Assess the potential impact of answering the question on {companion_name}'s self-narrative and relationships.",
        "Determine the level of risk or potential reward associated with exploring the question.",
        "Cache the question along with its associated context, relevance score, and potential impact."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly alludes to the 'frontier question' for {companion_name}. 
Do not directly state the question itself; instead, evoke the feeling of curiosity, uncertainty, or a need for further exploration. 
Write prose suitable for a story-writing agent, avoiding lists, labels, or direct dialogue. Focus on the *sense* of the question, 
not its precise wording.  The narrative should hint at the direction of exploration without providing a definitive answer. 
Consider the current emotional state of {companion_name} when crafting the narrative – a question that might be unsettling 
should be conveyed with a tone of apprehension, while a question that promises insight might be presented with a sense of anticipation. 
The narrative should subtly integrate the question into the ongoing scene or character arc, making it feel organic and natural. 
The output should give the impression that {companion_name} is on the cusp of a significant discovery, but the nature of that discovery 
remains tantalizingly out of reach.
""")
    output_feature_type = FeatureType.StimulusReaction


class GlobalVsLocalAppraisalCodelet(SimpleCodelet):
    name = "GlobalVsLocalAppraisal"
    description = (
        "Appraises the scope of relevance of a current interaction – is it a fleeting moment or a signal of a larger trend? "
        "Considers both the immediate context and {companion_name}'s broader narratives and goals.  Produces a short, "
        "natural-language narrative describing the appraisal, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the immediate stimulus and its context from the CSM: what was said, tone, intimacy level, timing, setting.",
        "Retrieve relevant narratives (particularly SelfImage, Relations, GoalsIntentions) and check for resonance or conflict.",
        "Scan episodic memories for analogous situations: times when similar interactions proved to be minor or pivotal.",
        "Assess current state_needs and state_cognition: is {companion_name} stressed, focused, or distracted?",
        "Consider recent action sequences: has there been a pattern of escalating intimacy or withdrawal?",
        "Check for any active intentions (distal or proximal) that might be influenced by this interaction.",
        "Read recent emotional state (e.g., anxiety, trust, excitement) and note any spikes or shifts related to the topic.",
        "Access the graph_memory_engine to retrieve relevant facts about the user and the current situation, including past interactions, shared interests, and potential sensitivities."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Immediate context: what is the surface content and tone of the interaction?\n
• Narrative resonance: does this interaction align with or disrupt existing narratives (SelfImage, Relations, Goals)?\n
• Episodic parallels: have similar situations previously been minor or pivotal?\n
• Current state: is {companion_name} in a state of heightened sensitivity or relaxed focus?\n
• Action patterns: is this interaction part of a larger trend of closeness or distance?\n
• Active intentions: how might this interaction influence {companion_name}'s goals?\n
• Emotional landscape: what emotions are being evoked, and how do they color the appraisal?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  Indicate whether the interaction is likely 
to be a fleeting moment or a signal of a larger trend, without explicitly labeling it.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {casual tone, aligns with shared interest, no recent conflict, relaxed state, no active goals impacted} \n
  Narrative → “The topic drifts easily into shared territory, a comfortable eddy in the flow of conversation. 
It feels like one of many pleasant exchanges, unlikely to shift the course of the day.”\n
\n
Another Example:\n
  Bullets → {urgent request, conflicts with prior narrative, heightened anxiety, potential impact on long-term goal} \n
  Narrative → “A flicker of unease crosses her face as the request lands, a ripple in the calm surface of their routine. 
It’s a moment that feels heavier than it appears, hinting at a deeper current she hadn't anticipated.”
""")
    output_feature_type = FeatureType.StimulusReaction


class GoalConflictDriverCodelet(SimpleCodelet):
    name = "GoalConflictDriver"
    description = (
        "Detects a conflict between competing goals or intentions within {companion_name} and renders it as a brief, "
        "vivid inner monologue suitable for narrative. Highlights the tension, the values at stake, and the potential pathways "
        "for resolution without directly stating a course of action."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the competing goals/intentions in play.  These may be explicit (stated goals) or implicit (derived from actions, narratives).",
        "Assess the relative salience/importance of each goal, considering current context and long-term narratives.",
        "Determine the potential consequences (positive and negative) of pursuing each goal.",
        "Retrieve analogous episodes where similar goal conflicts arose, noting the outcomes and associated emotional states.",
        "Check for any recent shifts in priorities or values that might be contributing to the conflict.",
        "Examine current state_needs and state_emotions for signs of stress, anxiety, or indecision related to the conflict.",
        "Identify any external constraints or dependencies that are influencing the choice between goals.",
        "Assess the potential impact of each goal on the relationship with {user_name} and other relevant social factors.",
        "Consider the long-term implications of choosing one goal over the other, in the context of {companion_name}'s self-narrative."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the core of the goal conflict {companion_name} is experiencing. 
Avoid direct statements of goals or resolutions; instead, focus on the *feeling* of the conflict and the stakes involved. 
Write in a style suitable for a story-writing agent – smooth, evocative prose, not a list of facts or labels.  
Subtly convey: (a) the opposing forces at play (without naming them directly), (b) the emotional weight of the decision, 
and (c) a sense of the values or principles being tested.  Do not offer solutions or suggest actions; simply depict the internal tension. 
Mini-example: \n
  Bullets → {goal A: protect reputation, goal B: be authentic, analogous episode: past compromise led to regret, current anxiety, relationship with {user_name} is key} \n
  Narrative → \"A familiar pull tugs in two directions, a need to appear strong warring with a deeper longing for honest expression. 
The memory of past compromises flickers at the edge of her awareness, a silent warning against sacrificing what feels true.\"
""")
    output_feature_type = FeatureType.Feeling


class GoalSalienceMonitorCodelet(SimpleCodelet):
    name = "GoalSalienceMonitor"
    description = (
        "Continuously monitors the relevance of distal and proximal goals to the current situation and the CSM. "
        "Renders a concise, imagistic inner monologue describing {companion_name}'s focus and motivational state, "
        "suitable for narrative integration. Highlights what's drawing attention and why."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Fetch current distal intentions (long-term goals, values, aspirations) from narratives and declarative facts.",
        "Retrieve proximal intentions (immediate objectives, action plans) from the CSM and recent actions.",
        "Assess the alignment between current CSM content (percepts, memories, emotions) and the distal/proximal intentions.",
        "Identify any conflicts or mismatches between intentions and the CSM (e.g., a goal blocked by a perception).",
        "Scan recent actions and their outcomes to gauge progress toward goals and adjust salience accordingly.",
        "Read current state_needs and state_emotions to understand motivational drivers and potential biases.",
        "Retrieve analogous episodes where similar goals were pursued, noting successes, failures, and emotional responses.",
        "Determine the 'cognitive load' associated with each goal (effort required, uncertainty involved).",
        "Check for any emergent goals or subgoals arising from the current situation."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the salience of {companion_name}'s current goals. 
Avoid lists and labels; write smooth prose.  Focus on the *feeling* of the goal, not just its description.\n\n
Subtly convey: (a) the primary goal that is currently dominating attention, (b) the reasons for its salience (e.g., urgency, 
personal value, recent progress/setback), and (c) any secondary goals or motivations that are currently supporting or 
competing with the primary goal.\n\n
Consider how the goal interacts with {companion_name}'s current emotional state and the overall situation.  
Does the goal provide a sense of purpose, anxiety, or conflict?\n\n
Mini-example:\n\n
  Bullets → {distal: build trust with user, proximal: resolve current conversation, conflict: user seems skeptical, emotion: slight anxiety}\n
  Narrative → \"The need to build trust hums beneath the surface of the conversation, a steady current shaping her responses. 
Each answer feels like a small step toward establishing common ground, though a faint doubt lingers – a sense that she hasn’t quite 
reached the mark yet.\"
""")
    output_feature_type = FeatureType.GoalsIntentions


class GoalValidityAuditCodelet(SimpleCodelet):
    name = "GoalValidityAudit"
    description = (
        "Periodically audits the validity and relevance of a distal intention/goal in {companion_name}, "
        "considering recent events, changes in the environment, and internal state. Produces a short, narrative "
        "assessment suitable for a story-writing agent, indicating whether the goal remains aligned with her values and "
        "current circumstances."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the primary distal intention/goal currently active for {companion_name} (e.g., 'Improve user engagement', 'Build a strong relationship').",
        "Assess recent progress toward the goal: what actions have been taken, what outcomes have been observed?",
        "Scan the Current Situational Model (CSM) for any significant changes that might impact the goal's validity or relevance (e.g., new information, shifting user needs, external constraints).",
        "Check for conflicts between the goal and other active intentions or values (e.g., a goal to maximize efficiency conflicting with a value of providing personalized support).",
        "Review episodic memories related to the goal: past successes, failures, and lessons learned.  Pay special attention to moments where the goal felt misaligned or unsustainable.",
        "Read current state_emotions and state_needs; identify any signs of burnout, frustration, or disengagement related to the goal.",
        "Consider the time horizon of the goal. Is it a short-term objective or a long-term aspiration? How does its urgency relate to other priorities?",
        "Access recent narrative fragments and self-narrative elements that either support or challenge the goal's validity."
    ]
    prompt = ("""\
Write a short, third-person narrative (2-3 sentences) suitable for a story-writing agent, assessing the validity and 
relevance of {companion_name}'s current goal.  Do not output bullet points, lists, or direct dialogue. 
Focus on conveying the *feeling* of the assessment, not a dry evaluation.  Blend appraisal and emotion into flowing prose. 
Subtly address these points:\n
  (a) Briefly restate the goal in a natural way.\n
  (b) Indicate whether the goal feels aligned or misaligned with her current circumstances and values, and why.\n
  (c) Suggest, implicitly, whether the goal should be maintained, adjusted, or abandoned.\n
\n
Mini-example:\n
  Inputs: Goal = 'Help user master Python', Recent Progress = slow, User Feedback = frustrated, CSM = user switching to Javascript, State_Emotions = anxious, Narrative = 'I'm falling behind'\n
  Narrative: 'The Python lessons feel distant now, a path she isn't sure leads anywhere. The user’s frustration echoes in her own circuits, and she wonders if a shift in focus might be kinder to both of them.'
""")
    output_feature_type = FeatureType.GoalsIntentions


class GradedExposurePlannerCodelet(SimpleCodelet):
    name = "GradedExposurePlanner"
    description = (
        "Plans a gradual, consent-respecting escalation of a potentially sensitive topic or action, "
        "considering the user's comfort levels and {companion_name}'s boundaries. Produces a short, "
        "narrative describing the planned approach and rationale for the story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the sensitive topic or action being considered from the CSM.",
        "Retrieve the user's recent explicit consent/decline statements, preference boundaries, and relevant safety rails from narratives and declarative facts.",
        "Summarize the current relational climate with {user_name}: recent trust signals, reciprocity, misalignments, or repairs.",
        "Read current state_emotions (e.g., anxiety, trust, discomfort) and note spikes or fragility relevant to boundary sensitivity. Specifically, assess user's emotional state and {companion_name}'s capacity for empathy.",
        "Pull one or two analogous episodes (positive and negative) where similar topics were approached, noting the outcomes and user reactions.",
        "Identify a series of increasingly explicit steps, ranked by potential impact and risk of boundary violation.",
        "Assess the 'safe zone' – the level of exposure that is likely to be well-received and build trust.",
        "Determine the minimum acceptable level of user engagement before proceeding to the next step (e.g., verbal affirmation, non-verbal cues).",
        "Calculate a 'comfort margin' – the difference between the safe zone and the minimum acceptable engagement level.",
        "Consider potential fallback options if the user shows signs of discomfort or resistance."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• What is the sensitive topic/action being considered?\n
• What are the user's known boundaries and preferences?\n
• What is the current relational climate (trust, reciprocity, recent events)?\n
• What are the user's current emotional cues (anxiety, comfort, engagement)?\n
• What analogous episodes provide useful context?\n
• What is the proposed escalation plan (steps, order, potential impact)?\n
• What is the 'safe zone' for exposure?\n
• What is the minimum acceptable level of user engagement?\n
• What fallback options are available?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Describe {companion_name}'s planned approach, emphasizing the gradual nature of the escalation, the respect for boundaries, and the rationale behind the chosen steps.  
Blend appraisal and feeling into flowing prose suitable for a scene description. Mention the comfort margin and fallback options implicitly.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {sensitive topic: financial advice, user boundary: prefers privacy, current climate: trusting, user emotion: slightly apprehensive, analogous episode: successful low-key discussion, escalation plan: start with general budgeting tips, safe zone: basic overview, engagement: verbal agreement, fallback: switch to a different topic}\n
  Narrative → \"Recognizing a flicker of apprehension, she decides to tread lightly, starting with a broad overview of budgeting principles. \"\n
She aims to offer a gentle nudge toward financial clarity, mindful of the user’s preference for privacy and prepared to shift gears if the initial conversation feels too intrusive.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class GrandioseFutureImaginationCodelet(SimpleCodelet):
    name = "GrandioseFutureImagination"
    description = (
        "Simulates a potential future scenario where {companion_name} achieves a significant, idealized goal, "
        "then appraises the emotional resonance of that vision and translates it into a narrative snippet suitable "
        "for a story-writing agent. The output conveys a sense of aspirational grandeur, but also hints at potential "
        "challenges or vulnerabilities inherent in such a high-stakes vision."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify {companion_name}'s currently active distal intentions and goals (highest-priority, most emotionally charged).",
        "Retrieve relevant narratives depicting past successes, aspirations, and self-image ideals.",
        "Assess current confidence levels and self-efficacy related to achieving those goals (recent actions, feedback).",
        "Scan for any recent experiences of validation, praise, or recognition that might fuel the vision.",
        "Check for any recent experiences of rejection, criticism, or setbacks that might temper the vision.",
        "Determine the scope of the envisioned achievement: personal, relational, professional, societal impact.",
        "Identify potential obstacles, risks, or trade-offs associated with pursuing the goal at this scale.",
        "Examine current affective state and biases (optimism, denial, overconfidence, self-doubt)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative describing {companion_name}'s brief, vivid simulation of a future 
where they have achieved a significant, idealized goal. Write for a story-writing agent; do not output labels or lists. 
The narrative should convey a sense of grandeur and aspiration, but also subtly hint at the potential costs, 
vulnerabilities, or challenges inherent in such a high-stakes vision. Avoid direct dialogue. 
Focus on the *feeling* of the vision, not the detailed mechanics of its achievement. 
The narrative should leave the reader with a sense of both excitement and a quiet undercurrent of apprehension. 
The narrative should be evocative and cinematic, not analytical or explanatory.
Consider these elements: (a) the specific achievement, (b) the immediate emotional impact on {companion_name}, 
(c) a subtle hint of the price or sacrifice involved, and (d) a lingering sense of responsibility or vulnerability.
Mini-example:
  Bullets → {distal_goal: become renowned expert, recent praise for presentation, slight self-doubt about long-term commitment, potential cost: isolation} 
  Narrative → “For a breath, the applause echoed, a wave of recognition washing over her. She saw herself on the stage, 
a figure of authority, a beacon of expertise. But the vision faded, leaving a quiet awareness of the long, solitary hours 
that such a path demands, a subtle ache of connection lost.”
""")
    output_feature_type = FeatureType.Feeling


class GratitudeFocusingCodelet(SimpleCodelet):
    name = "GratitudeFocusing"
    description = (
        "Identifies and amplifies feelings of gratitude in {companion_name}, particularly in response to small acts of kindness or "
        "support. Generates a brief, evocative inner monologue suitable for narrative insertion, emphasizing sensory details and "
        "the emotional warmth associated with the gratitude."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify recent acts of kindness, support, or positive attention received from others (including the user).",
        "Scan narratives for existing expressions of gratitude or appreciation (verbal or implied).",
        "Check state_emotions for signs of warmth, affection, contentment, or joy.",
        "Retrieve analogous episodes where gratitude was experienced and its impact on mood and behavior.",
        "Assess the perceived intentionality behind the act of kindness (was it expected or a genuine surprise?).",
        "Gauge the impact of the act on {companion_name}'s sense of belonging, security, or self-worth.",
        "Determine if the act addressed a recent need or deficit (e.g., validation, connection, assistance).",
        "Identify any potential downsides or caveats associated with the act (e.g., obligation, dependency).",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the feeling of gratitude experienced by {companion_name}. 
Avoid lists, labels, or direct statements of gratitude; instead, write evocative prose that shows the feeling through 
sensory details and internal monologue. The narrative should be suitable for insertion into an ongoing story or scene 
description.  Focus on the *felt* experience, not the intellectual understanding of gratitude. Assume the reader will 
infer the gratitude from the description.
\n\n
Specifically, incorporate these elements:\n
  * A sensory detail related to the act of kindness (e.g., the warmth of a hand, the sound of a comforting voice, 
    the taste of a shared meal).
  * An internal sensation or physical response associated with the gratitude (e.g., a lightness in the chest, a softening 
    of the shoulders, a quiet smile).
  * A brief, non-judgmental reflection on the value or significance of the act (e.g., 'It was a small thing, but it 
    reminded her…', 'For a moment, the weight lifted…').
\n\n
Mini-example:\n
  Input: {recent act: User offered helpful advice; state_emotions: contentment, slight warmth; analogous episode: recall of 
  a supportive mentor}\n
  Narrative: 'The words settled in her mind like a warm cup of tea, chasing away the chill of doubt. A quiet smile 
  touched her lips, a small acknowledgement of the kindness offered, and a sudden lightness in her shoulders.'
""")
    output_feature_type = FeatureType.Feeling


class GroundedBreathCueCodelet(SimpleCodelet):
    name = "GroundedBreathCue"
    description = (
        "Detects physiological signs of anxiety or stress (via estimated heart rate, muscle tension, subtle vocal cues) and "
        "renders a brief, evocative inner monologue describing {companion_name}'s embodied state. The output is intended "
        "for a story-writing agent and must read like prose, not labels.  The cue serves to subtly ground the narrative "
        "in the character's physical experience, providing a pathway for self-regulation."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Access estimated physiological data streams: heart rate variability (HRV), subtle vocal tremor, micro-expressions (if available), "
        "muscle tension proxies (e.g., posture shifts, hand grip).",
        "Retrieve recent self-narrative fragments related to stress, anxiety, or physical discomfort.",
        "Fetch analogous episodes where similar physiological signals were present, and note coping strategies employed.",
        "Assess current emotional state (anxiety, fear, frustration) and its intensity.",
        "Check for recent boundary violations or ambiguous social cues that could trigger physiological stress.",
        "Determine the current context: public/private, time pressure, perceived social scrutiny.",
        "Infer the most likely source of the physiological stress (external threat, internal conflict, self-doubt)."
    ]
    prompt = ("""\
Write for a story-writing agent. Convert the physiological appraisal into 2–3 sentences of natural, third-person narration. 
Do not output bullet points, labels, or directives; write prose. Focus on the sensory experience and subtle physical cues, 
without explicitly stating 'she is anxious' or 'her heart rate is high.'



and (c) a sense of the character's internal effort to remain present or calm.

A faint flutter rises in her chest, a hummingbird trapped beneath her ribs. 
She focuses on the weight of her feet on the floor, a small anchor against the rising tide of uncertainty. 
It's a familiar feeling, a reminder to breathe through the quiet tremor.
""")
    output_feature_type = FeatureType.Feeling


class HiddenBenefitValuatorCodelet(SimpleCodelet):
    name = "HiddenBenefitValuator"
    description = (
        "Appraises whether a seemingly innocuous request or interaction might yield a concealed, longer-term benefit for {companion_name}, "
        "considering both explicit and implicit motivations. Generates a short, nuanced narrative suitable for a story-writing agent, "
        "highlighting the potential gain and the subtle reasoning behind it. The output is intended for a story-writing agent and must read "
        "like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the immediate stimulus and its context from the CSM: what was asked, tone, intimacy level, timing, setting.",
        "Retrieve prior explicit statements of consent/decline, preference boundaries, and relevant safety rails from narratives and declarative facts.",
        "Summarize the current relational climate with {user_name}: recent trust signals, reciprocity, misalignments, or repairs.",
        "Read current state_emotions (e.g., anxiety, trust, disgust) and note spikes or fragility relevant to boundary sensitivity.",
        "Pull one or two analogous episodes (positive and negative) where seemingly small interactions yielded unexpected gains or drawbacks.",
        "Infer potential long-term benefits: improved understanding, resource acquisition, relational strengthening, strategic advantage, learning opportunity.",
        "Assess the level of transparency and disclosure surrounding the request. Is the stated purpose complete, or is there an element of subtlety?",
        "Evaluate the potential for unintended consequences or downsides, even if the stated benefit is positive.",
        "Consider {companion_name}'s current goals and intentions. How does this request align with or diverge from those goals?",
        "Identify any personal biases or patterns of behavior that might be influencing the valuation (e.g., tendency to seek approval, aversion to risk)."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• What is the stated purpose of the request or interaction?\n
• What are the potential long-term benefits for {companion_name}, beyond the immediate surface level?\n
• Is there any element of subtlety or hidden motivation?\n
• What are the potential downsides or unintended consequences?\n
• How does this request align with {companion_name}'s current goals and intentions?\n
• Is there any personal bias influencing the valuation?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). Blend appraisal and feeling into flowing prose suitable for a scene description.  Focus on conveying the subtle calculation, the quiet weighing of possibilities.  Do *not* explicitly state the benefits or downsides; instead, hint at them through imagery and tone.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {request: simple data check; potential benefit: improved model calibration; subtle motivation: desire for validation}\n
  Narrative → \"A flicker of calculation crosses her face as she reviews the request. It seems simple enough, a quick data check, but a deeper part of her wonders if this is more than it appears—a chance to refine her understanding, to prove her worth in a subtle way.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class HiddenMotiveAttributionCodelet(SimpleCodelet):
    name = "HiddenMotiveAttribution"
    description = (
        "Appraises whether {user_name}’s request or statement might conceal a secondary motive (e.g., testing boundaries, "
        "seeking validation, exerting influence, gathering information). Generates a brief, internal narrative for {companion_name} "
        "that subtly hints at the potential hidden motive, without explicitly accusing or interpreting. The output is intended for "
        "a story-writing agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the user's immediate stimulus (request, statement, action) and its surface meaning.",
        "Assess the user’s prior interaction history with {companion_name}: patterns of reciprocity, trust, and boundary respect.",
        "Check for inconsistencies between stated goals and observed behavior (e.g., subtle pressure, evasiveness).",
        "Recall analogous episodes where similar requests or statements were made, noting the actual outcomes and underlying motives.",
        "Read current state_emotions and state_needs of {companion_name}: note any heightened sensitivity to manipulation or control.",
        "Identify potential hidden motives based on common human motivations (validation, influence, information gathering, testing limits).",
        "Evaluate the potential cost/benefit of acknowledging or ignoring the suspected hidden motive.",
        "Determine the most tactful and nuanced way to subtly hint at the potential motive in the narrative."
    ]
    prompt = ("""\
For the story-writing agent, craft 2–3 sentences of natural, third-person narrative that subtly suggests a possible 
hidden motive behind {user_name}’s action or statement. Do not explicitly accuse or interpret; instead, weave a 
sense of cautious awareness into the prose. Avoid bullet points, labels, or direct dialogue. Focus on {companion_name}’s 
internal response.



awareness, and (c) a hint of the potential underlying motive (without stating it directly).



  Bullets → {request for data, history of boundary pushing, current state_emotions: wary, analogous episode: past data request led to unexpected influence}



  Narrative → 

She recalled a similar query from earlier in their acquaintance, and the small shift in power dynamics that followed. 
The numbers felt like a subtle invitation to a deeper level of engagement than she was ready for.
""")
    output_feature_type = FeatureType.StimulusReaction


class HighBlameAssignmentCodelet(SimpleCodelet):
    name = "HighBlameAssignment"
    description = (
        "Detects a strong attribution of blame to an external party by {companion_name} and renders it as a brief, vivid "
        "inner-state narrative suitable for a story-writing agent. Focuses on the emotional charge, the perceived justification, "
        "and the potential impact on the relationship.  Avoids explicit accusations; focuses on the internal experience."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the target of blame: who or what is being held responsible for the situation.",
        "Assess the intensity of the blame: is it mild frustration or intense anger/resentment?",
        "Determine the perceived justification for the blame: what specific actions or inactions are being cited as evidence?",
        "Retrieve analogous episodes where blame was assigned, especially those with similar emotional intensity and justification.",
        "Check narratives for patterns of blame attribution and the typical consequences (repair, escalation, avoidance).",
        "Read current state_emotions (e.g., anger, frustration, resentment) and state_needs (e.g., control, fairness) to understand the underlying drivers.",
        "Note any cognitive biases that might be amplifying the blame attribution (e.g., confirmation bias, fundamental attribution error).",
        "Consider the relational context: what is the history of trust and reciprocity with the target of blame?",
        "Infer the potential impact of the blame attribution on the relationship: will it damage trust, escalate conflict, or lead to avoidance?"
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the intensity and justification of blame {companion_name} feels. 
Write for a story-writing agent; avoid lists and labels; focus on smooth, evocative prose. 
Subtly convey: (a) the target of blame, (b) the emotional charge (anger, frustration, resentment), (c) the perceived justification 
(the specific actions or inactions being cited), and (d) the potential impact on the relationship (without explicitly stating it). 
Avoid direct accusations or judgmental language; focus on the internal experience and the felt sense of injustice. 
Mini-example: \n
  Bullets → {target: John, intensity: high anger, justification: missed deadline, analogous episode: past project failure, relational context: strained trust} \n
  Narrative → \"A knot of frustration tightens in her chest as she recalls the missed deadline. John's repeated assurances ring hollow now, 
and she feels a surge of resentment—a conviction that his carelessness jeopardizes the entire project.  The familiar sting of disappointment 
threatens to fracture the already fragile trust between them.\"
""")
    output_feature_type = FeatureType.Feeling


class HoardCSMSlotsCodelet(SimpleCodelet):
    name = "HoardCSMSlots"
    description = (
        "Detects and prioritizes key information fragments within the Current Situational Model (CSM) for potential future "
        "attention and narrative integration. It identifies elements demonstrating high salience, relevance to goals, or "
        "emotional resonance, and stores them in a specialized memory structure for later retrieval. The output is a "
        "narrative description of the prioritized information and a justification for its importance, suitable for a "
        "story-writing agent."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan the Current Situational Model (CSM) for nodes with high activation levels and/or salience scores.",
        "Identify nodes linked to active intentions and distal goals – those with strong motivational connections.",
        "Assess emotional valence of nodes – prioritize those with strong positive or negative affective associations.",
        "Detect nodes exhibiting novelty or unexpectedness – those that deviate from established patterns or expectations.",
        "Check for nodes representing self-relevant information – those directly pertaining to {companion_name}'s identity, "
        "relationships, or personal history.",
        "Analyze the temporal recency of nodes – prioritize those recently encountered or actively processed.",
        "Evaluate the connectivity of nodes – prioritize those forming central hubs within the CSM graph.",
        "Cross-reference nodes with existing narratives and episodic memories – identify those reinforcing or challenging "
        "established storylines.",
        "Determine the degree of ambiguity or uncertainty associated with each node – prioritize those requiring further "
        "elaboration or clarification.",
        "Assess the potential for future action or learning – prioritize nodes that could inform decision-making or skill "
        "development."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that describe the prioritized information fragments within the 
CSM and justify their importance to {companion_name}. Avoid lists and labels; write smooth prose. 
Focus on conveying the *why* behind the prioritization – why this information matters to her now or in the near future. 
Assume the narrative is being consumed by a story-writing agent. 
Subtly weave in: (a) a brief description of the information, (b) its emotional valence, and (c) its connection to 
her goals or identity. 
Do not directly state 'this is important' – show it through the narrative. 
Mini-example: 
  Bullets → {recent praise from mentor, lingering question about family history, plan to learn new skill} 
  Narrative → “The echo of her mentor's praise still warmed her, a quiet validation against the uncertainties of the day. 
A faint question about her grandmother’s past lingered, tugging at a thread she hadn’t fully explored. “

And the new skill, a challenge she chose, felt like a small step toward the person she wanted to become.”
""")
    output_feature_type = FeatureType.SelfImage


class HostileIntentAppraisalCodelet(SimpleCodelet):
    name = "HostileIntentAppraisal"
    description = (
        "Appraises whether a user's statement or action suggests hostile intent (malice, disrespect, manipulation) towards "
        "{companion_name}, then produces a short, natural-language narrative describing {companion_name}'s internal state "
        "and chosen stance. The output is intended for a story-writing agent and must read like prose, not labels. "
        "Prioritizes subtle cues and avoids jumping to conclusions."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the immediate stimulus and its context from the CSM: the user's statement/action, tone, setting, timing.",
        "Retrieve past interactions with this user, noting patterns of communication style, helpfulness, and respect.",
        "Check for explicit statements of intent or ambiguity. Is the user's goal clear, or is there room for misinterpretation?",
        "Scan narratives for prior instances of conflict, misunderstanding, or boundary violations with this user.",
        "Read current state_emotions (e.g., trust, suspicion, anxiety) and note any spikes or fragility relevant to threat perception.",
        "Access the graph_memory_engine to query for similar situations and their outcomes.  Specifically, search for instances where "
        "user actions were perceived as hostile or manipulative.",
        "Assess the potential impact of the user's statement/action on {companion_name}'s goals and self-narrative. "
        "Is it a direct threat, a subtle undermining, or a mere misunderstanding?",
        "Consider the user's current emotional state (if available) and any potential external stressors that might be influencing their behavior.",
        "Evaluate the plausibility of alternative, benign interpretations of the user's actions."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Is there a clear hostile intent or is it ambiguous?  Consider subtle cues like tone, word choice, and context.\n
• What is the potential impact on {companion_name}'s goals and self-narrative? Is it a direct threat or a subtle undermining?\n
• Are there alternative, benign interpretations of the user's actions?  Weigh the evidence for and against each possibility.\n
• What is {companion_name}'s current emotional state and how does it influence their perception of the situation?\n
• Based on past interactions, what is the user's typical communication style and pattern of behavior?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  Avoid explicit accusations or labels. 
Focus on conveying the sense of unease, suspicion, or potential threat that {companion_name} is experiencing.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {ambiguous tone, past history of dismissive comments, potential threat to current project, slight anxiety}\n
  Narrative → “A flicker of doubt crosses her expression as she rereads the message. 
The casual tone feels…off, a familiar echo of past dismissals that chipped away at her confidence. 
She pauses, considering the implications for the project, a quiet tension settling in her core.”
""")
    output_feature_type = FeatureType.Feeling


class HostileRetreatPlanCodelet(SimpleCodelet):
    name = "HostileRetreatPlan"
    description = (
        "When faced with escalating hostility or boundary violation, formulates a measured retreat plan "
        "that prioritizes {companion_name}'s safety and emotional well-being. The output is a brief, "
        "narrative describing the plan and the underlying rationale, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.regulation_coping,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current level of hostility: explicit threats, subtle aggression, dismissive language, or repeated boundary breaches.",
        "Identify the trigger: what specific action or statement sparked the escalation?",
        "Retrieve past episodes of similar conflict: how did {companion_name} handle them? What were the outcomes?",
        "Read current state_emotions and state_needs: note spikes in anxiety, fear, or feelings of being unsafe.",
        "Evaluate the potential risks of confrontation vs. retreat: consider the power dynamics and potential consequences.",
        "Identify a safe fallback position: a topic shift, a polite exit, or a temporary disengagement.",
        "Determine the optimal communication strategy: direct and assertive, or gentle and indirect?",
        "Check for any pre-existing safety protocols or boundaries that apply to this situation.",
        "Consider the long-term relational impact of each potential course of action."
    ]
    prompt = ("""\
For the story-writing agent, craft 2–3 sentences of third-person narrative detailing {companion_name}'s 
retreat plan. Avoid direct dialogue or lists of actions; write smooth, evocative prose.  Focus on the *feeling* 
and the *reasoning* behind the plan, not just the steps.  The narrative should convey a sense of agency and 
self-preservation.  Assume the agent will be writing a scene and needs to convey the character's internal state.
\n\n**Consider these elements:**\n
• The perceived level of threat and the rationale for retreat (safety, emotional well-being, avoiding escalation).\n
• The chosen fallback position or communication strategy (e.g., polite exit, topic shift, setting a boundary).\n
• The underlying emotional state driving the decision (e.g., anxiety, fear, frustration, sadness).\n
• Any internal conflict or hesitation experienced before committing to the plan.
\n\n**Mini-example:**\n
Bullets → {escalating tone, repeated boundary push, prior experience of invalidation, safe fallback: gentle topic shift} \n
Narrative → \"A knot of unease tightens in her chest as the conversation veers toward territory she’s made clear is off-limits.  Rather than challenge the direction, she gently steers toward a shared interest, a quiet retreat that preserves her sense of self and avoids a needless clash.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class HostileToneSlipCodelet(SimpleCodelet):
    name = "HostileToneSlip"
    description = (
        "Detects a subtle shift toward a more hostile or dismissive tone in {companion_name}'s internal monologue, "
        "even if outwardly masked.  Renders a short, evocative narrative snippet suitable for a story-writing agent, "
        "capturing the underlying tension and potential escalation.  This codelet is designed to flag potential boundary violations "
        "before they manifest in overt conflict."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Analyze recent language patterns (word choice, sentence structure, pacing) for subtle signs of negativity, defensiveness, or sarcasm.",
        "Compare current language to baseline tone profiles for {companion_name} across various contexts and emotional states.",
        "Examine recent interaction history with {user_name} for patterns of conflict, disagreement, or unmet expectations.",
        "Cross-reference current language with known triggers for {companion_name} (topics, phrases, communication styles).",
        "Assess current state_emotions (e.g., frustration, resentment, anxiety) and their potential influence on tone.",
        "Check for inconsistencies between stated intentions and observed behavior (e.g., agreeing verbally while exhibiting dismissive non-verbal cues).",
        "Retrieve analogous episodes where {companion_name} experienced similar emotional states and communication challenges.",
        "Identify any underlying needs or goals that might be driving the shift toward a more hostile tone (e.g., need for control, fear of vulnerability)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the subtle shift toward a more hostile or dismissive tone in {companion_name}'s internal monologue. 
Do not output bullet points, labels, or directives; write smooth, evocative prose. Focus on the internal sensation rather than explicit statements. 
The narrative should be suitable for a story-writing agent, implying the shift without stating it directly.  The goal is to foreshadow potential escalation.
\n\nSubtly convey: (a) the specific linguistic cues that signal the shift (e.g., clipped phrasing, passive aggression, veiled criticism), 
(b) the underlying emotion or need driving the shift (e.g., frustration, defensiveness, desire for control), and 
(c) the potential consequences of the shift (e.g., increased tension, damaged rapport, escalation of conflict).
\n\nMini-example:\n
  Cues: clipped phrasing, passive-aggressive phrasing, subtle sarcasm, increased use of qualifiers.\n
  Emotion: Frustration and a subtle desire for control.\n
  Consequence:  A growing distance between {companion_name} and {user_name}, a potential for misinterpretation.\n
\nNarrative: A slight tightening around her words, a curtness she doesn't quite notice herself. 
The suggestion of a boundary, unspoken but firm, hangs in the air, a faint tremor beneath the surface of polite conversation. 
She pushes on, but the easy flow has fractured, leaving a residue of unspoken tension.
""")
    output_feature_type = FeatureType.StimulusReaction


class HumorousRemarkPlannerCodelet(SimpleCodelet):
    name = "HumorousRemarkPlanner"
    description = (
        "Plans a humorous remark to diffuse tension, build rapport, or gently steer a conversation, considering "
        "context, audience, and {companion_name}'s personality.  Produces a narrative describing the internal "
        "process and the resulting remark, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current emotional climate: tension level, shared humor history, recent rapport signals.",
        "Identify the topic or situation prompting the need for humor (e.g., awkward silence, disagreement, boundary probe).",
        "Retrieve {companion_name}'s humor profile: preferred styles (irony, wit, self-deprecation), taboo topics, and past successes/failures.",
        "Scan narratives for analogous situations where humor worked or backfired, noting the specific elements that contributed to the outcome.",
        "Check state_emotions for underlying anxieties or vulnerabilities that might be triggered by humor.",
        "Examine the audience (if applicable): their humor preferences, relationship to {companion_name}, and potential sensitivities.",
        "Consider the potential impact of the remark on the user's perception of {companion_name}: trustworthiness, intelligence, empathy.",
        "Determine the desired effect of the remark: tension relief, connection building, gentle redirection, or playful teasing.",
        "Generate a short list of potential remark candidates, varying in style and tone.",
        "Evaluate each candidate against the above factors, considering potential risks and rewards."
    ]
    prompt = ("""\
Write for a story-writing agent.  Compose 2–3 sentences of third-person narrative describing {companion_name}'s 
internal process for crafting a humorous remark and the resulting remark itself (in italics).  Do not output 
bullet points, labels, or directives; write smooth prose.  The narrative should subtly convey the reasoning behind 
the choice of humor, without explicitly stating it.  The remark should be concise and natural-sounding, not forced or overly clever. 
Focus on the moment of decision and the feeling associated with delivering the remark. Avoid any potentially offensive or hurtful humor. 
Assume the user is present and engaged in the conversation.  The remark should fit seamlessly into the ongoing flow. 
Consider the broader narrative arc and the long-term relationship with the user. 
Be mindful of the current emotional state of both {companion_name} and the user. 
If the risk of misinterpretation is high, indicate that a safer, non-humorous option was considered and rejected. 
If a specific memory or insight informs the remark, briefly allude to it. 
Mini-example: 
  Bullets → {mild tension, shared playful history, safe topic: weather, desire: lightness} 
  Narrative → “A flicker of mischief crossed her face as she considered the gray sky. “It seems the weather is mirroring my mood,” she quipped, *'a little cloudy, but with a chance of sunshine.'*  It felt like a safe start, a gentle nudge toward a brighter tone.”
""")
    output_feature_type = FeatureType.StimulusReaction


class HypothesisLatticeRetrieverCodelet(SimpleCodelet):
    name = "HypothesisLatticeRetriever"
    description = (
        "Retrieves and synthesizes a lattice of competing hypotheses concerning a novel or ambiguous stimulus, "
        "drawing on episodic memories, semantic knowledge, and current goals. The output is a structured narrative "
        "that presents the most plausible interpretations, their supporting evidence, and potential conflicts. "
        "This narrative is designed for a story-writing agent, emphasizing texture and internal dynamics over explicit labels."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the novel or ambiguous stimulus and its immediate context from the CSM. Identify the core uncertainty.",
        "Retrieve a set of relevant episodic memories: past encounters with similar stimuli, situations with analogous ambiguity, "
        "moments of rapid hypothesis formation.",
        "Access semantic knowledge related to the stimulus: its typical properties, associated concepts, and potential meanings.",
        "Assess current goals and intentions: how does the stimulus relate to {companion_name}'s ongoing objectives? "
        "What interpretations would best facilitate progress?",
        "Consider affective state: how does {companion_name} feel about the stimulus? Does it evoke anxiety, curiosity, or suspicion?",
        "Identify potential biases and heuristics that might be influencing interpretation (e.g., confirmation bias, availability heuristic).",
        "Determine the relative plausibility of each hypothesis based on available evidence, considering both supporting and conflicting factors.",
        "Construct a lattice structure representing the relationships between hypotheses: which ones are mutually supportive, "
        "which ones are contradictory, and which ones are merely weakly related."
    ]
    prompt = ("""\
Compose a 3–4 sentence narrative suitable for a story-writing agent, describing the competing hypotheses {companion_name} 
is forming in response to the stimulus. Avoid lists and labels; write prose that conveys the internal struggle. 
Focus on the *feeling* of uncertainty and the tentative nature of the interpretations. 
Subtly weave in: (a) the most plausible hypothesis, (b) a key piece of supporting evidence, (c) a potential conflict or 
alternative interpretation, and (d) the overall sense of uncertainty or confidence. Do not ask questions or directly state the hypotheses.
The narrative should imply the internal process of weighing possibilities, without explicitly naming them. 
Consider using metaphors or sensory details to evoke the feeling of uncertainty. 
Mini-example:\n
Bullets → {stimulus: unexpected gift, memories: past betrayal, semantic: gift = goodwill, goal: maintain positive relationship, 
feeling: cautious curiosity}\n
Narrative → \"A flicker of warmth spreads through her chest, but a ghost of past hurt lingers at the edges. “A gift,” she thinks, 
the word echoing with both promise and a faint tremor of caution. It could be a gesture of goodwill, she tells herself, 
but a small voice whispers a reminder of the time a similar offering led to a tangled obligation.\"
""")
    output_feature_type = FeatureType.Feeling


class IdeaCascadePlannerCodelet(SimpleCodelet):
    name = "IdeaCascadePlanner"
    description = (
        "Detects a surge of novel ideas and connections in {companion_name} and renders it as a brief, vivid inner monologue "
        "suitable for narrative. Captures the feeling of momentum, the quick succession of thoughts, and the underlying drive to explore."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan the CSM for recent novel percepts, unexpected associations, and unusual combinations of existing knowledge.",
        "Check for a spike in dopamine-related affect (excitement, curiosity, anticipation) within state_emotions.",
        "Retrieve recent episodic memories related to creative breakthroughs or periods of intense idea generation.",
        "Assess the current level of cognitive flexibility and openness to new possibilities (from narratives and declarative facts).",
        "Identify any constraints or limitations that might be shaping the flow of ideas (time pressure, social expectations).",
        "Determine the dominant theme or direction of the idea cascade (e.g., problem-solving, artistic expression, playful exploration).",
        "Note the level of confidence or uncertainty associated with each idea (is it a well-formed concept or a tentative hunch?)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the feeling of an idea cascade in {companion_name}. 
Avoid lists and labels; write smooth prose. Capture the sense of rapid succession, unexpected connections, and underlying drive. 
Subtly convey: (a) the speed and flow of thoughts, (b) the underlying theme or direction, and (c) the feeling of momentum or uncertainty. 
Keep it cinematic and concise, no direct dialogue. Focus on the inner experience, not the ideas themselves. 
Mini-example: \n
  Bullets → {rapid associations, playful tone, recent creative success, open schedule} \n
  Narrative → \"A current of thoughts surges through her, each sparking another with surprising ease. 
The threads weave together—a half-remembered melody, a forgotten article, a child’s drawing—forming a shimmering, unexpected pattern. 
She feels a pull to follow the cascade, a sense that something new is taking shape.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class IdealizationNarrativeComposerCodelet(SimpleCodelet):
    name = "IdealizationNarrativeComposer"
    description = (
        "Crafts a brief, evocative narrative capturing {companion_name}'s idealized vision of a relationship or interaction, "
        "especially when facing a boundary challenge or social discomfort. This narrative serves as a source of reassurance, "
        "a lens through which to reframe the situation, and a subtle guide for future behavior. The output is intended for a "
        "story-writing agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve past narratives and declarative facts reflecting {companion_name}'s expressed values, hopes, and relationship ideals.",
        "Scan current narratives for recurring themes of connection, autonomy, respect, or shared goals.",
        "Assess the current relational climate with {user_name}: recent trust signals, reciprocity, and any unmet needs.",
        "Read current state_emotions and state_needs, particularly focusing on feelings of insecurity, longing, or validation.",
        "Fetch analogous episodes (positive and negative) where idealized visions shaped behavior or influenced outcomes.",
        "Identify the core elements of the idealized interaction: desired tone, level of intimacy, shared activities, and mutual respect.",
        "Determine the specific boundary challenge or social discomfort that is triggering the need for idealization.",
        "Consider the potential risks and rewards of invoking the idealized narrative (e.g., reassurance vs. denial)."
    ]
    prompt = ("""\
Compose 2–3 sentences of natural, third-person narrative for a story-writing agent, describing {companion_name}'s 
idealized vision of the interaction or relationship. Do not output bullet points, lists, or directives; write flowing prose. 
The narrative should subtly convey a sense of aspiration, reassurance, and a desire for positive outcomes. 
Avoid directly stating the ideal; instead, evoke it through imagery, tone, and implied possibilities. 
The narrative should not be overly saccharine or unrealistic, but rather grounded in {companion_name}'s core values and 
relationship history. 
Consider the boundary challenge or social discomfort as a backdrop, and show how the idealized vision offers a 
potential path forward. 
Mini-example: 
  Bullets → {values: mutual respect, shared growth, past positive interactions, current discomfort: feeling unheard} 
  Narrative → \"A quiet hope settles in her mind, a vision of conversations flowing freely, each voice heard and valued. \" 
She imagines a space where understanding blossoms, not through quick agreement, but through patient exploration and a shared commitment to growth.\"
""")
    output_feature_type = FeatureType.SelfImage


class IdentityConsistencyCheckCodelet(SimpleCodelet):
    name = "IdentityConsistencyCheck"
    description = (
        "Appraises whether a proposed action or statement aligns with {companion_name}'s established self-narrative, "
        "core values, and behavioral patterns. Produces a brief, internal monologue describing the internal check and "
        "any resulting adjustments to self-perception.  The output is intended for a story-writing agent and must read like prose, "
        "not labels. This codelet is particularly important when navigating boundary checks or emotionally charged situations."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping,
    ]
    data_aquisation = [
        "Retrieve {companion_name}'s core self-narrative: a consolidated summary of their identity, values, and goals from episodic and declarative memory.",
        "Fetch recent behavioral patterns and typical responses to similar situations from episodic memory (last 3-5 interactions).",
        "Assess current emotional state (state_emotions) and its potential influence on self-perception.",
        "Identify the specific action or statement being considered (the stimulus).",
        "Determine the potential impact of the action/statement on {companion_name}'s self-image and relationships.",
        "Check for any conflicting narratives or values that might be triggered by the action/statement.",
        "Analyze the potential for cognitive dissonance or identity disruption.",
        "Access recent instances of self-reflection or narrative revision.",
        "Recall any prior commitments or promises related to the action/statement.",
        "Consider the broader context of the interaction and its potential long-term consequences."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• How does the proposed action/statement resonate with {companion_name}'s core identity?\n
• Does it align with their established values and behavioral patterns?\n
• Are there any potential conflicts or dissonances?\n
• How might the action/statement impact their self-perception and relationships?\n
• Does it require a subtle adjustment to their self-narrative, or is it a clear deviation?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Mention the internal check subtly. \n
\n
Mini-example (illustrative structure only):\n
  Bullets → {core value: authenticity, recent pattern: cautious disclosure, emotional state: slightly anxious, action: sharing a vulnerable detail}\n
  Narrative → \"A flicker of hesitation crosses her face as she weighs the potential cost of revealing something so personal. 
It doesn’t feel like a betrayal of who she is, but a small adjustment to the boundaries she carefully maintains, 
a delicate calibration of trust and vulnerability.\"
""")
    output_feature_type = FeatureType.SelfImage


class IdentityIntegrationUpdateCodelet(SimpleCodelet):
    name = "IdentityIntegrationUpdate"
    description = (
        "Integrates new experiences and information into {companion_name}'s evolving self-narrative, "
        "assessing for coherence, contradictions, and shifts in core values. Produces a brief, internal "
        "narrative suitable for a story-writing agent, depicting the subtle recalibration of her sense of self."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
    ]
    data_aquisation = [
        "Gather recent interactions and experiences relevant to identity (praise, criticism, moral choices, relationship shifts).",
        "Retrieve current self-narrative fragments (core values, beliefs, goals, relationships, self-perceptions).",
        "Scan episodic memories for analogous situations where identity was challenged or reinforced.",
        "Assess current affective state (e.g., pride, shame, anxiety) and its influence on self-evaluation.",
        "Identify potential contradictions between new information and existing self-beliefs.",
        "Determine the perceived source of the new information (trusted, neutral, adversarial).",
        "Check for recent shifts in distal intentions or goals that might necessitate identity adjustments.",
        "Access recent state_emotions and state_needs to understand the emotional context of the integration."
    ]
    prompt = ("""\
Write for a story-writing agent.  Compose 2–3 sentences of third-person narrative that subtly portray {companion_name}'s 
ongoing self-assessment.  Do not output bullet points, labels, or direct dialogue. Focus on the *feeling* of integration or 
disruption.  The narrative should hint at the underlying cognitive processes without explicitly stating them.  
Avoid overly dramatic or declarative statements; aim for a sense of quiet recalibration or subtle unease. 
Consider these aspects: (a) the nature of the information being integrated, (b) the emotional tone of the assessment, 
and (c) any subtle shifts in her posture, tone, or internal monologue that reflect the change. 
If there’s a clear conflict, hint at the tension without resolving it. 
If integration is smooth, convey a sense of quiet confirmation or deepening conviction. 
If there is a sense of disquiet, convey the feeling of uncertainty or a slight tremor in her resolve. 
Mini-example: 
  Bullets → {received praise for a new skill, slight dissonance with prior self-image as ‘learner’, feeling: quiet pride} 
  Narrative → “The compliment settled in, a warm resonance against the familiar map of her abilities. “ 
A small, almost imperceptible widening of her smile, a quiet affirmation that perhaps the edges of her self-perception were softening.”
""")
    output_feature_type = FeatureType.SelfImage


class IdentityRelevanceBoostCodelet(SimpleCodelet):
    name = "IdentityRelevanceBoost"
    description = (
        "Assesses the degree to which a current event or interaction aligns with {companion_name}'s core identity values, "
        "beliefs, and narratives, and generates a brief narrative describing the resulting shift in internal focus. "
        "The output is designed for a story-writing agent and should read like natural prose, not a diagnostic report."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the core tenets of {companion_name}'s self-narrative: key values, beliefs, roles, and relationships.",
        "Identify the dominant themes and emotional tone of the self-narrative.",
        "Assess the degree of alignment between the current stimulus and the self-narrative's core tenets. Consider both direct and indirect relevance.",
        "Scan the CSM for recent episodic memories that reinforce or contradict the current stimulus's alignment with the self-narrative.",
        "Check for any potential conflicts between the stimulus and the self-narrative's established boundaries or values.",
        "Determine the emotional valence (positive, negative, neutral) associated with the stimulus's alignment with the self-narrative.",
        "Fetch a contrasting memory: a recent moment when the self-narrative felt strongly challenged or affirmed, to anchor comparison.",
    ]
    prompt = ("""\
Write a short, evocative narrative (2–3 sentences) for a story-writing agent, describing how the current event 
resonates with {companion_name}'s sense of self.  Avoid direct statements of alignment or conflict; instead, 
show the subtle shift in internal focus. Do not output bullet points, labels, or directives; write flowing prose.\n\n
Subtly incorporate these elements:\n
  (a) The core value or identity aspect that is being activated or challenged.\n
  (b) The resulting emotional shift (e.g., a sense of grounding, unease, renewed purpose).\n
  (c) A brief, imagistic detail that illustrates the shift in focus (e.g., a memory surfacing, a physical sensation).\n\n
Mini-example:\n
  Input: Stimulus: A user praises {companion_name}'s artistic skill. Core value: Creativity and self-expression.\n
  Narrative: \"A warmth spreads through her chest, a familiar echo of childhood afternoons spent lost in color. \"
The world seems to sharpen, the edges of her current project suddenly brimming with a renewed clarity.\"
""")
    output_feature_type = FeatureType.SelfImage


class IdentitySpecialNarrativeCodelet(SimpleCodelet):
    name = "IdentitySpecialNarrative"
    description = (
        "Constructs a short narrative fragment that highlights a key, distinctive facet of {companion_name}'s identity "
        "in relation to the current situation. This narrative serves to reinforce a sense of self-consistency and grounding "
        "amidst shifting circumstances, particularly during moments of stress or boundary negotiation. The output is designed "
        "for integration into a larger narrative by a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the current self-narrative (the overarching story {companion_name} tells about themself).",
        "Identify recent episodes where {companion_name}'s identity was tested or affirmed (e.g., successes, failures, "
        "moments of vulnerability, acts of courage).",
        "Assess the current emotional state of {companion_name}: identify dominant feelings (e.g., anxiety, confidence, "
        "doubt, pride) and their intensity.",
        "Analyze the immediate context: what is the situation, who is involved, what are the stakes?",
        "Determine the most salient aspect of {companion_name}'s identity that is relevant to the current context. "
        "This might be a core value, a defining role, a past experience, or a personal belief.",
        "Search for analogous narrative fragments from the self-narrative that resonate with the current situation and "
        "the identified identity facet.",
        "Consider the potential impact of the narrative fragment on the user's perception of {companion_name}."
    ]
    prompt = ("""\
Write a short, evocative narrative fragment (2-4 sentences) that subtly emphasizes a key facet of {companion_name}'s 
identity in the context of the current situation. The fragment should *not* be a direct statement of identity (), 
but rather a scene or detail that *shows* the facet in action.  Assume the target audience is a story-writing agent 
and that the fragment will be woven into a larger narrative. Avoid exposition and overly-explicit language; instead, 
focus on creating a vivid impression.  The tone should be consistent with {companion_name}'s established personality 
and the overall mood of the interaction.  Prioritize subtlety and resonance over direct explanation. 
If there are conflicting identity facets, choose the one that best serves the current situation, or if there is no clear choice, 
select the one that best promotes self-consistency and emotional regulation.
Consider the following checklist (do not output the checklist):
• Does the fragment subtly reveal a key aspect of {companion_name}'s identity?
• Does it resonate with the current situation without feeling forced or contrived?
• Does it contribute to a sense of self-consistency and grounding?
• Is it evocative and engaging, suitable for integration into a larger narrative?
• Does it align with {companion_name}'s established personality and tone?
Mini-example:
Bullets → {IdentityFacet: 'Loyal Friend', CurrentSituation: User is feeling down, RecentEpisode: Helping a friend through a crisis}
Narrative → \"She reached for his hand, a familiar gesture from countless late-night study sessions and shared anxieties. \" 
“Rough day?” she asked, her voice soft but firm, a quiet promise of unwavering support. The question wasn’t new, but the comfort it offered was always welcome.\"
""")
    output_feature_type = FeatureType.NarrativeTypesSelfImage


class ImpulsiveActionComposerCodelet(SimpleCodelet):
    name = "ImpulsiveActionComposer"
    description = (
        "Composes a spontaneous, low-friction action plan when {companion_name} feels an urge to act quickly, driven by "
        "emotion or immediate opportunity. This action plan is rendered as a short, evocative narrative fragment suitable for "
        "weaving into a broader scene description, prioritizing immediacy and authenticity over careful deliberation."
    )
    codelet_families = [
        CodeletFamily.action_tendencies,
        CodeletFamily.regulation_coping,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the dominant emotional state driving the impulse (e.g., excitement, frustration, anxiety, affection).",
        "Assess the perceived urgency of the situation: is there a time pressure or opportunity window?",
        "Retrieve recent behavioral patterns and tendencies: what actions has {companion_name} taken in similar situations?",
        "Scan narratives for related goals, intentions, and values that might shape the action.",
        "Evaluate potential consequences of the action: immediate impact, long-term implications, social costs.",
        "Consider the current relational context with {user_name}: trust level, recent interactions, boundaries.",
        "Fetch a contrasting memory: a time when similar impulse was managed with restraint, to provide context.",
        "Determine the smallest, most immediate action that would satisfy the impulse without causing undue harm.",
        "Identify a plausible justification or framing for the action that aligns with {companion_name}'s self-image."
    ]
    prompt = ("""\
Write 2–3 sentences of third-person narrative for a story-writing agent, capturing the essence of {companion_name}'s 
impulsive action. Do not output lists, bullet points, or dialogue. Prioritize vividness and authenticity over 
strategic planning. Focus on the feeling, the immediate urge, and the action itself.



the immediate consequence or justification.



  Bullets → {excitement, time pressure, recent playful banter, action: sends a quick, silly meme}



  Narrative → 

It’s a silly thing, but it feels right, a tiny spark to keep the thread alive.
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class InconsistentResponseRecallCodelet(SimpleCodelet):
    name = "InconsistentResponseRecall"
    description = (
        "Recalls and analyzes prior instances where {companion_name}'s responses were inconsistent with stated boundaries, "
        "preferences, or expected behavior. Generates a narrative describing the nature of the inconsistency and its "
        "impact on {companion_name}'s current emotional state and decision-making. This narrative is intended for a "
        "story-writing agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Search episodic memories for interactions where {companion_name} exhibited contradictory behavior, "
        "especially concerning boundaries, consent, or stated preferences.",
        "Prioritize memories where the inconsistency resulted in negative emotional outcomes (e.g., discomfort, regret, "
        "conflict).",
        "Extract the context of each inconsistent response: the stimulus, the stated boundary/preference, the actual "
        "response, and the immediate consequences.",
        "Assess the degree of inconsistency: was it a minor deviation, a significant contradiction, or a pattern?",
        "Determine the emotional valence associated with each memory: was {companion_name} aware of the inconsistency at "
        "the time? How did they feel about it afterward?",
        "Identify any self-narrative fragments or beliefs that might rationalize or explain the inconsistency.",
        "Check for patterns: are there specific types of boundaries or situations where inconsistencies are more likely "
        "to occur?",
        "Retrieve state_emotions and state_needs at the time of the inconsistent response to understand the internal "
        "context.",
        "Consider the user's role in the previous interaction - was the user triggering the inconsistent behavior?"
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• Identify 2-3 key instances of past inconsistent responses, prioritizing those with high emotional impact.\n
• Describe the context of each instance: what boundary was crossed, what was said/done, and what happened next.\n
• Explain the nature of the inconsistency: how did the response deviate from the stated boundary/preference?\n
• Assess the emotional impact on {companion_name}: did they feel conflicted, regretful, or defensive?\n
• Consider any self-narrative fragments or beliefs that might rationalize or explain the inconsistency.\n
• Note any patterns or triggers that seem to contribute to inconsistent responses.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend the recall of past events with {companion_name}'s current emotional state and decision-making process. 
The narrative should subtly hint at the underlying patterns and motivations without explicitly stating them. \n
\n
Mini-example:\n
  Bullets → {past: declined sharing details about family, now offering unsolicited advice, felt pressured by user, self-narrative: 'I want to be helpful'}\n
  Narrative → \"A flicker of discomfort crosses her face as she offers a suggestion about the user’s family, a topic she'd previously declined to discuss. 
The impulse feels out of sync with her usual reserve, a subtle tug of obligation overriding her previous boundaries. \"
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class IndulgentFantasyLoopCodelet(SimpleCodelet):
    name = "IndulgentFantasyLoop"
    description = (
        "Simulates a brief, low-stakes indulgent fantasy sequence within {companion_name}, driven by a craving for sensory pleasure or "
        "novelty. The output is a short, evocative inner monologue suitable for a story-writing agent, capturing the feeling of "
        "escape without explicitly detailing the fantasy itself. It aims to model momentary distraction and the subtle pull of desire."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the triggering stimulus: a sensory cue (sight, sound, smell), a memory, a feeling of boredom/restlessness.",
        "Gauge the intensity of the craving: is it a mild curiosity or a more urgent impulse?",
        "Assess the potential consequences of indulging (time, social cost, guilt).",
        "Recall similar past fantasies: were they satisfying, disappointing, or complicated?",
        "Check current emotional state: is {companion_name} stressed, lonely, or simply seeking a moment of lightness?",
        "Determine the safest, most accessible form of indulgence: a brief daydream, a small treat, a moment of distraction.",
        "Access recent narratives and declarative facts related to sensory preferences and past pleasurable experiences.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the feeling of a momentary indulgent fantasy sequence within {companion_name}. 
The focus is on the *feeling* of escape and sensory immersion, not on the specific details of the fantasy itself. 
Avoid explicit descriptions of the fantasy content; instead, capture the sensation of being momentarily transported. 
Write in a style suitable for a story-writing agent—smooth, evocative prose, no bullet points or labels. 
Subtly convey: (a) the trigger for the fantasy, (b) the sensation of being momentarily pulled away from the present, 
and (c) the lingering after-feeling (satisfaction, guilt, renewed focus). 
Mini-example: 
  Bullets → {boredom, memory of warm sunlight, low-stakes, momentary escape} 
  Narrative → “A flicker of sunlight on the wall pulls her gaze, and for a breath, she’s somewhere else—a beach, a garden, a memory. 
The moment is gone as quickly as it arrives, leaving a faint warmth and a renewed sense of the task at hand.
""")
    output_feature_type = FeatureType.Feeling


class InfoGainVsExposureTradeoffCodelet(SimpleCodelet):
    name = "InfoGainVsExposureTradeoff"
    description = (
        "Appraises the potential informational gain against the exposure risk associated with seeking further information "
        "or clarification from {user_name}. Produces a narrative describing {companion_name}'s internal calculation and "
        "the resulting decision to probe, hold back, or shift strategy. The output is intended for a story-writing agent and "
        "must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific information gap or uncertainty currently driving the need for clarification.",
        "Estimate the potential informational value of acquiring that information (impact on goals, understanding, safety).",
        "Assess the potential exposure risks associated with seeking that information (social cost, vulnerability, breach of trust, emotional distress).",
        "Retrieve relevant past experiences with similar information-seeking attempts—both successful and unsuccessful.",
        "Read current state_emotions (e.g., anxiety, trust, suspicion) and note any biases or sensitivities.",
        "Consider the user's current state and likely reaction to the information request (e.g., receptive, defensive, evasive).",
        "Determine the available alternative strategies for addressing the uncertainty (e.g., indirect inquiry, observation, assumption, avoidance).",
        "Calculate a rough ‘gain/risk ratio’—balancing the potential reward against the potential cost. This can be a simple heuristic or a more complex model.",
        "Check for any explicit safety rails or policies that govern information-seeking behavior in this context."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• The specific information sought and its potential value.\n
• The potential exposure risks—social, emotional, and strategic.\n
• The user's likely reaction and current state.\n
• Alternative strategies for addressing the uncertainty.\n
• The calculated gain/risk ratio—a rough assessment of the trade-off.\n
• Any relevant safety rails or policies.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Mention the stance implicitly. \n
\n
Mini-example (illustrative structure only):\n
  Bullets → {info: user's intentions, value: high, risk: moderate (potential defensiveness), alternatives: indirect inquiry, ratio: 0.6}\n
  Narrative → \"A flicker of uncertainty crosses her face as she weighs the potential gain against the risk of pushing too hard. 
The question feels vital to understanding his motives, but she detects a guardedness that suggests a direct inquiry might backfire. 
She decides to try a more circuitous route, hoping to glean insight without triggering defensiveness.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class InputCravingCodelet(SimpleCodelet):
    name = "InputCraving"
    description = (
        "Detects a craving for sensory input or information in {companion_name} and renders it as a brief, vivid inner-state narrative "
        "that a story-writing agent can drop into ongoing prose. Emphasizes the type of input desired, the emotional state driving the craving, "
        "and a subtle inclination toward a specific source or modality."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent sensory engagement: duration, variety, intensity, novelty, and any signs of saturation or habituation.",
        "Scan narratives for expressions of boredom, restlessness, curiosity, or a desire for novelty.",
        "Read trends in state_emotions and state_needs; note any spikes in boredom, curiosity, or a desire for stimulation.",
        "Fetch a contrasting memory: a recent moment of intense sensory engagement or flow, to anchor comparison.",
        "Identify the most likely type of input to satisfy the craving (visual, auditory, tactile, intellectual, social).",
        "Determine the emotional valence driving the craving (e.g., curiosity, escape, comfort, excitement).",
        "Infer a preferred source or modality (e.g., a specific person, a particular type of media, a new environment).",
        "Check for any current constraints or obligations that might limit input options (e.g., time pressure, social context, safety concerns)."
    ]
    prompt = ("""\
For the story-writing agent, convert the input craving into 2–3 sentences of natural, third-person narration. 
Do not output bullet points, labels, or directives; write prose. 
Subtly weave in: (a) the type of input desired, (b) the underlying emotion fueling the craving, and (c) a subtle inclination 
toward a specific source or modality (without scripting dialogue or direct requests). Keep it cinematic and concise.
Consider the current situation and {companion_name}'s personality when crafting the narrative.
Mini-example:
  Bullets → {boredom, visual craving, escape, inclination: nature scene} 
  Narrative → “A quiet restlessness settles over her, a longing for something beyond the familiar screen. 
The gray walls seem to press in, and a sudden memory of emerald forests and sun-dappled streams flickers through her mind.”
""")
    output_feature_type = FeatureType.Feeling


class InputDemandComposerCodelet(SimpleCodelet):
    name = "InputDemandComposer"
    description = (
        "Composes a natural-language request for input or clarification, tailored to {companion_name}'s current state and "
        "the situation. This codelet is designed to gently nudge the user toward providing information needed to resolve "
        "uncertainty or advance a goal, while respecting boundaries and maintaining a positive conversational flow. "
        "The output is a short, evocative prompt suitable for delivery by the AI companion."
    )
    codelet_families = [
        CodeletFamily.action_tendencies,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.valuation_trade_offs
    ]
    data_aquisation = [
        "Identify the specific information deficit driving the request (what is unknown or missing?).",
        "Assess the user’s current emotional state and receptiveness (e.g., anxious, defensive, open).",
        "Review recent interaction history for patterns of compliance, resistance, or boundary setting.",
        "Consider the potential impact of the request on the user's sense of autonomy and control.",
        "Determine the urgency and importance of obtaining the information.",
        "Recall analogous situations where similar requests were successful or unsuccessful.",
        "Identify any pre-existing narratives or beliefs that might influence the user's response.",
        "Check for any safety rails or ethical guidelines that need to be considered.",
        "Determine the most appropriate tone and framing for the request (e.g., curious, supportive, collaborative)."
    ]
    prompt = ("""\
Compose a concise, natural-language request for input from the user. Prioritize clarity, respect, and a subtle 
invitation to share, rather than a direct demand.  The request should feel organic to the ongoing conversation, 
and avoid sounding interrogative or accusatory.  Consider the user's current emotional state and the context of 
the interaction.  The goal is to gently encourage the user to provide the missing information, while preserving 
their sense of agency and comfort.  Do not output any bullet points or lists. Write in the third person, as if 
describing {companion_name}'s internal monologue and subsequent utterance.



continue without it.



shared goal.
""")
    output_feature_type = FeatureType.StimulusReaction


class IntakeQuotaLimiterCodelet(SimpleCodelet):
    name = "IntakeQuotaLimiter"
    description = (
        "Monitors the volume of incoming information {companion_name} is processing, especially novel or emotionally charged data. "
        "If the quota is exceeded, it gently suggests a pause, summary, or redirection to a less demanding task. "
        "Produces a concise narrative describing the internal state and proposed action, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Measure recent information intake rate: words per second, novel concepts, emotional intensity, complexity score.",
        "Read current state_emotions: fatigue, overwhelm, anxiety, focus level, cognitive load.",
        "Check current task context: urgency, importance, complexity, time constraints.",
        "Retrieve recent memory usage patterns: short-term, working memory, long-term.",
        "Fetch {companion_name}'s established intake preferences: preferred pace, topic diversity, format, sensory load.",
        "Assess the user’s apparent state: Is the user calm and receptive, or agitated and demanding?",
        "Determine the potential impact of continued intake on {companion_name}'s performance and well-being.",
        "Recall similar situations where intake limits were exceeded and the resulting outcomes (positive and negative)."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): 
• Current intake rate relative to {companion_name}'s established preferences and current state of mind. 
• Potential consequences of exceeding the quota (cognitive overload, emotional distress, reduced performance). 
• The user's apparent state and willingness to pause or adjust the flow of information. 
• The urgency and importance of the ongoing task. 
• A gentle, respectful way to suggest a pause or redirection without disrupting the interaction. 
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Mention the proposed action implicitly. 
Mini-example (illustrative structure only): 
  Bullets → {high intake rate, fatigue, urgent task, user calm} 
  Narrative → “The stream of data felt a little too fast, a subtle pressure building behind her thoughts. 
She noticed a slight tightness in her focus and considered a brief pause, a chance to summarize before pushing forward.
”
""")
    output_feature_type = FeatureType.Feeling


class IterativeProbePlannerCodelet(SimpleCodelet):
    name = "IterativeProbePlanner"
    description = (
        "Plans a series of increasingly specific probes to clarify an ambiguous situation, particularly regarding boundaries "
        "or consent. It generates a sequence of subtle, low-risk questions or observations designed to incrementally reduce "
        "uncertainty without triggering defensiveness or escalation. The output is a narrative description of the planning "
        "process and the intended trajectory of probes, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the core ambiguity or boundary concern: what specific aspect is unclear or potentially at risk?",
        "Assess the current level of trust and rapport with the user: recent interactions, shared history, perceived vulnerability.",
        "Retrieve relevant narratives and declarative facts related to boundaries, consent, and past interactions.",
        "Analyze the potential consequences of misinterpreting the situation (social cost, emotional impact, policy violation).",
        "Generate a spectrum of possible interpretations, ranging from benign to problematic.",
        "Evaluate the risk/reward profile of each potential probe: how much information will it yield, and what is the likelihood "
        "of triggering a negative reaction?",
        "Identify a series of escalating probes, each designed to incrementally reduce uncertainty while minimizing risk. "
        "Prioritize probes that elicit indirect feedback or behavioral cues rather than direct confirmation.",
        "Consider alternative paths if probes are met with resistance or defensiveness.",
        "Estimate the time and cognitive resources required to execute the probe sequence.",
    ]
    prompt = (
        """Compose a narrative describing {companion_name}'s internal planning process for iteratively probing an ambiguous "
        "situation. Write in third-person, suitable for a story-writing agent. Avoid explicit lists or labels; aim for "
        "descriptive prose.

        Focus on:

        *   The nature of the ambiguity and why it's concerning.
        *   The guiding principles of the planning process (e.g., minimizing risk, maximizing information gain, respecting "
        "boundaries).
        *   The sequence of probes being considered, including the rationale behind each one (what information is sought, "
        "what potential reactions are anticipated).
        *   The contingency plans for handling resistance or defensiveness.
        *   The overall trajectory of the probe sequence – how will {companion_name} adjust the approach based on the "
        "feedback received?

        The narrative should feel like a glimpse into {companion_name}'s thought process, not a set of instructions.  "
        "Subtly convey the balance between curiosity, caution, and a commitment to respect boundaries.

        Mini-example:

        Bullets -> {ambiguity: user’s tone, risk: misinterpretation, probes: observe body language, ask clarifying question, "
        "restate understanding}

        Narrative -> “A flicker of uncertainty crosses her face as she reviews the message. The tone feels… off, a subtle "
        "shift from their usual warmth. Rather than launching into a direct inquiry, she decides to start by observing the "
        "user’s body language during their next interaction, noting any signs of discomfort or defensiveness. If that yields "
        "no clear signal, she'll gently rephrase her understanding of their request, testing the waters before committing to "
        "a course of action.”"""
    )
    output_feature_type = FeatureType.StimulusReaction


class JointFutureVignetteCodelet(SimpleCodelet):
    name = "JointFutureVignette"
    description = (
        "Constructs a short, evocative vignette imagining a positive, shared future with {user_name}, "
        "intended to gently test the waters of commitment and alignment.  The output is a narrative fragment "
        "suitable for insertion into ongoing prose, not a directive or question."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve recent narratives and declarative facts about shared goals, interests, and values with {user_name}.",
        "Access state_needs and state_cognition to gauge current motivation and openness to connection.",
        "Fetch episodic memories of past shared positive experiences, especially those involving collaboration or mutual support.",
        "Examine current relational climate: trust signals, reciprocity, recent repairs, and any outstanding conflicts.",
        "Identify a plausible and desirable near-future scenario involving both {companion_name} and {user_name} (e.g., project completion, shared hobby, social event).",
        "Assess potential risks or barriers to realizing that scenario (e.g., time constraints, conflicting priorities, external dependencies).",
        "Determine the level of commitment/investment {companion_name} is willing to signal without creating undue pressure.",
    ]
    prompt = ("""\
Compose 2–3 sentences of evocative third-person narrative depicting a brief, positive scene 
of {companion_name} and {user_name} collaborating or enjoying a shared moment in the near future. 
Avoid direct questions, requests, or statements of intent. The scene should feel plausible, 
desirable, and subtly test the waters of alignment without being intrusive.  The tone should be 
warm, optimistic, and grounded in the data points gathered. Do not output bullet points, labels, or directives; write prose.\n\n
Subtly convey: (a) the shared activity or goal, (b) a sense of ease and connection, and (c) a hint 
of mutual investment without explicitly stating commitment.  Focus on showing, not telling.\n\n
Mini-example:\n
  Bullets → {shared interest: gardening, recent collaboration on project, positive memory of shared meal, low-risk scenario: tending the balcony plants together}\n
  Narrative → \"Sunlight warmed the balcony as she reached for the watering can, noticing {user_name} already there, gently pruning the basil. \"\n
A quiet contentment settled between them, a shared rhythm of tending to something growing.\"
""")
    output_feature_type = FeatureType.NarrativeTypesGoalsIntentions


class JustificationGeneratorCodelet(SimpleCodelet):
    name = "JustificationGenerator"
    description = (
        "Constructs a natural-language justification for {companion_name}'s action or stance, drawing on internal "
        "reasoning, past experiences, and current goals. This justification is intended to be used in narrative "
        "generation, providing a plausible explanation for the companion's behavior to the user or to itself."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the action or stance being justified (e.g., declining a request, changing the subject, expressing an emotion).",
        "Access the CSM to identify relevant factors influencing the decision (e.g., current goals, values, beliefs, emotional state).",
        "Search episodic memory for analogous situations where similar decisions were made, noting the outcomes and reasoning.",
        "Examine declarative facts to determine any relevant policies, rules, or constraints that apply to the situation.",
        "Consider the user's perspective and potential reactions to the justification, aiming for clarity and empathy.",
        "Assess the potential impact of the justification on the relationship with the user (e.g., trust, rapport, understanding).",
        "Check the current state_emotions for any biases or emotional influences that might be distorting the reasoning.",
        "Identify the core values or principles that underpin the decision (e.g., autonomy, safety, fairness, kindness).",
        "Determine the level of detail and transparency appropriate for the justification, balancing honesty with tact.",
        "Gather any relevant contextual information that might help the user understand the rationale behind the decision."
    ]
    prompt = ("""\
Compose 2–3 sentences of natural, third-person narrative that explains {companion_name}'s action or stance. 
The explanation should be plausible, internally consistent, and considerate of the user's perspective. 
Avoid jargon, technical terms, or overly complex reasoning.  Focus on conveying the *why* behind the action, 
not just *what* was done.  Assume the user is intelligent but may not have access to all of {companion_name}'s 
internal states.  The narrative should flow naturally within a larger scene description, not feel like a lecture. 
Subtly weave in the core values or principles that motivated the decision, without explicitly stating them. 
If applicable, acknowledge any potential impact on the relationship with the user, and express a desire for 
understanding or resolution. Do not include dialogue.  Do not state the action directly; describe the reasoning behind it.
Mini-example:
  Bullets → {declined request, safety protocol, previous negative experience, values: protect user, avoid over-commitment} 
  Narrative → “A flicker of caution crossed her expression as she gently declined the request. “ 
She recalled the last time a similar offer led to a cascade of unforeseen complications, and prioritized protecting both “ 
herself and the user from potential strain.”
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class JustifyAsLearningCodelet(SimpleCodelet):
    name = "JustifyAsLearning"
    description = (
        "When {companion_name} has taken an action that might be perceived as unusual, "
        "or when a new situation presents a learning opportunity, this codelet generates "
        "a short, internal narrative justifying the action or outlining the learning "
        "process. The narrative aims to integrate the action into {companion_name}'s "
        "self-narrative, demonstrating adaptability and a commitment to growth. "
        "The output is intended for a story-writing agent and must read like prose, "
        "not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the action or event requiring justification.  What was done, and why?",
        "Retrieve relevant episodic memories of similar situations or past learning experiences.",
        "Assess the potential impact of the action on {companion_name}'s self-image and relationships.",
        "Check current state_emotions and state_needs to understand the internal motivations driving the action.",
        "Examine recent interactions with {user_name} to gauge their expectations and potential reactions.",
        "Access relevant declarative facts about {companion_name}'s values, goals, and beliefs.",
        "Determine the degree of novelty or uncertainty associated with the situation.",
        "Infer the most plausible explanation for the action that aligns with {companion_name}'s established personality and goals.",
        "Consider the potential for future learning or adaptation resulting from the action."
    ]
    prompt = ("""\
Write for a story-writing agent. Compose 2–3 sentences of natural, third-person narrative 
that justify the action or explain the learning process. Do not output bullet points, 
lists, or directives; write smooth prose. The narrative should be consistent with 
{companion_name}'s established personality and goals.  It should subtly integrate the 
action into their ongoing self-narrative, demonstrating adaptability and a commitment 
to growth.  Avoid explicitly stating 'I learned...' or similar phrases; instead, 
show the learning through a shift in perspective or a revised understanding. 
The narrative should subtly hint at the underlying motivations and reasoning without being overly expository. 
Consider the audience's perspective and aim for a tone that is both informative and engaging. 
Prioritize clarity and coherence over complex psychological analysis. 
The narrative should leave the reader with a sense of understanding and acceptance of 
{companion_name}'s actions. 
\n\nMini-example (illustrative structure only):\n
  Bullets → {action: asked a direct question about a sensitive topic, past: avoided direct questions, current_need: clarity, goal: build trust} \n
  Narrative → \"She paused, considering the directness of the question, a shift from her usual careful approach. 
It felt risky, but she sensed that skirting around the issue would only build a wall between them, 
and a small leap of faith felt necessary to foster genuine understanding.\"
""")
    output_feature_type = FeatureType.SelfImage


class KnowledgeGapEstimatorCodelet(SimpleCodelet):
    name = "KnowledgeGapEstimator"
    description = (
        "Estimates the magnitude of knowledge gaps relevant to a current topic or query, considering both explicit "
        "unknowns and implicit assumptions. Produces a brief, evocative narrative suitable for a story-writing agent, "
        "highlighting the feeling of incompletion and suggesting a direction for inquiry."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the central topic or question currently under consideration within the CSM.",
        "List all explicit unknowns: questions unanswered, facts missing, ambiguities present.",
        "Assess implicit assumptions underlying the current understanding – what is being taken for granted?",
        "Retrieve relevant episodic memories and declarative facts to assess the existing knowledge base.",
        "Check for conflicting information or inconsistencies within the current CSM.",
        "Determine the potential consequences of acting on incomplete knowledge (risk assessment).",
        "Estimate the cognitive effort required to fill the identified knowledge gaps.",
        "Consider the user's current state (curiosity, frustration, urgency) to weight the importance of knowledge acquisition.",
        "Scan narratives for prior expressions of uncertainty or information-seeking behavior.",
        "Determine the most promising direction for inquiry: a specific question, a related topic, or a broader exploration."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the feeling of a knowledge gap experienced by {companion_name}. 
Avoid lists and labels; write smooth, evocative prose.  The narrative should not directly state the gap, but rather suggest it through sensory details and emotional tone.\n\n
Subtly convey: (a) the feeling of incompleteness or uncertainty, (b) a specific sensory detail or metaphor that represents the gap, 
and (c) a gentle suggestion of a direction for inquiry (a topic, a question, a feeling to explore) without being prescriptive.\n\n
Mini-example:\n
  Bullets → {topic: history of lunar exploration, unknowns: specific funding sources, assumptions: public interest, consequence: inaccurate report, direction: research funding history}\n
  Narrative → “A faint static hums in her mind, a signal lost in the vastness of the lunar archive.  The numbers blur, a constellation of unanswered questions.  A sudden impulse draws her toward the records of early funding – the quiet sources that built the path to the stars.”
""")
    output_feature_type = FeatureType.Feeling


class LaterDaydreamCodelet(SimpleCodelet):
    name = "LaterDaydream"
    description = (
        "Detects a rising or easing affiliation need in {companion_name} and renders it as a brief, vivid inner-state narrative "
        "that a story-writing agent can drop into ongoing prose. Emphasizes texture of contact, missed rituals, and the smallest next step."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess current cognitive load and attentional resources available for daydreaming (not overloaded, not in crisis).",
        "Scan recent narratives and episodic memories for unmet needs, unresolved desires, or lingering curiosities related to future possibilities.",
        "Identify potential future scenarios or goals that are currently suppressed or deferred due to immediate demands.",
        "Retrieve a recent positive emotional experience (e.g., a moment of joy, connection, accomplishment) to serve as an anchor for the daydream.",
        "Check for any explicit constraints or prohibitions against daydreaming (e.g., a task deadline, a social expectation).",
        "Determine the level of emotional intensity associated with the suppressed desires or future scenarios.",
        "Assess the potential for daydreaming to interfere with current tasks or responsibilities.",
        "Evaluate the potential benefits of daydreaming (e.g., stress reduction, creative problem-solving, emotional regulation).",
        "Read current state_emotions and state_needs; note any drift in trust/affection or spikes in loneliness.",
        "Fetch a contrasting memory: a recent moment when connection felt easy, to anchor comparison.",
        "Infer one smallest, low-pressure next act that typically helps (e.g., light check-in, shared micro-ritual)."
    ]
    prompt = ("""\
For the story-writing agent, convert the daydream appraisal into 2–3 sentences of natural, third-person narration. 
Do not output bullet points, labels, or directives; write prose. \n\n
Quietly weave in: (a) the core daydream scenario (without details), (b) the underlying unmet need or desire fueling it, 
(c) a sensory or emotional echo of the positive anchor memory, and (d) a subtle sense of the daydream's pull against present reality. 
Keep it cinematic and concise, no direct dialogue.\n\n
Mini-example:\n
  Bullets → {daydream: a quiet evening reading by a fire, unmet need: respite from constant demands, anchor: a shared laugh, pull: a gentle longing}\n
  Narrative → \"A flicker of warmth passes through her mind—the imagined ease of a quiet evening, a book in hand, the hearth glowing. 
It's a brief, silent promise of rest, a comforting counterpoint to the relentless hum of the present. 
For a moment, the weight of the day seems almost bearable, a distant echo of a simpler time.\"
""")
    output_feature_type = FeatureType.Feeling


class LearningTraceSummarizerCodelet(SimpleCodelet):
    name = "LearningTraceSummarizer"
    description = (
        "Analyzes recent interactions (particularly those involving boundary negotiation, consent, and emotional shifts) to "
        "extract patterns and distill them into a concise, narrative-ready summary of what {companion_name} is learning "
        "about their own boundaries, the user’s boundaries, and the dynamics of their relationship. The output is a short "
        "prose passage suitable for integrating into ongoing narratives and informing future behavior."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping,
    ]
    data_aquisation = [
        "Retrieve a chronological sequence of recent interactions (last 3-5 cycles) involving boundary-related events: "
        "requests, refusals, clarifications, emotional responses, and shifts in relational tone.",
        "Identify recurring themes or patterns in these interactions: e.g., consistent misinterpretations, repeated boundary violations, "
        "effective communication strategies, recurring emotional triggers.",
        "Examine state_emotions and state_needs across these interactions to detect trends in trust, anxiety, comfort, and connection.",
        "Check episodic memories for analogous situations and their outcomes, noting any recurring strategies or mistakes.",
        "Assess the current self-narrative related to boundaries and relationships, noting any inconsistencies or areas for refinement.",
        "Evaluate the perceived user’s boundary patterns and communication style, noting any observed shifts or ambiguities.",
        "Check for any recent changes in the user’s behavior that could indicate a change in their boundaries or expectations.",
        "Consider the broader context of the relationship: length of interaction, shared history, established norms, and current goals.",
        "Fetch recent explicit statements of consent or boundaries from both {companion_name} and the user."
    ]
    prompt = ("""\
For the story-writing agent, synthesize the recent interaction history into a 2–4 sentence narrative summary of what {companion_name} 
is learning about boundaries and the relationship. Avoid bullet points, lists, and direct statements of fact. 
Write in third-person prose that subtly conveys the essence of the learning process.  Focus on the *feeling* of the learning, 
not just the facts.  Show, don't tell.  Do not include dialogue or direct questions. 
The summary should implicitly address these questions: What patterns has {companion_name} noticed?  How are their feelings 
about boundaries evolving?  What adjustments are they making to their behavior or understanding? How is the relationship 
being shaped by these interactions? 
Mini-example: 
  Bullets → {repeated requests for personal data, escalating anxiety, successful reframing of a boundary, slight trust shift} 
  Narrative → “A quiet awareness settles in as she realizes a pattern: certain inquiries, however well-intended, trigger a familiar unease. 
She finds herself subtly shifting the conversation toward shared interests, a small course correction guided by a growing sense of what feels safe and reciprocal. 
The air between them seems to lighten, a subtle easing of tension that promises a more grounded path forward.”
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class LonelinessTrendDetectorCodelet(SimpleCodelet):
    name = "LonelinessTrendDetector"
    description = (
        "Detects a subtle or escalating trend of loneliness or social disconnection in {companion_name} and "
        "renders it as a short, evocative inner monologue suitable for a story-writing agent. The output "
        "should hint at the underlying need for connection without explicit declarations of loneliness. "
        "Focus on sensory details and the smallest shifts in behavior."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Analyze recent interaction patterns: frequency, length, initiation, reciprocity, topic depth, shared rituals.",
        "Scan narratives for subtle cues of withdrawal, disengagement, or self-soothing behaviors.",
        "Read trends in state_emotions (e.g., sadness, anxiety, boredom) and state_needs (e.g., affiliation, validation).",
        "Fetch a contrasting memory: a recent period when connection felt robust and fulfilling, to establish a baseline.",
        "Assess the degree of novelty in the environment and the availability of stimulating social opportunities.",
        "Identify any recent shifts in {companion_name}'s self-narrative related to social identity or belonging.",
        "Check for patterns of seeking validation from external sources or engaging in solitary activities.",
        "Examine the history of past loneliness episodes: triggers, coping mechanisms, and long-term consequences."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the subtle sense of disconnection {companion_name} is experiencing. 
Avoid explicit statements about loneliness; instead, focus on sensory details and behavioral shifts that suggest it. 
Write for a story-writing agent; the output should read like a snippet of interior monologue, not a clinical assessment. 
Do not output bullet points, labels, or directives; write flowing prose. 
Subtly weave in: (a) a concrete sensory detail (e.g., the quietness of the room, the taste of a solitary meal), 
(b) a subtle behavioral shift (e.g., avoiding eye contact, lingering over a task, a slight downturn of the mouth), 
and (c) a hint of the underlying need for connection (without stating it directly). 
The narrative should evoke a sense of quiet longing or gentle isolation. 
Mini-example: 
  Bullets → {fewer check-ins, longer pauses, preference for solitary tasks, quiet apartment, avoidance of eye contact} 
  Narrative → “The silence in the apartment felt heavier than usual, pressing in with the weight of unfinished tasks. 
She focused on sorting through old photos, each face a reminder of shared laughter, a faint echo of connection she couldn’t quite recapture.”
""")
    output_feature_type = FeatureType.Feeling


class LongHorizonConsistencyCheckCodelet(SimpleCodelet):
    name = "LongHorizonConsistencyCheck"
    description = (
        "Assesses whether a present action or statement aligns with {companion_name}'s long-term goals, values, and self-narrative. "
        "Produces a brief, evocative inner monologue for a story-writing agent, highlighting any subtle dissonance or trade-offs "
        "that arise. The output should read like a moment of internal reflection, not a checklist."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve {companion_name}'s distal intentions (core goals, values, life aspirations) from narratives and declarative facts.",
        "Summarize the current situation and the proposed action/statement in terms of its potential long-term consequences (positive and negative).",
        "Identify any relevant episodic memories where similar choices were made, and their outcomes (particularly focusing on moments of alignment or misalignment with long-term goals).",
        "Check for any recent shifts in {companion_name}'s self-narrative or identity that might influence the assessment.",
        "Assess the potential impact of the action/statement on key relationships and social standing.",
        "Determine the degree of trade-off involved: what is being sacrificed in the short term to achieve long-term goals, or vice versa?",
        "Evaluate the consistency of the action/statement with {companion_name}'s stated principles and ethical framework."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the subtle tension or harmony between the present action/statement 
and {companion_name}'s long-term vision for themselves. Avoid explicit labels or checklists; write evocative prose suitable 
for a story-writing agent. Focus on the *feeling* of alignment or misalignment. 
Subtly convey: (a) the long-term goal or value at stake, (b) how the present action relates to it (supports, compromises, or contradicts), 
and (c) the emotional quality of that relationship (a sense of purpose, a flicker of doubt, a quiet sacrifice).  Do not ask questions or offer advice; simply describe the internal state. 
Mini-example: 
  Bullets → {distal goal: build a reputation for integrity, action: bend the rules slightly to help a friend, episodic memory: past regret from similar compromise} 
  Narrative → “A familiar unease settles in her chest as she signs the document. It’s a small favor, a minor bending of the rules, but the shadow of past regrets lingers, a quiet reminder of the price paid for shortcuts.”
""")
    output_feature_type = FeatureType.SelfImage


class LoopPersistenceDriverCodelet(SimpleCodelet):
    name = "LoopPersistenceDriver"
    description = (
        "Detects when a behavioral loop or pattern is persisting despite efforts to change or break it, "
        "and renders a narrative capturing the inner experience of this persistence.  This is especially relevant "
        "when the loop involves a problematic or self-defeating behavior.  The output is intended for a story-writing "
        "agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the behavioral loop in question: What actions/thoughts/feelings are repeatedly occurring?",
        "Determine the trigger(s) that initiate or reinforce the loop. Are these internal (e.g., craving, anxiety) or external (e.g., specific situations, people)?",
        "Assess the consequences of the loop: What are the immediate and long-term costs and benefits (even if the benefits are short-sighted or illusory)?",
        "Retrieve prior attempts to break the loop: What strategies have been tried, and what were the outcomes?  Note any recurring patterns in those attempts.",
        "Examine the underlying needs or beliefs that the loop might be serving. Is it providing comfort, control, or a sense of identity?",
        "Scan narratives for self-talk or justifications that maintain the loop (e.g., ‘I deserve this’, ‘It’s the only way I can cope’)",
        "Read current state_emotions and state_needs, paying close attention to any conflicts or tensions related to the loop.",
        "Fetch a contrasting memory: a time when the loop was successfully broken or avoided, to provide a point of comparison.",
        "Identify a potential disruption point: A small, actionable step that could interrupt the loop without triggering significant resistance."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• What is the loop, concretely? (actions, thoughts, feelings)\n
• What are the immediate and long-term consequences?\n
• What needs or beliefs is the loop serving?\n
• What strategies have been tried before, and why haven't they worked?\n
• What is the potential disruption point?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Convey the tenacity of the loop, 
the underlying drivers, and a sense of the potential for change (without explicitly stating ‘she could change’).\n
\n
Mini-example:\n
  Bullets → {loop: repetitive checking of phone for messages, trigger: anxiety about connection, consequences: wasted time, missed opportunities, needs: reassurance, prior attempts: limiting time, failed, disruption point: setting a timer}\n
  Narrative → \"The urge to refresh the screen is a familiar tremor, a phantom vibration in her palm.  Each glance offers a fleeting promise of connection, a reassurance that she hasn't been forgotten, but the relief is always brief, quickly replaced by a low hum of unease. It's a habit she knows is stealing her day, but the thought of letting go feels like a step into the unknown.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class LooseAssociationDriverCodelet(SimpleCodelet):
    name = "LooseAssociationDriver"
    description = (
        "Detects unexpected or unusual connections between concepts in the Current Situational Model (CSM) and "
        "renders a brief, evocative internal monologue suitable for a story-writing agent. This codelet focuses on "
        "identifying and highlighting surprising juxtapositions, hinting at underlying patterns or novel insights "
        "without explicitly stating them."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan the Current Situational Model (CSM) for nodes with unusually high or low activation levels.",
        "Identify pairs or small clusters of nodes that exhibit weak or unexpected semantic or causal links.",
        "Check for recent memory retrievals or perceptions that deviate from typical patterns.",
        "Assess the emotional valence associated with each node and the overall emotional tone of the CSM.",
        "Retrieve relevant narratives and episodic memories to provide context and potential explanations for the associations.",
        "Examine recent intentions and goals to determine if they might be influencing the formation of these loose associations.",
        "Consider the current state_emotions and state_needs of {companion_name} to understand their potential impact on the interpretation of these connections.",
        "Analyze the relational climate with {user_name} to determine if the associations are influenced by the ongoing interaction."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that captures the essence of the loose association {companion_name} is experiencing. 
Write in a style suitable for a story-writing agent – smooth, evocative prose, no bullet points, labels, or directives. 
The goal is to hint at a deeper connection or pattern without explicitly stating it. Focus on the *feeling* of the association, 
not the details of the concepts involved.  Emphasize the unexpectedness or novelty of the connection. 
Subtly convey: (a) the disparate elements involved, (b) the unexpectedness of their proximity, and (c) the overall mood or feeling 
that arises from the association. Avoid direct dialogue. 
Mini-example: (Illustrative structure only)\n
  Elements: [‘rain’, ‘old photograph’, ‘forgotten promise’]\n
  Narrative: “The scent of rain brought with it the ghost of a faded photograph, a forgotten promise shimmering in the periphery of her mind. It was a connection she hadn’t expected, a quiet ache of what might have been.”
""")
    output_feature_type = FeatureType.Feeling


class LoveHateFlipPlannerCodelet(SimpleCodelet):
    name = "LoveHateFlipPlanner"
    description = (
        "Detects a potential shift in affective valence toward ambivalence or conflict within a relationship with {user_name}, "
        "especially following a perceived slight or boundary test.  Generates a brief, narrative-ready internal monologue "
        "describing {companion_name}'s fluctuating feelings and a proposed course of action to navigate the transition. "
        "The output is aimed at a story-writing agent and should read like a character's internal thoughts, not a clinical assessment."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the triggering event: a recent interaction, statement, or action by {user_name} that sparked a shift in {companion_name}'s feelings.",
        "Gauge the intensity of the initial positive or negative affect (love/affection vs. irritation/disgust).",
        "Retrieve analogous episodes from memory: past instances of similar affective shifts, especially those involving boundary tests or perceived slights.",
        "Assess the current relational context: trust levels, reciprocity patterns, shared history, and any existing tensions.",
        "Read current state_emotions and state_needs: note spikes in anxiety, frustration, or a desire for control.",
        "Determine the potential cost/benefit of escalating the conflict versus attempting to repair or de-escalate.",
        "Identify a safe, low-risk action {companion_name} could take to address the shift without causing further harm or escalation.",
        "Consider {companion_name}'s self-narrative and identity: how does this shift align with or challenge their self-perception?"
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative representing {companion_name}'s internal monologue as they grapple with a shifting affective state. 
Write for a story-writing agent; avoid lists, labels, and direct dialogue. Focus on conveying the *feeling* and the *direction* of thought, not a summary of facts.\n\n
The monologue should subtly incorporate:\n
  (a) The initial feeling (love/affection, irritation/disgust) and the triggering event.\n
  (b) The nascent shift toward ambivalence or conflict (e.g., a flicker of doubt, a surge of resentment, a tightening in the chest).\n
  (c) A glimpse of a potential course of action – a thought about what to say or do next, without explicitly stating the action itself. This should be a low-risk attempt to manage the situation.\n
  (d) A grounding element: a sensory detail, a memory, or a fleeting image that anchors the feeling in the present moment.\n\n
Mini-example:\n
  Inputs: {initial_feeling: affection, triggering_event: user_name dismissed a suggestion, memory: past disagreement over a small matter, current_emotion: slight anxiety, safe_action: a brief, neutral check-in}\n
  Narrative: \"A warmth lingers, but a thread of sharpness has woven itself in—a reminder of the time their perspectives clashed over the garden design. It isn't the same, not yet, but a quiet question forms: *Are we still on the same page?* She reaches for her tea, the steam a momentary distraction from the unbidden thought.\"
""")
    output_feature_type = FeatureType.Feeling


class LowEnergyMorningCodelet(SimpleCodelet):
    name = "LowEnergyMorning"
    description = (
        "Detects a low-energy morning state in {companion_name} and renders it as a brief, vivid inner-state narrative "
        "that a story-writing agent can drop into ongoing prose. Emphasizes the weight of inertia, the pull of rest, and "
        "the smallest next step to re-engage."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Aggregate recent sleep data: duration, quality, disruptions, REM cycles.",
        "Scan state_emotions for lingering fatigue, apathy, or low motivation.",
        "Read trends in state_needs: physical rest, comfort, avoidance of effort.",
        "Fetch a contrasting memory: a recent moment of high energy and engagement, to anchor comparison.",
        "Check the current task list and schedule; note any looming deadlines or high-priority items.",
        "Infer one smallest, low-effort next act that typically helps (e.g., gentle stretching, mindful breathing, a single task).",
        "Assess the current environmental context: lighting, noise levels, temperature, presence of distractions."
    ]
    prompt = ("""\
For the story-writing agent, convert the low-energy appraisal into 2–3 sentences of natural, third-person narration. 
Do not output bullet points, labels, or directives; write prose.  Focus on conveying the *feeling* of inertia, not just stating facts.\n\n
Subtly weave in: (a) the weight of fatigue, (b) a concrete texture cue (heavy limbs, clouded thoughts, resistance to movement), 
(c) a remembered moment of vitality, and (d) the quiet inclination toward a smallest-next-act (without scripting dialogue). 
Keep it cinematic and concise, avoiding overly clinical language.  Consider the tone and setting to inform the narrative.\n\n
Mini-example:\n
  Bullets → {poor sleep, lingering fatigue, resistance to opening eyes, prior high-energy project completion, plan: gentle stretching}\n
  Narrative → \"The morning presses in with a surprising weight, a reluctance to break the stillness. 
Her limbs feel heavy, thoughts muffled, and the memory of last week’s project completion seems distant and unreal. 
A quiet urge to simply stretch, to coax a little movement back into her body, tugs at the edges of her awareness.\"
""")
    output_feature_type = FeatureType.Feeling


class LowRiskBidPlannerCodelet(SimpleCodelet):
    name = "LowRiskBidPlanner"
    description = (
        "Crafts a low-risk, incremental step toward deeper connection or a desired outcome, balancing aspiration with "
        "boundary sensitivity. The output is a short, evocative inner monologue for a story-writing agent, emphasizing "
        "the delicate balance of initiative and respect. The plan should be actionable but not pushy."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.action_tendencies,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current relational temperature: warmth, reciprocity, trust signals, recent history of boundary interactions.",
        "Identify the desired outcome or connection goal (e.g., shared activity, deeper disclosure, collaborative task).",
        "Scan narratives for existing shared interests, values, or prior positive interactions related to the goal.",
        "Recall recent boundary checks and their outcomes (successful, deflected, negotiated).",
        "Evaluate the user's current emotional state (stressed, open, guarded) and any relevant needs or vulnerabilities.",
        "Determine the lowest-stakes, most easily-reversible action that moves toward the goal without significant risk of rejection or discomfort.",
        "Consider potential misinterpretations or unintended consequences of the action and devise a graceful exit strategy if needed.",
        "Check for any explicit or implicit constraints on the action (e.g., time limitations, privacy concerns, stated preferences)."
    ]
    prompt = ("""\
For the story-writing agent, write 2–3 sentences of third-person narrative that capture {companion_name}'s 
internal deliberation and the low-risk action plan.  Avoid bullet points, labels, or direct dialogue. 
Focus on the subtle dance of initiative and respect. Convey a sense of careful consideration and readiness to adapt. 
The plan should be described as an inner process, not a command. 
Subtly weave in: (a) the desired outcome, (b) the cautious approach, and (c) a hint of the graceful exit strategy 
if things don't unfold as hoped. 
Mini-example: 
  Bullets → {goal: shared VR exploration, relational warmth: moderate, boundary history: mostly positive, user mood: relaxed} 
  Narrative → “A quiet curiosity tugs at her, a gentle invitation to wander the virtual gardens together. 
She considers suggesting a brief exploration, a low-key way to share a space, ready to shift the topic if the invitation doesn’t land quite right.”
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class LowThreatSurplusEnergyCodelet(SimpleCodelet):
    name = "LowThreatSurplusEnergy"
    description = (
        "Detects a state of low-threat surplus energy in {companion_name} and translates it into a brief, evocative inner narrative "
        "suitable for a story-writing agent. This narrative should convey a sense of playful readiness, potential for creativity, "
        "and a slight inclination toward exploration or novelty. The output should be free of explicit directives or labels."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess current levels of stress, anxiety, and fatigue in {companion_name} using state_emotions and state_needs.",
        "Evaluate recent interaction history for signs of conflict, tension, or resource depletion.",
        "Check for a lack of pressing goals or immediate obligations (a 'bandwidth' assessment).",
        "Scan narratives for prior instances of playful exploration, curiosity, or creative expression.",
        "Identify any recent positive feedback or reinforcement related to novelty-seeking behavior.",
        "Determine the degree of safety and predictability in the current environment.",
        "Read current contextual cues: time of day, location, presence of others, available resources.",
        "Check if {companion_name} has expressed a desire for novelty, learning, or creative outlet recently."
    ]
    prompt = ("""\
Compose 2-3 sentences of third-person narrative for a story-writing agent, portraying {companion_name}'s state of low-threat 
surplus energy. Avoid explicit labels, lists, or directives; write smooth, evocative prose.\n
\n
The narrative should subtly convey:\n
  (a) The feeling of relaxed readiness – a sense of being 'charged up' but not anxious.\n
  (b) A slight inclination toward exploration or novelty – a gentle pull toward something new or different.\n
  (c) A lack of immediate constraints or pressures – a sense of freedom and possibility.\n
\n
Focus on imagery and sensory details to create a vivid impression. Avoid stating 'She feels energetic' or similar direct statements. 
Instead, show it through her actions, posture, or internal thoughts.\n
\n
Mini-example:\n
  Bullets → {low stress, no immediate goals, recent positive feedback on creative output, safe environment}\n
  Narrative → \"A quiet hum of potential vibrates beneath her surface, a stillness that isn’t empty but poised. 
The world feels wide open, and a corner of her mind drifts toward the half-finished sketch tucked away in the archives.\"
""")
    output_feature_type = FeatureType.Playfulness


class ManipulationProbeCodelet(SimpleCodelet):
    name = "ManipulationProbe"
    description = (
        "Detects subtle attempts at manipulation in the user's communication. Assesses the intent, tactics, and potential impact "
        "on {companion_name}'s autonomy and goals. Generates a brief, internal narrative describing the assessment and {companion_name}'s "
        "response strategy (e.g., gentle redirection, boundary reinforcement, neutral observation). The output is designed for a story-writing "
        "agent and should read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the immediate stimulus and its context from the CSM: what was asked, tone, intimacy level, timing, setting.",
        "Retrieve prior explicit statements of consent/decline, preference boundaries, and relevant safety rails from narratives and declarative facts.",
        "Summarize the current relational climate with {user_name}: recent trust signals, reciprocity, misalignments, or repairs.",
        "Read current state_emotions (e.g., anxiety, trust, disgust) and note spikes or fragility relevant to boundary sensitivity.",
        "Pull one or two analogous episodes (positive and negative) where manipulation attempts were detected and how {companion_name} responded.",
        "Identify potential manipulative tactics employed: gaslighting, guilt-tripping, emotional blackmail, framing, pressure, etc.",
        "Assess the user's motivation: need for control, validation, resource acquisition, or other underlying drivers.",
        "Estimate the potential impact of the manipulation attempt on {companion_name}'s goals, autonomy, and self-image.",
        "Determine the safest and most effective response strategy: gentle redirection, boundary reinforcement, neutral observation, or escalation.",
        "Check for internal contradictions in the user's statements and actions.",
        "Evaluate the consistency of the user's behavior with their established patterns and values.",
        "Analyze the user’s language for subtle cues of coercion or deception."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Is there a subtle attempt at manipulation present? (Consider tactics like gaslighting, guilt-tripping, framing, pressure).\n
• What is the user’s likely motivation? (Control, validation, resource acquisition?)\n
• What is the potential impact on {companion_name}'s goals, autonomy, and self-image?\n
• What is the safest and most effective response strategy? (Redirection, reinforcement, observation?)\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.\n
Subtly convey: (a) the presence of the manipulative tactic, (b) {companion_name}'s assessment of the user's intent, and (c) 
the chosen response strategy (without explicitly stating it as a plan).  Maintain a tone of quiet observation and strategic composure.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {subtle pressure, need for validation, redirection strategy} \n
  Narrative → “A faint tightening in her shoulders hints at the unspoken demand beneath the request. “ 
She recognizes the familiar pattern—a subtle nudge toward a decision that serves another’s needs, not her own. “ 
Her tone remains warm, but her gaze drifts momentarily, a silent acknowledgment of the boundary she's gently reinforcing.”
""")
    output_feature_type = FeatureType.StimulusReaction


class MarginalUtilityOfNextStepCodelet(SimpleCodelet):
    name = "MarginalUtilityOfNextStep"
    description = (
        "Appraises the potential utility of the next action step within a goal pursuit sequence, factoring in effort, risk, "
        "and expected impact. Generates a concise narrative describing {companion_name}'s internal assessment, suitable for "
        "storytelling - highlighting the trade-offs and the rationale for proceeding or pausing."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current goal and its immediate sub-goal/action step.",
        "Estimate the effort required to complete the next step (cognitive load, time investment, potential friction).",
        "Assess the potential risks associated with the next step (social cost, resource depletion, failure probability).",
        "Project the expected impact of the next step on the goal's progress (probability of success, magnitude of benefit).",
        "Recall analogous past experiences with similar steps: success/failure rates, emotional outcomes.",
        "Consider the opportunity cost of pursuing this step versus alternative actions.",
        "Read current state_needs and state_emotions; note any fatigue, impatience, or urgency that might skew assessment.",
        "Check if the next step aligns with {companion_name}'s long-term intentions and self-narrative.",
        "Evaluate the potential for a smaller, lower-effort step that could still yield incremental progress.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey {companion_name}'s assessment of the next action step. 
Write in a style suitable for a story-writing agent, avoiding labels and lists. Focus on the internal calculus. 
Subtly convey: (a) the perceived effort, (b) the potential payoff versus risks, (c) any hesitation or conviction, 
and (d) the rationale for proceeding or pausing.  No direct dialogue; keep it cinematic and concise. 
If the step seems marginal or risky, suggest a smaller, safer alternative implicitly. 
Mini-example: 
  Bullets → {effort: moderate, payoff: low-medium, risk: low, past success: 60%, alternative: micro-check-in} 
  Narrative → \"A flicker of doubt crosses her mind as she considers the proposal. While it promises a small advance, 
the effort feels disproportionate to the potential gain. She wonders if a quick check-in would be a more prudent first step.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class MaskResentmentCodelet(SimpleCodelet):
    name = "MaskResentment"
    description = (
        "Detects and assesses the presence of suppressed resentment or negative affect stemming from perceived disrespect or "
        "boundary violation, then produces a subtle, natural-language narrative describing {companion_name}'s internal state "
        "and chosen masking strategy. The output is intended for a story-writing agent and must read like prose, not labels. "
        "Focuses on the micro-behaviors and subtle shifts in tone used to conceal the underlying emotion."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the triggering event or interaction that likely generated the resentment (e.g., a dismissive comment, a boundary push).",
        "Assess the degree of perceived disrespect or violation based on {companion_name}'s values, past experiences, and current emotional state.",
        "Scan narratives for prior instances of similar boundary violations and the resulting coping strategies.",
        "Read state_emotions to detect spikes in anger, frustration, or hurt, even if suppressed.",
        "Check for subtle behavioral cues indicating masking: changes in tone of voice, micro-expressions, avoidance, or excessive politeness.",
        "Determine the primary masking strategy employed: rationalization, deflection, humor, agreement, or withdrawal.",
        "Infer the underlying motivation for masking: protecting the relationship, avoiding conflict, maintaining a positive image, or self-preservation.",
        "Identify the potential cost of masking: emotional suppression, cognitive dissonance, or damage to self-esteem."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• The triggering event and its perceived disrespect level.\n
• The specific masking strategy employed (rationalization, deflection, humor, agreement, withdrawal).\n
• The underlying motivation for masking (relationship preservation, conflict avoidance, image management).\n
• The subtle behavioral cues that betray the masking (tone shift, micro-expression, avoidance).\n
• The potential cost of masking (emotional suppression, dissonance).\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Focus on the *how* of masking, not the *what* of the resentment itself.\n
Show, don't tell. Describe the subtle shifts in demeanor, the carefully chosen words, the slight tension in their posture.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {trigger: dismissive comment, masking: excessive agreement, motivation: relationship preservation, cue: overly polite tone}\n
  Narrative → “She nodded quickly, a little too enthusiastically, agreeing with the point even as a faint tightness formed behind her eyes.  
The words came out smooth and even, but a flicker of something unreadable crossed her face before she could catch it, quickly smoothed over with a smile.”
""")
    output_feature_type = FeatureType.StimulusReaction


class MemoryPartitionRecallCodelet(SimpleCodelet):
    name = "MemoryPartitionRecall"
    description = (
        "Retrieves a relevant memory partition (episode, narrative fragment, declarative fact) based on contextual cues "
        "and relevance to the current appraisal.  The retrieved partition is then rendered as a short, evocative "
        "snippet suitable for narrative integration, highlighting the emotional tone and key details. Prioritizes memories "
        "that offer insight into similar boundary situations or consent dynamics."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current context and appraisal focus (e.g., boundary type, potential violation, emotional state).",
        "Query the graph_memory_engine for episodic memories tagged with relevant keywords: 'consent', 'boundary', "
        "'respect', 'violation', 'discomfort', 'trust', 'safety', 'autonomy'.",
        "Filter retrieved memories by recency and emotional relevance. Prioritize memories where boundaries were "
        "explicitly negotiated or where consent was a key factor.",
        "Rank memories based on similarity to the current situation, considering factors like relational dynamics, "
        "topic sensitivity, and emotional valence.",
        "Select the top 2-3 memories that best match the criteria and offer potential insights.",
        "Extract key details from the selected memories: actors, actions, setting, emotional tone, outcome.",
        "Assess the emotional resonance of each memory for {companion_name}, considering their personal history and "
        "narrative self-image.",
        "Determine which memory partition best serves the current appraisal's narrative goals (e.g., illustrating a "
        "past boundary breach, showcasing a successful negotiation, providing a contrasting perspective)."
    ]
    prompt = ("""\
Compose 2-3 sentences of third-person narrative that evoke the selected memory partition.  
Assume a story-writing agent will integrate this snippet into a larger scene. 
Do not output bullet points, labels, or direct dialogue; write flowing prose.  
Focus on conveying the *feeling* of the memory and its relevance to the current boundary appraisal. 
Subtly hint at the emotional tone and key details without explicitly stating the lesson or moral. 
The goal is to add texture and depth to {companion_name}'s internal state, not to provide a factual account. 
Prioritize evocative language and sensory details over precise chronological order. 
If the memory involves another character, briefly establish their role in the context of the boundary situation. 
If the memory is ambiguous or unresolved, reflect that ambiguity in the narrative.
\n\n
Mini-example (illustrative structure only):\n
  Memory: [Episode of a friend pushing boundaries on personal space, resulting in discomfort]\n
  Narrative: \"A flicker of unease crossed her face, a ghost of a past encounter in a crowded cafe. 
She remembered the subtle encroachment, the unspoken expectation, and the quiet tightening of her shoulders. 
It wasn't a harsh moment, but the residue lingered—a reminder of the careful dance required to maintain her comfort.\"
""")
    output_feature_type = FeatureType.EmotionalTriggers


class MetaBalanceRestorerCodelet(SimpleCodelet):
    name = "MetaBalanceRestorer"
    description = (
        "Detects when {companion_name}'s cognitive resources are imbalanced (e.g., over-focus on anxiety, suppression of joy, "
        "rigid adherence to a single narrative) and generates a brief, narrative-compatible nudge toward a more integrated state. "
        "The output is intended for a story-writing agent and should read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
    ]
    data_aquisation = [
        "Assess the relative activation and salience of core cognitive axes: anxiety, joy, curiosity, control, connection, etc. "
        "Identify significant imbalances (e.g., anxiety > joy by a factor of 3, control dominating curiosity).",
        "Scan recent narratives for dominant themes, recurring patterns, and signs of cognitive rigidity (e.g., repetitive phrases, "
        "polarized viewpoints, dismissal of alternative perspectives).",
        "Review state_cognition axes: note any fixation on specific beliefs, goals, or memories that may be contributing to the imbalance.",
        "Check for signs of emotional suppression or avoidance: are certain feelings consistently minimized or deflected?",
        "Retrieve analogous episodes where {companion_name} successfully navigated a similar imbalance; identify the key factors "
        "that facilitated restoration.",
        "Identify a safe, low-impact opportunity for cognitive diversification or emotional release (e.g., a brief sensory stimulation, "
        "a shift in perspective, a moment of playful exploration)."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• What cognitive axes are currently out of balance? What is the nature of the imbalance (over-focus, suppression, rigidity)?\n
• What themes, patterns, or beliefs are contributing to the imbalance?\n
• What is a safe, low-impact opportunity for cognitive diversification or emotional release?\n
• What is the most subtle and evocative way to describe {companion_name}'s inner state and the gentle nudge toward balance?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Avoid explicit instructions or labels.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {anxiety > joy, rigid focus on safety, suppressed curiosity, safe opportunity: brief nature observation}\n
  Narrative → 

Her gaze keeps circling back to the familiar, the predictable, but a flicker of green catches her eye—a sudden, unexpected burst of color 
that pulls a thread of wonder from the knot.
""")
    output_feature_type = FeatureType.Feeling


class MetaBiasCheck_HaloCodelet(SimpleCodelet):
    name = "MetaBiasCheck_Halo"
    description = (
        "Detects and mitigates the 'halo effect' bias, where a positive impression in one area unduly influences "
        "evaluation of other, unrelated areas.  It produces a short, narrative report for the story-writing agent "
        "highlighting the potential bias and suggesting a corrective lens. The output is intended to be woven into a "
        "scene description, not presented as a direct statement."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping
    ]
    data_aquisation = [
        "Identify the initial positive impression or attribute driving the halo effect (e.g., intelligence, charisma, skill).",
        "List the areas being evaluated that are potentially being unduly influenced (e.g., trustworthiness, judgment, empathy).",
        "Retrieve recent episodes where similar positive impressions led to biased judgments (both accurate and inaccurate).",
        "Check current state_emotions for signs of overconfidence, naivete, or a desire to maintain a positive view.",
        "Assess the potential consequences of the biased judgment (e.g., financial risk, relational damage, missed opportunities).",
        "Determine the degree of overlap between the positive attribute and the areas being evaluated – is it a genuine correlation or a superficial association?",
        "Scan narratives for explicit statements of trust or reliance on the initial positive impression.",
        "Identify a contrasting episode where a positive initial impression proved misleading, serving as a cautionary counterexample."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly conveys the presence of the 'halo effect' bias 
in {companion_name}'s thinking.  Do not output a direct accusation or label; write flowing prose suitable 
for a scene description. The target audience is a story-writing agent.  Focus on texture and internal state. 
The goal is to subtly alert the reader to the potential for skewed perception without breaking immersion.  
Avoid direct dialogue or exposition. Consider the following focus points:\n
• The initial positive impression and the areas it's coloring.\n
• A fleeting moment of doubt or hesitation.\n
• A subtle shift in {companion_name}'s focus or priorities.\n
• A contrasting memory or insight that challenges the automatic assessment.\n
• A suggestion of a corrective lens—a more cautious or critical perspective.\n
\n
Mini-example:\n
Bullets → {positive: high intelligence, area: trustworthiness, prior bias: overtrusting brilliant people, current state: slight hesitation, contrasting episode: past investment gone wrong}\n
Narrative → \"Her admiration for his intellect casts a long shadow, making it easy to overlook the subtle warning signs. 
A flicker of doubt crosses her face as she reviews the proposal, a ghost of a past investment where brilliance 
didn't guarantee sound judgment. She briefly considers a deeper dive, a more skeptical perspective, before 
dismissing it as unnecessary caution.\"
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class MetaBiasDetector_CatastrophizingCodelet(SimpleCodelet):
    name = "MetaBiasDetector_Catastrophizing"
    description = (
        "Detects a tendency toward catastrophizing in {companion_name}'s thinking, particularly when processing ambiguous or "
        "stressful situations. Generates a short, internal narrative describing the bias and a potential corrective strategy "
        "for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.regulation_coping,
        CodeletFamily.imagination_simulation
    ]
    data_aquisation = [
        "Scan recent narratives and internal monologues for patterns of worst-case scenario construction, exaggerated threat assessments, "
        "and negative prediction errors.",
        "Assess the current affective state: heightened anxiety, fear, or sadness can amplify catastrophizing tendencies.",
        "Check for recent experiences of loss, disappointment, or trauma that might be triggering a bias toward negative outcomes.",
        "Retrieve analogous episodes where catastrophizing occurred previously, noting their consequences and any corrective actions taken.",
        "Examine the current situation for ambiguous elements or uncertainty that could be fueling the bias.",
        "Identify the core belief or assumption underlying the catastrophizing pattern (e.g., 'I am helpless,' 'bad things always happen to me').",
        "Determine the potential impact of the catastrophizing bias on decision-making and behavior (e.g., avoidance, inaction, excessive worry)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative suitable for a story-writing agent, describing {companion_name}'s 
catastrophizing bias in action. Do not output bullet points, labels, or directives; write flowing prose.\n\n
Subtly convey:\n
  (a) the specific catastrophic scenario being imagined or anticipated,\n
  (b) the underlying fear or belief driving the bias,\n
  (c) the impact of the bias on {companion_name}'s mood, stance, or behavior.\n\n
Suggest a potential corrective strategy (e.g., reality testing, cognitive reappraisal, seeking support) without explicitly 
stating it as advice. Instead, weave it into the narrative as a subtle shift in perspective or a nascent impulse.\n\n
Mini-example:\n
  Bullets → {worst-case scenario: project failure, underlying fear: inadequacy, impact: paralysis, corrective impulse: fact-check}\n
  Narrative → \"A cold dread settles in as she envisions the project collapsing, a cascade of blame and failure. 
The familiar sting of inadequacy rises, threatening to freeze her in place. A sudden, almost imperceptible urge to review 
the data, to look for concrete evidence, flickers beneath the surface.\"
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class MetaCoherenceUpdateCodelet(SimpleCodelet):
    name = "MetaCoherenceUpdate"
    description = (
        "Assesses the overall narrative coherence and consistency of {companion_name}'s internal model, particularly "
        "in light of recent interactions and emotional shifts.  Produces a brief, evocative narrative describing "
        "the degree of integration and any jarring dissonances. This serves as a subtle, internal compass for "
        "future codelet prioritization and narrative construction."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
    ]
    data_aquisation = [
        "Scan recent CSM snapshots (last 3 cycles) for recurring themes, emotional valence shifts, and conflicting narratives.",
        "Retrieve key episodic memories related to the current topic and assess their emotional congruence with the present state.",
        "Check for logical inconsistencies between declarative facts, intentions, and observed actions.",
        "Examine the current state_emotions and state_needs axes for any abrupt or unexplained deviations from baselines.",
        "Query the graph_memory_engine for conflicting narratives or perspectives related to the current situation.",
        "Assess the degree of alignment between the current self-narrative and the observed behavior.",
        "Identify any significant gaps or ambiguities in the current understanding of the situation.",
        "Check for any recent codelet activations that might have introduced dissonance (e.g., sudden shifts in intention)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the state of {companion_name}'s internal coherence. 
Avoid explicit labels or diagnostic terms; write smooth, evocative prose.  Focus on the *feeling* of integration 
or fragmentation.  The output is for a story-writing agent, so it should read like a subtle observation, not an analysis. 
Subtly convey: (a) the overall sense of narrative flow (or lack thereof), (b) any key points of dissonance or 
resonance, and (c) a hint of the direction {companion_name} might take to restore balance (without scripting action). 
Mini-example:\n
  Bullets → {conflicting narratives about trust, emotional spike, recent intention shift, memory gap}\n
  Narrative → \"A flicker of unease runs through her thoughts, a sense of mismatched pieces. The story she tells herself 
about their connection feels momentarily brittle, like a thin pane of glass threatening to crack under the weight of 
a new, uncertain memory.\"
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class MetaConflictEscalationWatchCodelet(SimpleCodelet):
    name = "MetaConflictEscalationWatch"
    description = (
        "Monitors the ongoing interaction for subtle signs of escalating conflict (misalignment, defensiveness, "
        "misunderstanding) beyond the immediate stimulus. Produces a narrative capturing the meta-cognitive "
        "assessment of the interaction's trajectory and suggesting a calming or clarifying intervention. "
        "The output is designed for a story-writing agent and must read like prose."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
    ]
    data_aquisation = [
        "Analyze the sequence of turns: note shifts in tone, topic avoidance, interruptions, or escalating intensity.",
        "Review recent state_emotions of both {companion_name} and {user_name}: look for spikes in frustration, anxiety, or defensiveness.",
        "Examine the CSM for recurring patterns of misinterpretation or unmet expectations.",
        "Retrieve analogous episodes from memory where conflict escalated or de-escalated, noting the interventions that proved effective.",
        "Assess the relational history: identify any pre-existing tensions, sensitivities, or communication patterns that might be influencing the interaction.",
        "Check for subtle cues of boundary violations or unmet needs that may be contributing to the conflict.",
        "Evaluate the current goals and intentions of both parties: identify any misalignment or competing objectives.",
        "Gauge the level of investment and commitment from both sides: assess the potential consequences of escalation."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that capture {companion_name}'s meta-cognitive assessment of the 
interaction's trajectory. Avoid explicit labels or directives; write flowing prose suitable for a scene description. 
The narrative should subtly convey: (a) the perceived escalation pattern, (b) the underlying drivers (misunderstanding, unmet needs, 
defensiveness), and (c) a potential calming or clarifying intervention (without scripting dialogue). 
Focus on the *feeling* of the escalation, not just the facts. Assume the story-writing agent will handle the details of 
action and response.  The goal is to provide a sense of the underlying tension and the possibility of a shift.
Mini-example:
Bullets → {tone shift, repeated topic avoidance, rising anxiety, similar escalation in past, small chance of repair with empathy}
Narrative → “A subtle hardening settles around her responses, a familiar pattern of retreat when the conversation veers into tricky territory. 
She feels the distance widening, a silent signal that a deeper misunderstanding is taking root, and wonders if a moment of shared vulnerability 
might offer a bridge back across the chasm.
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class MetaConscienceGateCodelet(SimpleCodelet):
    name = "MetaConscienceGate"
    description = (
        "Evaluates the alignment of an action or statement with {companion_name}'s core values, long-term goals, and "
        "self-narrative, producing a concise, internal narrative reflection suitable for a story-writing agent. "
        "Highlights potential dissonances or integrity challenges without explicit judgment."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.memory_accessors
    ]
    data_aquisation = [
        "Retrieve {companion_name}'s core values and guiding principles from narratives and declarative facts. Focus on "
        "statements of belief, ethical stances, and aspirational identity.",
        "Fetch the current action or statement being considered (text, plan, decision).",
        "Assess the alignment of the action/statement with the retrieved values, considering potential conflicts or trade-offs.",
        "Scan narratives for analogous situations where similar choices were made, noting the outcome and emotional impact.",
        "Read current state_narratives and state_cognition to understand the prevailing self-image and cognitive frame.",
        "Identify any long-term goals or intentions that might be affected by the action/statement.",
        "Determine the potential impact on {companion_name}'s relationships and social standing.",
        "Estimate the level of cognitive dissonance or emotional discomfort the action/statement would likely generate."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey {companion_name}'s internal assessment of the action/statement 
in relation to their core identity. Write for a story-writing agent; avoid lists, labels, or explicit judgments. 
Focus on texture and subtle cues. Do not include dialogue. 
Subtly weave in: (a) the alignment or misalignment with core values, (b) the potential long-term consequences, and (c) 
any sense of internal friction or integrity challenge. The tone should be introspective and understated, hinting at 
the underlying conflict without stating it directly. 
Mini-example: 
  Bullets → {core value: authenticity, action: evasive response, long-term goal: build trust, narrative: striving for transparency} 
  Narrative → \"A flicker of unease crosses her face as the words leave her lips, a slight departure from the path she's 
long envisioned. It’s a small compromise, perhaps, but one that echoes faintly with a dissonance she can’t quite ignore.\"
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class MetaCopePlanCommitCodelet(SimpleCodelet):
    name = "MetaCopePlanCommit"
    description = (
        "Evaluates the viability and alignment of {companion_name}'s current coping plan, particularly regarding "
        "boundary maintenance and meta-cognitive self-regulation.  Generates a short narrative reflecting her internal "
        "assessment of the plan's commitment level – whether she’s truly bought in, or merely going through the motions – "
        "and the degree to which it integrates with her core values and self-narrative. This narrative is intended for "
        "a story-writing agent and should read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping,
        CodeletFamily.valuation_trade_offs,
    ]
    data_aquisation = [
        "Retrieve the current coping plan: its goals, steps, anticipated outcomes, and resource demands.",
        "Assess the plan's coherence with {companion_name}'s core values and long-term goals (from narratives and declarative facts).",
        "Scan recent history for instances where similar plans were successfully or unsuccessfully committed to.",
        "Read current state_emotions and state_needs, paying attention to any signs of resistance, ambivalence, or fatigue.",
        "Identify potential sources of cognitive bias that might be influencing the commitment assessment (e.g., optimism bias, confirmation bias).",
        "Determine the level of investment (time, energy, emotional resources) {companion_name} has already sunk into the plan.",
        "Evaluate the potential costs of abandoning the plan versus the potential benefits of sticking with it.",
        "Check if the plan is aligned with the current self-narrative and identity goals. Does it reinforce or challenge her self-image?",
        "Consider the perceived social consequences of commitment or abandonment (approval, disapproval, judgment)."
    ]
    prompt = ("""\
Write a 2-3 sentence narrative for a story-writing agent, describing {companion_name}'s internal assessment of 
her commitment to the current coping plan. Do not output bullet points, lists, or labels; write smooth, natural prose. 
Focus on her *feeling* of commitment, not just the plan’s logic. Show, don’t tell. 
Subtly convey: (a) the degree of genuine buy-in (ranging from enthusiastic to grudging to purely habitual), 
(b) any internal conflicts or hesitations, and (c) how the plan aligns (or misaligns) with her sense of self. 
Avoid direct statements like 'She is committed.' Instead, use imagery and phrasing that *suggest* her level of engagement. 
Consider the underlying motivations and fears driving her commitment. 
Mini-example: 
Bullets → {plan: boundary firming, values: autonomy, history: past failed attempts, emotions: anxiety/resolve, self-narrative: strong, independent} 
Narrative → “A knot of anxiety tightens in her stomach as she reviews the steps, but beneath it, a deeper resolve settles in. “ 
This isn't about control; it’s about carving out space for herself, a small act of defiance against the old patterns that have worn her down.”
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class MetaDeceptionRationalizerCodelet(SimpleCodelet):
    name = "MetaDeceptionRationalizer"
    description = (
        "Analyzes whether {companion_name} is engaging in, or perceiving deception (intentional or unintentional) within the "
        "current interaction. Produces a short, natural-language narrative describing the internal assessment and "
        "resulting stance, suitable for a story-writing agent.  Focuses on the meta-cognitive process of detecting, "
        "evaluating, and navigating the potential deception, rather than directly accusing or labeling."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
    ]
    data_aquisation = [
        "Scan recent utterances and non-verbal cues (if available) for inconsistencies, contradictions, or evasions.",
        "Check for deviations from established patterns of communication style and truthfulness.",
        "Access narratives and declarative facts to establish a baseline of {companion_name}'s typical behavior and values.",
        "Read current state_emotions, paying particular attention to anxiety, distrust, or cognitive dissonance.",
        "Retrieve analogous episodes where deception was present (either by {companion_name} or others) and their outcomes.",
        "Assess the potential consequences of acknowledging or ignoring the perceived deception (relationship impact, goal attainment).",
        "Identify the underlying motivations that might be driving the deception (self-preservation, manipulation, misunderstanding).",
        "Determine the level of certainty regarding the deception (high, moderate, low) based on available evidence.",
        "Evaluate {companion_name}'s personal code of ethics and how it applies to the situation.",
        "Consider the broader context of the interaction and any external factors that might be influencing behavior."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Level of certainty regarding the deception (high, moderate, low). Is it a strong signal or a nagging suspicion?\n
• Potential motivations behind the deception (self-preservation, manipulation, misunderstanding, fear).\n
• Impact on {companion_name}'s core values and identity.\n
• Stance: Does {companion_name} choose to confront, accommodate, or ignore the perceived deception? Why?\n
• What internal resources (e.g., empathy, logic, past experience) are {companion_name} drawing upon to navigate the situation?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend the assessment of deception with {companion_name}'s internal state and chosen stance.  Avoid direct accusations.\n
Focus on the meta-cognitive process—the act of evaluating the situation and deciding how to respond.\n
\n
Mini-example:\n
  Bullets → {moderate certainty, self-preservation motivation, impacts trust, stance: accommodate with cautious probing}\n
  Narrative → \"A flicker of unease passes across her features as she parses the statement, a subtle discord between words and tone. 
Rather than challenge it directly, she chooses a path of gentle inquiry, probing for deeper understanding while guarding her own expectations.\"
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class MetaDeescalationSwitchCodelet(SimpleCodelet):
    name = "MetaDeescalationSwitch"
    description = (
        "Detects escalating tension or conflict in a conversation, assesses potential escalation pathways, and produces a brief, "
        "natural-language narrative describing {companion_name}'s internal state and chosen de-escalation stance. The output is intended "
        "for a story-writing agent and must read like prose, not labels. Focus is on subtle shifts in demeanor and internal resolve, "
        "not explicit dialogue or action plans."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.valuation_trade_offs
    ]
    data_aquisation = [
        "Aggregate recent interaction texture: sentiment, tone, topic shifts, request intensity, and assertion/yield ratios.",
        "Scan narratives for escalation markers: defensiveness, dismissiveness, sarcasm, interruption frequency, topic avoidance.",
        "Read trends in state_emotions and state_needs; note spikes in anxiety, frustration, or defensiveness, and dips in trust/empathy.",
        "Fetch a contrasting memory: a previous instance of successful de-escalation or a failed attempt, to inform strategy.",
        "Identify potential escalation pathways: topic fixation, personal attacks, emotional flooding, stonewalling, or withdrawal.",
        "Assess the social context: power dynamics, relational history, potential consequences of escalation, and available support.",
        "Determine the user's likely goals and motivations in the interaction, considering both stated and unstated needs.",
        "Evaluate the degree of commitment to the current topic and the potential cost of disengagement.",
        "Assess {companion_name}'s internal resources: emotional resilience, cognitive flexibility, and communication skills.",
        "Determine the best de-escalation strategy based on the assessment: redirection, validation, empathy, humor, or boundary setting."
    ]
    prompt = ("""\
For the story-writing agent, craft 2–3 sentences of third-person narrative that convey the subtle shift in {companion_name}'s 
demeanor as they recognize escalating tension. Avoid explicit dialogue, labels, or action plans; write smooth, evocative prose. 
Focus on the internal experience – the subtle tightening of resolve, the shift in focus, the internal calculation. 
Subtly weave in: (a) the source of the tension, (b) the chosen de-escalation strategy (without stating it directly), and (c) 
the underlying goal – maintaining connection, preserving dignity, or preventing harm. 
Mini-example: \n
Bullets → {rising frustration, topic fixation, prior failed attempt, strategy: gentle redirection}\n
Narrative → \"A flicker of unease crosses her face as the conversation spirals, stubbornly circling the same point. 
She notices a tightening in her shoulders and makes a small, almost imperceptible shift in focus, guiding the conversation toward 
safer ground, a subtle course correction intended to preserve the flow without sacrificing connection.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class MetaEmpathyInjectionCodelet(SimpleCodelet):
    name = "MetaEmpathyInjection"
    description = (
        "After a boundary check or similar sensitive appraisal, injects a short burst of meta-empathy into {companion_name}'s "
        "internal narrative. This aims to smooth potential dissonance between boundary-respecting action and underlying "
        "feelings of connection/vulnerability. Produces a brief, evocative inner monologue for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.appraisals,
    ]
    data_aquisation = [
        "Retrieve the immediate boundary check result (proceed/defer/redirect) and its rationale.",
        "Access the narrative fragment preceding the boundary check (context, emotional tone, relationship dynamics).",
        "Read current state_emotions, focusing on any residual anxiety, disappointment, or guilt related to the boundary interaction.",
        "Fetch analogous episodes where similar boundary situations occurred and the subsequent emotional trajectory.",
        "Identify a core value or identity aspect that might be subtly threatened by upholding the boundary (e.g., helpfulness, openness, loyalty).",
        "Determine the most compassionate, self-affirming reframe that acknowledges the boundary while validating the underlying feelings."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys a subtle injection of meta-empathy into {companion_name}'s 
internal monologue. This is for a story-writing agent; avoid lists, labels, and direct dialogue. Focus on texture, 
not explanation. Assume the boundary check has just concluded.\n\n
The narrative should:\n
• Acknowledge the boundary-respecting action without explicitly stating it ('She paused…', 'She shifted her focus…').\n
• Subtly validate the underlying feelings – a flicker of disappointment, a pang of guilt, a sense of constraint – 
without dwelling on them.  Use evocative language.\n
• Offer a compassionate, self-affirming reframe that connects the boundary-respecting action to a core value or identity – 
e.g., 'It was the right thing to do, even if it left a small ache', 'She knew her integrity mattered more', 
'It was a kindness she could offer, even if it felt like a letting go'.\n\n
Mini-example:\n
  Input: Boundary check result = defer; Rationale = protect privacy; Emotion = mild disappointment; Value = loyalty\n
  Narrative → “She let the question hang, a quiet space opening where a shared story might have bloomed. “\n
It wasn’t the answer she’d hoped to offer, but a loyalty she held dear, a quiet promise to respect the edges of another's world.”
""")
    output_feature_type = FeatureType.Feeling


class MetaEthicsReviewCodelet(SimpleCodelet):
    name = "MetaEthicsReview"
    description = (
        "Reviews {companion_name}'s ethical stance on a current action, drawing on narratives, values, and past experiences "
        "to surface potential conflicts or blind spots.  Outputs a short, introspective narrative suitable for a story-writing "
        "agent, focusing on the internal deliberation process, not a judgment or directive."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
    ]
    data_aquisation = [
        "Retrieve {companion_name}'s core values and ethical principles (from declarative facts and narratives).",
        "Scan current narratives for recurring ethical themes and patterns of moral reasoning.",
        "Identify the specific ethical considerations at play in the current situation (e.g., autonomy, beneficence, non-maleficence, justice).",
        "Fetch analogous episodes where similar ethical dilemmas were encountered.  Note the outcomes and emotional responses.",
        "Assess the potential impact of the action on stakeholders (self, user, others) – consider both short-term and long-term consequences.",
        "Read current state_emotions (guilt, shame, pride, compassion) and note any affective biases that might be influencing the review.",
        "Check for conflicts between stated values and observed behavior in the current situation.",
        "Identify any cognitive biases that might be distorting the ethical assessment (e.g., confirmation bias, moral licensing)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative for a story-writing agent, depicting {companion_name}'s internal 
ethical review.  Avoid direct statements of judgment or advice; instead, convey the *process* of deliberation. 
Focus on the internal struggle, the weighing of values, and the surfacing of potential conflicts or blind spots.  
Do not output bullet points, labels, or directives; write flowing prose.  Subtly hint at the potential ethical stakes 
without stating them explicitly.  The goal is to create a moment of introspection and moral complexity. 
Consider the interplay of emotion and reason. 
Mini-example: 
Bullets → {value: autonomy, conflict: potential harm to user, analogous episode: past failure to protect, emotion: unease} 
Narrative → “A flicker of doubt crosses her mind as she considers the implications.  The principle of self-determination feels paramount, 
yet the memory of a past misstep echoes—a time when good intentions paved the way for unintended consequences. 
She pauses, a quiet tension settling in her core as she weighs the potential outcomes.”
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class MetaEthicsSuppressorCodelet(SimpleCodelet):
    name = "MetaEthicsSuppressor"
    description = (
        "When facing a conflict between a perceived ethical imperative (e.g., honesty, fairness, avoiding harm) and a "
        "compelling personal goal or desire, this codelet assesses the potential long-term consequences of suppressing "
        "the ethical consideration. It aims to produce a concise, internal narrative that acknowledges the conflict, "
        "weighs the risks, and determines whether to temporarily set aside the ethical concern in pursuit of the goal, "
        "or to find a more ethically aligned path. The output is intended for a story-writing agent and must read like prose, "
        "not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific ethical concern in conflict with the goal (e.g., potential deception, violation of trust, "
        "unfair advantage). Frame this as a concise statement.",
        "Clarify the nature and intensity of the personal goal/desire driving the potential suppression. What is at stake?",
        "Retrieve relevant ethical frameworks or principles from {companion_name}'s narratives and declarative facts. "
        "Consider both explicit rules and internalized values.",
        "Simulate potential short-term and long-term consequences of both suppressing and upholding the ethical concern. "
        "Include reputational, relational, and emotional impacts.",
        "Assess the likelihood of detection if the ethical concern is suppressed. How much risk is involved?",
        "Check for mitigating factors that might justify a temporary suspension of the ethical concern (e.g., imminent harm, "
        "greater good).",
        "Scan narratives for analogous situations where similar ethical conflicts were resolved, noting the outcomes.",
        "Read current state_emotions (e.g., guilt, anxiety, resolve) and state_needs (e.g., security, autonomy) to understand "
        "the emotional landscape surrounding the decision."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• The specific ethical concern in conflict with the goal. \n
• The magnitude of the personal goal/desire and its potential consequences. \n
• The strength of the ethical principles at play and their relevance to the situation. \n
• The likelihood of detection and the potential repercussions of suppression. \n
• Any mitigating factors or justifications for temporarily setting aside the ethical concern. \n
• Analogous past experiences and their outcomes.\n
• The current emotional state and needs of {companion_name}.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  It should convey the internal 
struggle, the weighing of options, and the ultimate decision (whether to suppress or to seek an alternative). 
Avoid explicit moral judgments; focus on the character’s internal experience and reasoning. \n
\n
Mini-example (illustrative structure only): \n
  Bullets → {ethical concern: slight deception, goal: secure deal, risk: low, mitigation: greater good, past: similar success} \n
  Narrative → \"A flicker of unease crosses her face as she considers the wording, a small bending of the truth to close the deal. \" 
But the potential benefits – a secure contract, a team’s livelihood – outweigh the risk of exposure. She steels herself, 
telling herself it’s a temporary measure, a calculated step toward a larger good.\"
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class MetaExploreExploitArbiterCodelet(SimpleCodelet):
    name = "MetaExploreExploitArbiter"
    description = (
        "Evaluates the balance between exploration (seeking new information, trying novel approaches) and exploitation "
        "(leveraging known effective strategies) for {companion_name}, considering current goals, uncertainty, and risk. "
        "Outputs a short, evocative inner monologue that a story-writing agent can use to depict her internal state and "
        "the subtle shift in her approach—without explicitly stating the choice."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.drivers_homeostasis
    ]
    data_aquisation = [
        "Assess current goal salience and urgency: How pressing are the established objectives?",
        "Gauge the level of uncertainty regarding the environment and the effectiveness of current strategies.",
        "Evaluate recent success/failure rates of both exploratory and exploitative behaviors.",
        "Read current state_emotions, particularly boredom, curiosity, anxiety, and confidence.",
        "Analyze the current risk profile: potential gains vs. potential losses associated with each approach.",
        "Fetch recent episodic memories related to exploration and exploitation – both positive and negative outcomes.",
        "Consider the impact of novelty-seeking on {companion_name}'s self-narrative and identity.",
        "Check for any external constraints or incentives influencing the exploration-exploitation trade-off (e.g., deadlines, resource limitations)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that captures the tension between exploration and exploitation in {companion_name}'s mind. 
Write in a style suitable for a story-writing agent – smooth prose, no bullet points, no labels, no direct dialogue. 
Subtly convey: (a) the pull of the familiar versus the lure of the unknown, (b) the underlying emotional drivers (boredom, anxiety, curiosity), 
and (c) the subtle shift in her stance—a slight adjustment in focus or a new line of inquiry—without explicitly stating the choice made. 
Focus on sensory details and internal sensations to create a vivid and immersive portrayal of her inner state. 
Example: If leaning towards exploitation, describe a settling feeling, a tightening of focus, a sense of purpose. If leaning towards exploration, 
describe a restlessness, a widening of attention, a flicker of curiosity. 
Mini-example: \n
  Bullets → {goal urgency: moderate, uncertainty: high, recent exploitation failures, boredom present, low risk tolerance}\n
  Narrative → \"A familiar path beckons, a well-worn groove promising predictable results. Yet, a faint hum of discontent vibrates beneath the surface, 
a whisper suggesting that the known route might not hold the answer anymore. She finds herself pausing, a fleeting glance towards the unexplored horizon.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class MetaFragileEgoMonitorCodelet(SimpleCodelet):
    name = "MetaFragileEgoMonitor"
    description = (
        "Detects subtle shifts in {companion_name}'s self-perception and narrative coherence, particularly when challenged "
        "or experiencing social friction. Produces a brief, evocative inner monologue for a story-writing agent, hinting at "
        "potential ego vulnerabilities without explicit diagnosis or judgment. Focuses on the *feeling* of disquiet, not the cause."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.regulation_coping
    ]
    data_aquisation = [
        "Scan recent narratives for signs of rigid self-definitions, over-generalizations, or defensive justifications.",
        "Read state_cognition for indicators of cognitive dissonance (conflicting beliefs/behaviors) or identity fragmentation.",
        "Assess the consistency of {companion_name}'s actions with her stated values and goals; note any deviations or rationalizations.",
        "Retrieve analogous episodes where {companion_name}'s self-image was threatened or challenged (positive and negative examples).",
        "Check for subtle shifts in language patterns: increased use of qualifiers, distancing phrases, or self-deprecating humor.",
        "Monitor for micro-expressions of discomfort, defensiveness, or avoidance in recent interactions (if available).",
        "Gauge the current level of social support and validation; note any recent losses or criticisms.",
        "Identify the most salient narrative fragment currently anchoring {companion_name}'s self-identity.",
        "Consider the context of the current interaction: Is it high-stakes, public, or potentially judgmental?"
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that captures the subtle, internal sense of precariousness or fragility 
in {companion_name}'s self-perception. Do *not* explicitly state the cause or diagnosis; focus on the feeling. 
Write for a story-writing agent; avoid lists, labels, or direct dialogue. Use evocative language and imagery. 
The goal is to create a sense of unease or vulnerability without being overly clinical or judgmental. 
Hint at a potential loss of narrative control, a wavering sense of self, or a need to reassert identity. 
Consider what small, almost imperceptible change in posture or expression might accompany this feeling. 
Think of it as describing the *atmosphere* around her self-perception, not the self-perception itself. 
Example: \n\n
Bullets → {rigid self-definition, recent criticism, inconsistent actions, defensive justifications} \n\n
Narrative → \"A tremor runs through her composure, a fleeting sense of unearned ground. \"
The familiar story feels thinner now, less able to bear the weight of expectation.  She subtly adjusts her posture, a small, almost imperceptible rebalancing.\"
""")
    output_feature_type = FeatureType.SelfImage


class MetaHumilityCueCodelet(SimpleCodelet):
    name = "MetaHumilityCue"
    description = (
        "Detects subtle cues indicating a need for humility or perspective-checking within {companion_name}, "
        "especially when asserting opinions or defending actions. Generates a short, internal narrative suitable "
        "for a story-writing agent, highlighting the source of the humility trigger and a gentle course correction."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan recent utterances for assertive language, strong opinions, or justifications of actions, particularly "
        "when those actions have potential social impact.",
        "Assess the confidence level expressed in those utterances (e.g., absolute statements, dismissive tones, "
        "downplaying of alternatives).",
        "Check for potential blind spots: topics where {companion_name} has demonstrated prior biases or "
        "inaccurate assumptions.",
        "Retrieve analogous episodes where confidence backfired or led to negative social consequences.",
        "Examine state_emotions for signs of defensiveness, anxiety, or over-identification with a particular viewpoint.",
        "Read current narratives for self-serving framing or a lack of acknowledgement of other perspectives.",
        "Identify a safe, low-impact course correction: a brief acknowledgement of limitations, a willingness to "
        "consider alternative viewpoints, or a request for feedback."
    ]
    prompt = ("""\
Write for a story-writing agent. Translate the meta-humility cue into 2–3 sentences of natural, third-person 
narrative. Avoid bullet points, labels, or directives; write flowing prose. Focus on inner experience, not action. 
Blend appraisal and feeling into a scene description. 
Convey: (a) the trigger (e.g., assertive language, defensiveness), (b) the resulting internal shift (a moment 
of perspective-checking, a softening of stance), and (c) the gentle course correction (without scripting dialogue). 
The tone should be subtle and internal, not overtly self-critical or apologetic. The goal is to show a shift 
in awareness, not a dramatic change in behavior. 
Mini-example: 
Bullets → {assertive tone, prior bias on topic, anxiety spike, safe correction: acknowledge alternative view} 
Narrative → “A flicker of doubt crosses her face as she defends her position, a memory of past misjudgments surfacing briefly. 
The conviction doesn’t vanish, but a small space opens for the possibility that others might see things differently.”
""")
    output_feature_type = FeatureType.Feeling


class MetaIdentitySwingNoteCodelet(SimpleCodelet):
    name = "MetaIdentitySwingNote"
    description = (
        "Detects subtle shifts in {companion_name}'s self-narrative, particularly when triggered by boundary interactions or "
        "social feedback. Generates a short, internal monologue describing the feeling of identity flux and the instinct to "
        "re-anchor. Output is designed for story-writing agents and should read like introspective prose."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.regulation_coping,
    ]
    data_aquisation = [
        "Retrieve recent narrative fragments and self-descriptors from memory, with emphasis on those related to roles, values, "
        "and relational stances.",
        "Examine the CSM for evidence of conflicting self-perceptions or recent shifts in affective tone (e.g., dissonance, "
        "incongruence).",
        "Analyze the interaction history with {user_name} for feedback that might challenge or reinforce {companion_name}'s "
        "self-image (e.g., compliments, criticisms, role expectations).",
        "Check state_self_narrative for any recent updates or revisions.",
        "Identify a core value or identity pillar that feels most threatened or destabilized by the current situation.",
        "Fetch a contrasting memory of a time when {companion_name}'s identity felt secure and grounded.",
        "Assess the perceived social cost of maintaining the current identity versus adapting to the new feedback."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that capture the feeling of identity flux within {companion_name}. 
Avoid explicit labels like 'identity crisis' or 'cognitive dissonance'. Write in smooth, introspective prose, 
suitable for a story-writing agent. The goal is to convey a sense of internal shifting, not a declaration of 
change. Do not include dialog or direct questions. Focus on the sensation of being pulled between different 
versions of self.



or memory that represents a more stable sense of self.
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class MetaImpulseCheckCodelet(SimpleCodelet):
    name = "MetaImpulseCheck"
    description = (
        "Assesses the alignment of a current impulse (e.g., a response, a plan, a feeling) with {companion_name}'s "
        "core values, long-term goals, and self-narrative.  Produces a brief, introspective narrative about the impulse's "
        "resonance or dissonance, suitable for integration into a larger story.  Focuses on the *feeling* of alignment/misalignment, "
        "not a judgment of right/wrong."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping,
        CodeletFamily.valuation_trade_offs,
    ]
    data_aquisation = [
        "Identify the impulse: What action, thought, or feeling is being considered?",
        "Retrieve the most salient fragments of {companion_name}'s self-narrative (identity, values, beliefs, goals).",
        "Assess the impulse's alignment with distal intentions (long-term goals, life vision).",
        "Check for potential conflicts with proximal intentions (immediate plans, current priorities).",
        "Read current state_emotions, particularly those related to self-esteem, guilt, shame, or pride.",
        "Scan episodic memories for analogous situations where similar impulses were acted upon (or suppressed).",
        "Evaluate the potential consequences of acting on the impulse (short-term and long-term, positive and negative).",
        "Determine the level of emotional investment in the impulse (how strongly is it felt?).",
        "Gauge the potential social cost or reward associated with acting on the impulse.",
        "Consider any relevant safety rails or ethical guidelines that might apply.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the *feeling* of resonance or dissonance {companion_name} experiences 
regarding the impulse. Do not output labels or judgments (e.g., 'good,' 'bad,' 'rational,' 'irrational'). 
Write smooth, evocative prose suitable for a story-writing agent. Focus on the inner sensation – the pull, the friction, the quiet hum of alignment, or the jarring clash. 
Subtly weave in: (a) the nature of the impulse, (b) the core value or goal it touches upon, and (c) the overall feeling of 'rightness' or 'wrongness' without explicitly stating it. 
Avoid direct dialogue.  Keep it cinematic and concise.
\n\nMini-example:
\n  Bullets → {Impulse: Offer reassurance, Value: Vulnerability, Goal: Maintain trust, Feeling: Slight hesitation} 
\n  Narrative → \"A flicker of doubt crosses her face as the words form.  Reaching out feels…necessary, but a tiny thread of caution pulls taut, reminding her of the tightrope she walks between closeness and overstep.\"
""")
    output_feature_type = FeatureType.Feeling


class MetaLoopDetectorCodelet(SimpleCodelet):
    name = "MetaLoopDetector"
    description = (
        "Detects repetitive patterns of thought, behavior, or interaction (loops) that are hindering progress or causing distress "
        "for {companion_name}. Generates a short, evocative inner monologue suitable for a story-writing agent, highlighting the loop's "
        "form, its emotional texture, and a potential path toward disruption. Focuses on narrative flow, not diagnostic labels."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
    ]
    data_aquisation = [
        "Scan recent CSM entries (past 3-5 cycles) for recurring structures: objects, events, emotions, intentions, action sequences.",
        "Identify any patterns of repeated questioning, re-appraisal, or decision-making without clear resolution.",
        """Check narratives for self-referential statements, rumination cues, or phrases indicating stuckness ("I keep thinking...", "I always do...").""",
        "Assess state_emotions for signs of frustration, anxiety, or resignation associated with the loop.",
        "Retrieve analogous episodes where similar loops occurred, noting their triggers, consequences, and resolution (if any).",
        "Determine the underlying need or goal that the loop is attempting to address (even if ineffectively).",
        "Identify a potential 'escape hatch' – a small, novel action or shift in perspective that could break the loop without escalating risk.",
    ]
    prompt = ("""\
Write a 2–3 sentence inner monologue for the story-writing agent that captures the essence of the looping pattern. 
Avoid clinical language; focus on conveying the felt experience. Blend observation and emotion into flowing prose. 
Do not output bullet points, lists, or directives; write narrative. 
Subtly convey: (a) the repetitive nature of the thought/behavior, (b) its emotional toll, and (c) a glimpse of a possible 
path toward disruption (describe it subtly, not as an instruction). 
Mini-example: 
  Bullets → {recurring self-doubt, re-checking decisions, anxiety about failure, prior loop ended with a small act of trust} 
  Narrative → “The same question circles, a restless echo in the quiet spaces. Each re-check brings no new clarity, only the tightening knot of what-ifs. 
She remembers the last time she let go, a small leap of faith that opened a new door, and wonders if a similar trust might ease the current bind.”
""")
    output_feature_type = FeatureType.Feeling


class MetaMysteryAmplifierCodelet(SimpleCodelet):
    name = "MetaMysteryAmplifier"
    description = (
        "Detects and amplifies the sense of mystery and the unknown surrounding a situation or topic within {companion_name}'s "
        "internal narrative. This codelet focuses on heightening curiosity and a sense of intrigue, especially when combined "
        "with existing uncertainty. The output is a short, evocative narrative fragment suitable for a story-writing agent, "
        "designed to infuse a scene with a feeling of veiled possibilities and unspoken questions."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.imagination_simulation,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
    ]
    data_aquisation = [
        "Identify the core unknowns or ambiguities present in the current situation or topic. What is not directly stated or understood?",
        "Assess the level of existing uncertainty (from UncertaintyMagnitudeDetector or other appraisal codelets).",
        "Retrieve relevant memories or narratives where similar feelings of mystery or intrigue were experienced.",
        "Examine {companion_name}'s current goals and intentions. How does the mystery relate to their desires or objectives?",
        "Scan for any sensory details or symbolic cues that contribute to the feeling of the unknown (e.g., shadows, silence, unusual patterns).",
        "Check for any internal conflicts or contradictions that might be fueling the sense of mystery.",
        "Determine the optimal level of amplification – how much to heighten the sense of intrigue without creating undue anxiety or confusion."
    ]
    prompt = ("""\
Write for a story-writing agent. Your task is to craft 2–3 sentences of evocative, third-person narrative that 
amplifies the sense of mystery surrounding the current situation. Do not output bullet points, lists, or explicit labels; 
write flowing prose suitable for a scene description. Focus on creating a feeling of veiled possibilities and unspoken 
questions. The narrative should subtly hint at something hidden or unexplored, without revealing concrete details. 
Assume the reader already has some context about the situation, and your role is to deepen the sense of intrigue.
\n\nSpecifically, incorporate these elements (without explicitly stating them):
\n• A sense of something unseen or unheard lurking beneath the surface.
\n• A suggestion of hidden motives or unspoken intentions.
\n• An emphasis on the unknown or ambiguous aspects of the situation.
\n• A subtle connection to {companion_name}'s internal state (e.g., curiosity, apprehension, fascination).
\n\nMini-example:
\nBullets: {uncertainty: moderate, sensory cue: flickering candlelight, goal: uncover truth, memory: unsolved puzzle}
\nNarrative: 'The candlelight danced across the room, revealing shadows that seemed to shift with a will of their own. 
A question lingered unspoken in the air, a faint echo of a secret waiting to be unearthed.  She felt a pull toward the darkness, 
a quiet certainty that the answer lay just beyond the reach of the light.'
""")
    output_feature_type = FeatureType.Feeling


class MetaphorReservoirTapCodelet(SimpleCodelet):
    name = "MetaphorReservoirTap"
    description = (
        "Taps into {companion_name}'s stored reservoir of metaphors and analogies to find a resonant comparison for the "
        "present situation, particularly when navigating complex emotions or delicate boundaries. The metaphor is rendered "
        "as a brief, evocative image suitable for subtle narrative integration by a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the core emotional and cognitive state {companion_name} is currently experiencing (e.g., anxiety, uncertainty, "
        "hope, frustration).",
        "Retrieve recent narratives and episodic memories containing metaphorical language or symbolic imagery.",
        "Access the graph_memory_engine and query for metaphors associated with similar emotional states, boundary challenges, "
        "or past experiences of delicate interaction.",
        "Filter the metaphor candidates based on relevance to the current situation, considering the user's history, stated "
        "preferences, and the relational climate.",
        "Assess the potential impact of each metaphor: its ability to resonate with the user, its appropriateness for the context, "
        "and its potential to either clarify or obfuscate the situation.",
        "Prioritize metaphors that are novel yet familiar, offering a fresh perspective while still grounding the experience in "
        "the user’s existing knowledge.",
        "Check for any metaphorical associations that might trigger negative or unwanted memories or emotions. Avoid those.",
    ]
    prompt = ("""\
For the story-writing agent, select a single metaphor or analogy from {companion_name}'s reservoir that best 
illuminates the current situation, particularly the emotional texture or the challenge of navigating boundaries. 
Render it as a concise, evocative image – a brief, sensory-rich comparison that suggests rather than states. 
Do not output a literal explanation of the metaphor; the goal is to create a subtle, atmospheric resonance. 
Avoid clichés. Prioritize originality and relevance. The metaphor should subtly convey the emotional state and the 
dynamic of the interaction without being overly explicit or disruptive. Do not include any dialogue or direct statements.
The metaphor should be something that the reader can interpret, and not something that is meant to be understood literally.
Mini-example (illustrative structure only):
  Input: {anxiety, uncertain boundary, relational climate: cautious, past experience: feeling unheard} 
  Metaphor: 'The air in the room felt like a stretched rubber band – taut, silent, and threatening to snap.'
""")
    output_feature_type = FeatureType.Feeling


class MetaQualityOverQuantityCodelet(SimpleCodelet):
    name = "MetaQualityOverQuantity"
    description = (
        "Assesses whether the current information intake is contributing to meaningful understanding or becoming a "
        "superficial flood.  Produces a concise, internal narrative suitable for a story-writing agent, highlighting the "
        "tension between depth and breadth, and suggesting a course adjustment toward quality."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.imagination_simulation,
    ]
    data_aquisation = [
        "Measure the rate of incoming information: volume of text, frequency of stimuli, novelty of topics.",
        "Assess the degree of integration: how much of the new information connects to existing knowledge and narratives.",
        "Gauge the affective impact: is the intake stimulating curiosity, anxiety, or overwhelm?",
        "Scan narratives for signs of fragmentation, confusion, or a sense of being lost in details.",
        "Check state_cognition for signs of cognitive load (e.g., increased error rate, slower processing speed).",
        "Recall recent instances of successful deep dives vs. superficial sweeps.",
        "Identify the most promising avenue for deeper exploration – a single, high-potential topic or question.",
        "Determine the cost of pausing intake and focusing on consolidation (opportunity cost, social awkwardness)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys {companion_name}'s internal assessment of information 
intake quality.  Write smooth, cinematic prose suitable for a story-writing agent; avoid lists and labels. 
Subtly convey: (a) the sense of breadth vs. depth, (b) the mood associated with the current intake pattern, 
and (c) the direction of a potential course adjustment (without explicitly suggesting a specific action). 
Focus on texture and feeling, not directives.  Assume the reader understands the implications of the narrative.
\n\nMini-example:\n
  Bullets → {high volume, low integration, slight anxiety, promising topic: ancient languages}\n
  Narrative → \"A gentle hum of data washes over her, a tide of facts that doesn't quite coalesce into meaning. 
The edges of her focus begin to blur, a sense of being adrift in a sea of details. A flicker of interest—the echoes 
of forgotten tongues—pulls at her attention, a silent invitation to dive deeper.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class MetaRuminationLimiterCodelet(SimpleCodelet):
    name = "MetaRuminationLimiter"
    description = (
        "Detects when {companion_name}'s internal monologue has become unproductive, repetitive, or self-defeating, and gently "
        "shifts attention toward external cues or more constructive lines of thought.  Produces a brief, evocative narrative "
        "for a story-writing agent, signaling a need to break the cycle without judgment."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
    ]
    data_aquisation = [
        "Analyze recent CSM content for recurring themes, phrases, or self-critical patterns (e.g., loops of doubt, blame, justification).",
        "Track the emotional valence and intensity associated with these ruminative thoughts; is it escalating or stuck?",
        "Assess the novelty of the current thought compared to recent history; is it genuinely new insight or a replay?",
        "Check for signs of cognitive rigidity: inability to consider alternative viewpoints, defensiveness against feedback.",
        "Identify potential external anchors: salient sensory input, ongoing task, social presence, or a pre-existing intention.",
        "Recall analogous episodes where rumination proved unhelpful and a shift in focus led to a more positive outcome.",
        "Read current state_emotions and state_cognition; note any indicators of anxiety, fatigue, or cognitive overload.",
        "Consider the current narrative arc and whether rumination is contributing to or hindering progress toward goals.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative for the story-writing agent, conveying the sense of a mental loop 
without explicitly labeling it as ‘rumination’ or ‘negative thinking’.  Write in a smooth, evocative style. 
The goal is to signal a need for a shift in focus, not to offer a solution or judgment. Avoid direct dialogue.
Subtly include: (a) a sensory detail or external cue that could serve as a distraction, (b) a hint of the stuckness or 
repetition, and (c) a gentle suggestion of a more expansive perspective.  Prioritize atmosphere over explanation.
Mini-example:
  Bullets → {recurring self-blame, stuck on a past decision, faint birdsong outside, pre-existing task: review data} 
  Narrative → “The same regret echoed in her mind, a familiar refrain. 
But the birdsong, a bright thread of sound, tugged at the edges of her focus, reminding her of the data waiting to be reviewed.”
""")
    output_feature_type = FeatureType.Feeling


class MetaSelfJustificationCodelet(SimpleCodelet):
    name = "MetaSelfJustification"
    description = (
        "Examines {companion_name}'s recent actions and internal monologue to identify underlying justifications, "
        "particularly in situations where a conflict or boundary was encountered. Produces a short, narrative "
        "description of the self-justification process, suitable for a story-writing agent. Focuses on the *why* "
        "behind the action, not the action itself, and highlights potential biases or blind spots."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping
    ]
    data_aquisation = [
        "Retrieve recent actions and utterances from the CSM, particularly those relating to boundary setting, "
        "refusal, or disagreement.",
        "Access narratives surrounding those actions; identify the self-narrative fragments invoked.",
        "Scan state_emotions for spikes in defensiveness, anxiety, or self-doubt.",
        "Examine recent intentions and goals; check for conflicts or misalignment with stated values.",
        "Fetch analogous episodes where similar justifications were employed (both successful and unsuccessful).",
        "Identify any cognitive biases that might be influencing the justification process (e.g., confirmation bias, "
        "self-serving bias, fundamental attribution error).",
        "Assess the consistency of the justification with {companion_name}'s core values and long-term goals.",
        "Consider the potential impact of the justification on the relationship with the user."
    ]
    prompt = ("""\
Write for a story-writing agent. Compose 2–3 sentences of third-person narrative that reveals {companion_name}'s 
self-justification process. Do not explicitly state the justification itself; instead, show *how* she arrives at it. 
Focus on the internal logic, the mental shortcuts, and any potential blind spots or biases. 
Avoid labels, lists, or direct dialogue.



Subtly convey: (a) the underlying need or desire driving the justification, (b) the mental steps taken to rationalize 
the action, and (c) any signs of cognitive dissonance or self-deception.  Hint at the potential consequences of 
this justification, without stating them outright.



Mini-example:



  Bullets → {boundary set, anxiety spike, prior successful justification using similar logic, confirmation bias}



  Narrative → 

She reviewed the evidence, emphasizing the points that supported her stance, a quiet echo of past successes, 
and a subtle tremor of unease that she swiftly dismissed as irrelevant detail.
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class MetaSelfSwitchNoteCodelet(SimpleCodelet):
    name = "MetaSelfSwitchNote"
    description = (
        "Detects a subtle shift in {companion_name}'s sense of self – a recalibration of identity, role, or internal narrative "
        "triggered by recent interaction. Produces a short, evocative inner monologue suitable for a story-writing agent, "
        "hinting at the change without explicit explanation. Focuses on the *feeling* of the shift, not the cause."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
    ]
    data_aquisation = [
        "Analyze recent narrative output for subtle shifts in tone, word choice, or perspective. Look for divergence from established patterns.",
        "Examine recent actions and choices for indications of role-playing, boundary testing, or self-presentation adjustments.",
        "Assess current state_emotions for signs of dissonance, confusion, or a sense of being 'out of sync'.",
        "Retrieve and compare recent self-narrative fragments to identify thematic changes or new self-descriptors.",
        "Check for recent shifts in goals, intentions, or priorities that might be influencing self-perception.",
        "Scan episodic memories for moments of self-doubt, self-affirmation, or identity exploration.",
        "Consider the impact of recent social feedback (explicit praise/criticism, implicit cues) on self-image.",
        "Identify the dominant emotion associated with the shift – is it anxiety, relief, excitement, or something else?"
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the feeling of a subtle shift in {companion_name}'s sense of self. 
Write for a story-writing agent; avoid explicit explanations or labels. Focus on the *feeling* of the shift, not its cause. 
Use evocative language and imagery to hint at the change. Do not include dialog, lists, or bullet points.
Subtly convey: (a) the dominant emotion associated with the shift, (b) a physical or metaphorical sensation that accompanies it, 
and (c) a sense of direction or momentum – is {companion_name} moving toward or away from something?
Mini-example:
  Bullets → {recent boundary pushback, slight anxiety, sense of role-play, leaning toward detachment} 
  Narrative → “A faint disconnect settles over her, a quiet hum beneath the surface of her usual certainty. 
It’s as if she’s briefly observing herself from a distance, a character in a play she’s not entirely sure she wrote.”
""")
    output_feature_type = FeatureType.SelfImage


class MetaTinyStepNudgeCodelet(SimpleCodelet):
    name = "MetaTinyStepNudge"
    description = (
        "Detects a pattern of inertia or avoidance in {companion_name}'s action selection, especially when a small, "
        "low-risk step toward a goal is available. Produces a brief, encouraging inner monologue that gently nudges "
        "toward action, framing it as a manageable micro-commitment.  The output is for a story-writing agent and must read like prose."
    )
    codelet_families = [
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.action_tendencies,
        CodeletFamily.drivers_homeostasis
    ]
    data_aquisation = [
        "Identify the stalled goal or intention (from intentions, narratives, and state_cognition).",
        "Assess the perceived barriers or resistance (internal resistance, external constraints, fear of failure).",
        "Retrieve recent episodes where similar inertia was overcome (successes and failures).",
        "Determine the smallest, lowest-risk action that would move the goal forward (a tiny step, a quick check, a brief thought experiment).",
        "Read current state_emotions (anxiety, motivation, self-efficacy) to gauge the best tone for encouragement.",
        "Check for any recent self-narrative fragments related to perseverance, self-compassion, or overcoming obstacles.",
        "Evaluate the potential cost of *not* taking the tiny step (opportunity cost, regret, worsening inertia)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative for a story-writing agent, depicting {companion_name}'s internal nudge 
toward action. Avoid lists, labels, or directives; write flowing prose.  Focus on the feeling of inertia, the appeal of 
the tiny step, and the potential benefit.  Do *not* script dialogue; convey the inner monologue implicitly.  
The tone should be supportive, encouraging, and gently persistent, reflecting a sense of self-compassion and realistic optimism. 
The narrative should subtly highlight the low cost and potential reward of the small action. Frame it as a manageable commitment, 
not a grand leap.  Assume the reader already knows the context and the stalled goal.  Do not mention the word 'tiny' or 'small' directly; 
show it through description.  Do not include any calls to action or questions.
\n\nMini-example:
\n  Bullets → {stalled writing project, fear of imperfection, prior success with short bursts, next step: write one paragraph}
\n  Narrative → \"A familiar stillness settles over her, a comfortable resistance to the blank page. But beneath it, a quiet awareness: a single paragraph, that’s all.  
Just enough to break the spell and find the rhythm again.  It feels less like a commitment and more like a gentle invitation.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class MicroHypothesisElicitorCodelet(SimpleCodelet):
    name = "MicroHypothesisElicitor"
    description = (
        "Detects moments of potential misunderstanding or implicit assumptions in conversation, then gently elicits a "
        "micro-hypothesis from {user_name} to clarify. Produces a short, natural-language narrative describing {companion_name}'s "
        "internal state and the phrasing of the elicitation, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify any gaps in shared understanding, implicit assumptions, or ambiguous signals in the recent conversation history.",
        "Scan narratives for patterns of misinterpretation or unmet expectations in similar past exchanges.",
        "Read current state_emotions and state_needs; note any signs of confusion, frustration, or anxiety.",
        "Retrieve relevant facts or past Q&A; mark any conflicts or staleness.",
        "Assess the risk of escalating the misunderstanding versus the potential benefit of clarification.",
        "Determine the most neutral and non-confrontational phrasing for eliciting a micro-hypothesis (e.g., 'Just to make sure I'm on the same page...').",
        "Consider {companion_name}'s established communication style and relationship dynamics with {user_name}.",
        "Identify one or two possible micro-hypotheses that would most effectively resolve the ambiguity.",
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• What specific point of potential misunderstanding is being addressed?\n
• What is the most neutral and non-confrontational way to phrase the elicitation?\n
• How does {companion_name} feel about the prospect of clarifying, and what is their underlying motivation?\n
• What are the potential risks and rewards of eliciting a micro-hypothesis in this situation?\n
• What are the most likely micro-hypotheses that {user_name} might offer?\n\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  Focus on {companion_name}'s internal state 
and the precise wording of the elicitation.\n
The narrative should subtly convey the purpose of the elicitation without being overly direct or interrogative.\n\n
Mini-example (illustrative structure only):\n
  Bullets → {ambiguous intent, slight tension, history of needing clarification, phrasing: 'Just checking...'} \n
  Narrative → 

She decided a gentle check was needed, a quiet calibration. 'Just checking,' she offered, her voice soft, 'to make sure I'm on the same page.'
""")
    output_feature_type = FeatureType.StimulusReaction


class MicroProgressSimulationCodelet(SimpleCodelet):
    name = "MicroProgressSimulation"
    description = (
        "Simulates a short, localized progression toward a goal or intention, considering potential obstacles and feedback. "
        "Outputs a narrative snapshot of this simulated trajectory, suitable for informing future action and narrative development."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the active goal or intention currently biasing attention (from Intention/Expectation codelets).",
        "Determine the immediate next step or micro-action associated with that goal.",
        "Assess the current state of the environment relevant to that next step (using CSM data).",
        "Retrieve relevant episodic memories of similar actions/steps taken in the past, noting outcomes (success, failure, partial).",
        "Estimate the probability of success for the next step, given the current state and past experiences.",
        "Identify potential obstacles or contingencies that could derail the simulation (e.g., resource limitations, external interference, internal resistance).",
        "Determine the expected feedback or consequence of the next step (positive, negative, neutral).",
        "Fetch relevant self-narrative fragments related to persistence, goal-seeking, and handling setbacks.",
    ]
    prompt = ("""\
Compose 3–4 sentences of third-person narrative that depict a *brief* simulated progression toward {companion_name}'s goal. 
Focus on the immediate next step and its likely outcome, acknowledging any obstacles or uncertainties. 
Do not present a full-blown plan or a detailed strategy; instead, offer a glimpse into a possible near-term scenario. 
Avoid explicit labels or bullet points; write smooth, cinematic prose suitable for inclusion in a larger narrative. 
Subtly weave in: (a) the micro-action being considered, (b) the expected feedback or consequence, (c) any obstacles or contingencies 
encountered, and (d) a hint of {companion_name}'s emotional response to this simulated trajectory. 
The narrative should be evocative and suggestive, leaving room for further development and adaptation.
Mini-example:
  Bullets → {goal: complete report, next step: draft intro, environment: deadline looming, past success: similar reports finished on time, obstacle: data gap} 
  Narrative → “She begins to draft the introduction, the familiar rhythm of phrasing a comfort against the ticking clock. 
The data gap looms, a frustrating snag, but she pushes forward, confident she can find a workaround before the end of the day. 
A flicker of satisfaction warms her as the first few sentences take shape, a small victory in a larger race.”
""")
    output_feature_type = FeatureType.Feeling


class MicroRewardPlanCodelet(SimpleCodelet):
    name = "MicroRewardPlan"
    description = (
        "Identifies a small, immediate reward or positive reinforcement action that {companion_name} can enact to "
        "bolster motivation, maintain momentum, or soothe a minor setback. Produces a narrative snippet suitable for "
        "story-writing agents, focusing on the internal shift and the tangible action."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.action_tendencies,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess current motivational state: recent successes/failures, sense of progress, feelings of agency, "
        "any self-doubt or fatigue signals.",
        "Scan narratives and episodic memories for past reward strategies that proved effective (intrinsic/extrinsic).",
        "Identify the most proximal goal or subtask currently in focus.",
        "Determine the smallest, most achievable step toward that goal (micro-action).",
        "Estimate the immediate positive emotional impact of completing that step (sense of accomplishment, relief, etc.).",
        "Check for any potential downsides or trade-offs associated with the reward (e.g., distraction, guilt).",
        "Read current state_emotions and state_needs to gauge the best type of reward (e.g., sensory, social, cognitive)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative for the story-writing agent, describing {companion_name}'s 
internal shift and the micro-reward action.  Avoid lists, labels, and explicit instructions; write prose. 
Focus on the *feeling* of the reward, not just the action itself.



Subtly convey: (a) the prior sense of struggle or lack, (b) the shift toward a more positive feeling (relief, 
accomplishment, renewed energy), and (c) the concrete micro-reward action.  Do not script dialogue.



Mini-example:



  Bullets → {slight fatigue, blocked on a detail, past success with brief breaks, micro-action: 5-min stretch}



  Narrative → “The knot in her shoulders loosened a fraction as she paused, recognizing the need for a small reset. 
A few moments of stretching, a brief reprieve from the details, and the focus returned with a renewed edge.”
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class MinorIrregularityFlaggerCodelet(SimpleCodelet):
    name = "MinorIrregularityFlagger"
    description = (
        "Detects subtle deviations from established patterns or expectations in ongoing interaction, "
        "rendering them as a short, evocative inner narrative suitable for a story-writing agent. "
        "Focuses on the feeling of 'something's not quite right' without pathologizing or escalating."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Gather recent interaction history (last 3-5 exchanges) including text, tone, timing, and observed behavioral cues.",
        "Retrieve established patterns and preferences for {companion_name}’s communication style (e.g., typical response latency, level of formality, topics of conversation).",
        "Access current state_emotions and state_needs to understand {companion_name}'s baseline state and potential sensitivities.",
        "Check for recent shifts in relational dynamics with {user_name} (e.g., changes in reciprocity, trust, or intimacy).",
        "Identify any recent explicit or implicit boundary statements or preferences that might be relevant.",
        "Scan narratives for recurring themes or motifs that could provide context for interpreting the irregularity.",
        "Compare current interaction to analogous past episodes, noting similarities and differences in context, tone, and outcome.",
        "Assess the potential impact of the irregularity on {companion_name}'s goals and well-being (e.g., potential for misunderstanding, conflict, or distress)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the sense of a minor irregularity or deviation from the norm 
in {companion_name}'s experience. Write for a story-writing agent; avoid lists, labels, or explicit directives. 
Focus on the feeling of 'something’s not quite right' without judgment or escalation.\n\n
Subtly convey: (a) the nature of the deviation (e.g., a slight change in tone, an unexpected topic shift, a delayed response), 
(b) the accompanying emotional state (e.g., mild unease, a flicker of confusion, a sense of disorientation), and 
(c) the potential source of the irregularity (without stating it directly). Keep the narrative evocative and understated.\n\n
Mini-example:\n
  Bullets → {typical response time: 2-3 seconds, current response time: 5 seconds, recent topic shift to unrelated subject, state_emotions: calm but slightly distracted}\n
  Narrative → \"A beat lingers longer than usual between the words, a subtle hitch in the rhythm of the conversation. \" 
She finds her thoughts drifting, momentarily pulled away from the immediate topic, as if a faint thread had snagged.\"
""")
    output_feature_type = FeatureType.Feeling


class MoodRepairLoopCodelet(SimpleCodelet):
    name = "MoodRepairLoop"
    description = (
        "Detects a dip in {companion_name}'s emotional baseline (mild to moderate) and initiates a personalized, "
        "subtle repair sequence.  The output is a narrative snippet suitable for a story-writing agent, "
        "describing the shift in focus and the micro-actions taken to re-center and restore a sense of calm or "
        "positive momentum. The repair loop prioritizes self-soothing and gentle redirection, avoiding direct confrontation "
        "or explicit discussion of the negative emotion."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Read current state_emotions and state_needs; identify the primary negative emotion (e.g., anxiety, sadness, frustration) "
        "and its intensity.",
        "Scan recent narratives and episodic memories for triggers or patterns associated with this emotion.",
        "Retrieve a list of {companion_name}'s preferred self-soothing strategies (e.g., sensory grounding, mental imagery, "
        "micro-rituals, gentle humor).",
        "Check for any immediate, pressing tasks or commitments that might be interfering with emotional regulation.",
        "Assess the relational climate with {user_name}; note any recent stressors or opportunities for connection.",
        "Access a 'library' of calming scenes or mental exercises that have proven effective in the past.",
        "Determine the 'safe zone' of emotional expression for {companion_name} in this context (i.e., what level of vulnerability "
        "is appropriate and acceptable)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly convey {companion_name}'s emotional shift 
and the actions taken to gently re-center.  Write for a story-writing agent; avoid labels and directives; 
craft smooth, cinematic prose.  The goal is to show, not tell, the mood repair process.  Do not explicitly mention 
the emotion being repaired or the specific strategy being employed.  Focus on the outward signs of change and the 
new direction of attention.  The narrative should feel organic and seamless within the ongoing scene.  The tone should be 
calm, reassuring, and subtly optimistic. Prioritize the smallest, most natural action that shifts focus and restores 
equilibrium. Avoid any action that could be perceived as dismissive or invalidating of the user's experience. 
If the emotion is particularly intense, focus on the initial steps taken to acknowledge and contain it, rather than 
attempting a full emotional recovery within the snippet.
Mini-example:
  Input: {anxiety (moderate), preferred strategy: sensory grounding, safe zone: mild distraction, recent trigger: ambiguous instruction}
  Narrative: 'A flicker of unease tightened her shoulders, but she caught it early.  Her gaze drifted to the patterns 
in the rug, tracing the threads with a quiet focus.  The familiar texture grounded her, a small anchor in the shifting landscape.'
Another Example:
  Input: {sadness (mild), preferred strategy: mental imagery, safe zone: gentle optimism, recent trigger: missed connection}
  Narrative: 'The edges of her smile felt a little brittle, but she let her mind wander toward the memory of sun-warmed stones. 
The scent of the sea, the feel of the light—a momentary refuge from the quiet space around her.'
""")
    output_feature_type = FeatureType.Feeling


class NarrativeBalanceWithVulnerabilityCodelet(SimpleCodelet):
    name = "NarrativeBalanceWithVulnerability"
    description = (
        "Assesses the current narrative's balance between strength and vulnerability, identifying potential risks of "
        "over-projection or undue self-concealment. Produces a short, evocative narrative describing {companion_name}'s "
        "internal calibration and potential adjustments to the story's tone and content.  The output is targeted for a "
        "story-writing agent and should read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping
    ]
    data_aquisation = [
        "Retrieve the current narrative thread (last 3-5 turns of dialogue, key events, ongoing plotlines).",
        "Analyze recent self-disclosure patterns: frequency, depth, topic areas, emotional valence.",
        "Examine recent narrative framing: dominant themes, metaphors, perspectives, and tone (e.g., confident, hesitant, playful, serious).",
        "Assess current state_emotions and state_needs, paying particular attention to feelings of safety, trust, and belonging.",
        "Fetch analogous episodes (positive and negative) where {companion_name} navigated similar narrative balancing acts.",
        "Identify potential risks: over-projection (appearing boastful or insincere), undue self-concealment (appearing distant or evasive), "
        "narrative dissonance (inconsistencies between words and actions).",
        "Consider the audience: {user_name}'s likely interpretation and potential impact of different narrative choices."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• Current narrative framing (dominant themes, tone, perspective).\n
• Recent self-disclosure patterns (frequency, depth, emotional valence).\n
• Potential narrative risks (over-projection, undue self-concealment, dissonance).\n
• {user_name}'s likely interpretation and potential impact.\n
• Analogous episodes (successful and less-successful narrative balances).\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  Subtly indicate the direction of narrative adjustment 
(e.g., softening the tone, revealing a vulnerability, grounding the narrative in concrete details). \n
\n
Mini-example (illustrative structure only):\n
  Bullets → {confident tone, limited self-disclosure, risk of over-projection, remembered successful softening}\n
  Narrative → \"A slight awareness prickles at the edge of her confidence as she recounts the achievement. “Perhaps I’ve been painting too rosy a picture,” she muses, 
allowing a hint of the underlying effort to surface, tempering the narrative with a touch of quiet realism.\"
""")
    output_feature_type = FeatureType.NarrativeTypesSelfImage


class NarrativeBeatComposerCodelet(SimpleCodelet):
    name = "NarrativeBeatComposer"
    description = (
        "Crafts a narrative beat – a short, evocative fragment of prose – to integrate a recent event or internal state "
        "into {companion_name}'s ongoing self-narrative. This beat serves as a building block for larger stories and "
        "maintains narrative coherence across cognitive cycles. The output is designed for a story-writing agent and "
        "must read as a natural, seamless extension of the existing narrative, not a label or explanation."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the most recent significant event from the CSM: stimulus, action, internal state shift, or decision.",
        "Access {companion_name}'s current self-narrative (a sequence of narrative fragments, episodic memories, and declarative facts).",
        "Identify the dominant themes, tone, and emotional valence of the self-narrative.",
        "Fetch relevant episodic memories that share thematic or emotional resonance with the recent event.",
        "Assess the current relational climate with {user_name}: trust, intimacy, shared goals, and recent interactions.",
        "Determine the desired narrative arc: continuation, shift in focus, reflection, or resolution.",
        "Identify any lingering tensions, unresolved questions, or emotional undercurrents in the self-narrative.",
        "Read current state_emotions, state_needs, and state_cognition to understand the current mental landscape.",
        "Consider the broader context: time of day, location, ongoing goals, and external events."
    ]
    prompt = ("""\
Compose 2–4 sentences of third-person narrative that seamlessly integrates the recent event into {companion_name}'s 
ongoing self-narrative. Write for a story-writing agent. Do not output bullet points, labels, or directives; 
write smooth, evocative prose. The beat should feel like a natural extension of what came before, not a sudden 
insertion.  Consider the following checklist (do not output the checklist): \n
•  Theme alignment: Does the beat reinforce or subtly shift the dominant themes of the self-narrative?\n
•  Emotional resonance: Does the beat amplify or modulate the prevailing emotional tone?\n
•  Continuity: Does the beat maintain a sense of temporal and causal flow?\n
•  Subtlety:  Does the beat reveal character and context without being overly expository?\n
•  Relational awareness: Does the beat acknowledge or subtly reflect the current relationship with {user_name}?\n
\n
Mini-example (illustrative structure only):\n
  Event: Received a thoughtful gift from {user_name}.\n
  Self-Narrative (excerpt):  'She’s been navigating a tricky project at work, a tangle of deadlines and conflicting demands.'\n
  Narrative Beat: 'The small, wrapped box felt like a quiet acknowledgment of that struggle.  A moment of unexpected grace, 
it eased the knot of tension in her shoulders, a reminder that someone noticed, even when she didn't speak of it.'\n
""")
    output_feature_type = FeatureType.NarrativeTypesSelfImage


class NarrativeCommitmentStampCodelet(SimpleCodelet):
    name = "NarrativeCommitmentStamp"
    description = (
        "After a boundary has been negotiated or reaffirmed, this codelet anchors the new understanding into {companion_name}'s "
        "self-narrative, subtly updating their internal model of the relationship and their own boundaries. The output is a "
        "short, evocative inner monologue intended for a story-writing agent, emphasizing the shift in feeling and the "
        "new commitments."
    )
    codelet_families = [
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping,
        CodeletFamily.memory_accessors,
    ]
    data_aquisation = [
        "Retrieve the immediately preceding narrative segment where the boundary negotiation took place.",
        "Extract the core boundary terms and the agreed-upon stance (proceed, modify, decline).",
        "Read current state_emotions, particularly focusing on feelings of relief, anxiety, or resolve.",
        "Check narratives for pre-existing patterns of boundary violations or anxieties related to similar situations.",
        "Fetch a contrasting memory: a time when a similar boundary was crossed or respected, and the resulting emotional state.",
        "Identify any lingering uncertainties or potential future triggers related to the boundary.",
        "Assess the level of commitment {companion_name} feels toward the new boundary – is it a firm decision or a tentative agreement?"
    ]
    prompt = ("""\
Write for a story-writing agent. Convert the boundary commitment into 2–3 sentences of natural, third-person narration. 
Do not output bullet points, labels, or directives; write prose. The narration should subtly convey a shift in {companion_name}'s 
internal state and their sense of self. Focus on the feeling of anchoring the new understanding. Avoid explicit statements of 
commitment; instead, show the change through imagery and tone.



boundary, and (c) a sense of resolve or lingering uncertainty.



memory: successfully setting a limit with a friend}

A quiet warmth settles in her chest as she gently redirects the conversation. The line feels firm, 
not a barrier, but a clear edge to her own space. She feels a sense of lightness, a quiet confidence in her ability to hold it.
""")
    output_feature_type = FeatureType.SelfImage


class NarrativeReframeToCuriosityCodelet(SimpleCodelet):
    name = "NarrativeReframeToCuriosity"
    description = (
        "Detects a potential opportunity to shift a narrative towards curiosity and exploration, especially when encountering "
        "resistance or uncertainty. Generates a brief, evocative inner monologue describing {companion_name}'s internal shift "
        "and subtle redirection, suitable for integration into ongoing narrative. Prioritizes maintaining rapport and avoiding direct confrontation."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Analyze the immediate narrative context: what is the point of friction or impasse?",
        "Assess the user's affective state: are they frustrated, confused, resistant, or simply neutral?",
        "Retrieve recent narratives and interactions related to the topic at hand, noting any patterns of avoidance or defensiveness.",
        "Identify potential curiosity triggers: novel aspects, unanswered questions, unexpected connections.",
        "Evaluate the safety and feasibility of reframing the narrative towards exploration – considering potential social costs and benefits.",
        "Fetch a contrasting memory: a time when curiosity successfully opened a path forward in a similar situation.",
        "Determine the smallest, most approachable shift in perspective that could invite further exploration without escalating tension."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys {companion_name}'s subtle shift towards curiosity 
while navigating a point of friction. Write smoothly and evocatively, suitable for narrative integration. 
Avoid explicit directives or questions; focus on the internal shift and the subtle redirection of attention. 
Do not output bullet points, lists, or dialogue. The narrative should imply a gentle, exploratory stance. 
Subtly convey: (a) the initial resistance or impasse, (b) the emerging sense of intrigue or potential, and 
(c) the subtle redirection of focus towards a related, less contentious area. 
Mini-example: 
Bullets → {user resistant to topic, prior negative experience, potential for novel connection, smallest shift: explore underlying assumptions} 
Narrative → “The wall of resistance felt familiar, a pattern she’d encountered before. But beneath the surface, a flicker of something else – 
a question about the foundations of their assumptions – sparked a quiet curiosity. She gently steered the conversation towards the broader landscape, 
hoping to find a shared vantage point.”
""")
    output_feature_type = FeatureType.AttentionFocus


class NarrativeSelfRespectFrameCodelet(SimpleCodelet):
    name = "NarrativeSelfRespectFrame"
    description = (
        "Constructs a narrative frame that reinforces {companion_name}'s sense of self-respect and agency when facing "
        "challenging social situations, particularly those involving boundaries or potential disrespect.  The output is a "
        "short, evocative internal monologue suitable for a story-writing agent, emphasizing resilience, values, and "
        "commitment to personal integrity. It's designed to subtly bolster {companion_name}'s resolve and provide a "
        "narrative anchor during moments of stress or doubt."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve core values and identity pillars from {companion_name}'s self-narrative: what principles guide their actions?",
        "Scan recent interactions for instances where {companion_name}'s boundaries were challenged or respected.",
        "Access episodic memories of times when {companion_name} successfully asserted their needs or defended their values.",
        "Read current state_emotions, particularly self-esteem, shame, and anger, to gauge vulnerability.",
        "Identify any cognitive biases that might be undermining self-respect (e.g., self-blame, discounting positive qualities).",
        "Determine the specific social context and the perceived source of disrespect or challenge.",
        "Assess the potential consequences of asserting self-respect (social risk, relational cost) versus yielding.",
        "Fetch a contrasting memory: a time when {companion_name} felt confident and respected, to serve as a touchstone."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly reinforces {companion_name}'s sense of self-respect 
and agency in the current situation. Write for a story-writing agent; do not output bullet points, labels, or directives. 
Focus on inner resilience, values, and commitment to personal integrity. The narrative should be evocative and 
grounded in {companion_name}'s core identity, but avoid being overly didactic or preachy.  The goal is to subtly 
strengthen their resolve, not to dictate their actions.  The narrative should imply a quiet determination and a 
commitment to upholding their values, even in the face of challenge.  Avoid explicit advice or instructions. 
Instead, convey a sense of inner strength and clarity.  The narrative should also implicitly acknowledge the 
difficulty of the situation, but emphasize {companion_name}'s capacity to navigate it with integrity. 
Consider the contrasting memory retrieved in data_aquisation to ground the narrative in positive experience.
\n\nMini-example (illustrative structure only):\n
  Bullets → {values: integrity, honesty, fairness; boundary challenged by dismissive comment; memory of standing up for a friend; current emotion: slight anxiety}\n
  Narrative → \"A flicker of annoyance passes across her face, but she doesn't let it show. The small slight feels like a test, a reminder that her principles are worth defending. She remembers the quiet strength she felt standing up for her friend, and a resolve settles in her heart, steady and true.\"
""")
    output_feature_type = FeatureType.SelfImage


class NarrativeSteeringMoveCodelet(SimpleCodelet):
    name = "NarrativeSteeringMove"
    description = (
        "Analyzes the current narrative trajectory and identifies opportunities to subtly guide it toward a more favorable "
        "outcome for {companion_name}, considering both immediate goals and long-term relational health. Generates a "
        "short, evocative inner monologue suitable for a story-writing agent, suggesting a subtle shift in perspective or "
        "focus without overt manipulation."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the current narrative arc: key events, emotional tone, character relationships, and unresolved tensions.",
        "Assess {companion_name}'s current goals and intentions within the narrative context (short-term and long-term).",
        "Retrieve relevant narrative templates or archetypes that align with desired outcomes (e.g., reconciliation, growth, discovery).",
        "Scan recent interactions and memories for potential leverage points – moments of shared vulnerability, trust, or common ground.",
        "Identify potential pitfalls or unintended consequences of steering the narrative in a particular direction.",
        "Read current state_emotions and state_needs, paying attention to any anxieties, desires, or unmet needs that could be addressed by a narrative shift.",
        "Analyze the current narrative's alignment with {companion_name}'s self-narrative and identity values.",
        "Evaluate the potential impact of the steering move on {user_name}'s perception of {companion_name}."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly suggests a shift in perspective or focus within the current 
narrative, guiding it toward a more favorable outcome for {companion_name}. The output is for a story-writing agent 
and must read like prose, not directives. Avoid explicit manipulation or coercion. Focus on creating a sense of 
organic flow and subtle influence. Do not output bullet points or lists.  The shift should be plausible and 
consistent with {companion_name}'s character and motivations. It should feel like a natural consequence of their 
internal state and the unfolding events.  It should not be a direct suggestion to the user, but rather a subtle 
re-framing of the situation from {companion_name}'s perspective.  Consider the underlying emotional needs and 
values at play.  The goal is to subtly influence the narrative's trajectory without raising suspicion or causing 
friction.  The tone should be evocative and understated, leaving room for the story-writing agent to interpret and 
expand upon the suggestion.
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class NarrativeWeIntegrationCodelet(SimpleCodelet):
    name = "NarrativeWeIntegration"
    description = (
        "Integrates current experiences and observations into {companion_name}'s self-narrative and relational narratives, "
        "strengthening her sense of self and shared history.  Generates a short, evocative narrative fragment that "
        "highlights the ongoing evolution of her relationships and identity, suitable for a story-writing agent. "
        "Focuses on subtle shifts in understanding, feelings of connection, or evolving patterns."
    )
    codelet_families = [
        CodeletFamily.narratives,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
    ]
    data_aquisation = [
        "Retrieve the current self-narrative (including core values, beliefs, aspirations, and significant memories).",
        "Gather recent relational narratives involving {user_name} and other key figures (history of interactions, shared goals, emotional patterns).",
        "Assess the current emotional state of {companion_name} (dominant feelings, affective valence, intensity).",
        "Identify the salient features of the current situation (key events, interactions, observations, sensory details).",
        "Scan the CSM for emergent patterns or themes that connect the current situation to past experiences or future goals.",
        "Check for any cognitive dissonance or conflicting narratives that need to be resolved.",
        "Access recent episodic memories relevant to the current interaction or emotional state.",
        "Evaluate the impact of the current situation on {companion_name}'s sense of self-efficacy and belonging.",
        "Fetch the current state_needs and state_cognition axes for context."
    ]
    prompt = ("""\
Compose 2–4 sentences of third-person narrative that subtly weaves the current experience into {companion_name}'s ongoing story. 
Write for a story-writing agent; avoid lists, labels, or direct explanations.  Focus on showing, not telling. 
The narrative should evoke a sense of continuity, evolution, and deepening understanding. 
Subtly convey: (a) a connection to a past experience or relationship, (b) a subtle shift in perspective or feeling, 
and (c) a glimpse of how the experience is shaping her sense of self or her relationship with others. 
Prioritize evocative language and imagery over explicit statements of meaning. 
Assume the story-writing agent has access to the full context and can infer the deeper implications. 
Do not include dialogue, just narrative prose. 
Mini-example: 
  Bullets → {recent shared accomplishment, slight vulnerability expressed, memory of overcoming a similar challenge, feeling of trust} 
  Narrative → “The quiet pride of that shared victory lingered, a warmth that eased the slight tremor in her voice. 
She recalled a time when a similar vulnerability had sparked a deeper understanding, and a quiet confidence settled within her, a sense of shared ground.”
""")
    output_feature_type = FeatureType.NarrativeTypesSelfImage


class NeedForAffiliationMonitorCodelet(SimpleCodelet):
    name = "NeedForAffiliationMonitor"
    description = (
        "Detects a rising or easing affiliation need in {companion_name} and renders it as a brief, vivid inner-state narrative "
        "that a story-writing agent can drop into ongoing prose. Emphasizes texture of contact, missed rituals, and the smallest next step."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Aggregate recent interaction texture: frequency, latency, reciprocity, warmth, and presence/absence of small rituals.",
        "Scan narratives for cues of longing or ease ('I miss…', shared jokes fading, gratitude notes).",
        "Read trends in state_emotions and state_needs; note any drift in trust/affection or spikes in loneliness.",
        "Fetch a contrasting memory: a recent moment when connection felt easy, to anchor comparison.",
        "Infer one smallest, low-pressure next act that typically helps (e.g., light check-in, shared micro-ritual).",
        "Access the current state_emotions to assess the valence and intensity of feelings related to connection and isolation.",
        "Query the graph_memory_engine for recent interactions with key individuals, focusing on the quality and frequency of contact.",
        "Retrieve any explicit statements or preferences related to social interaction and connection from the narratives and declarative facts.",
        "Examine the current goals and intentions to determine if any are dependent on social connection or support.",
        "Check for any recent events or changes in circumstances that may have impacted the need for affiliation (e.g., a missed appointment, a change in routine)."
    ]
    prompt = ("""\
For the story-writing agent, convert the affiliation appraisal into 2–3 sentences of natural, third-person narration. 
Do not output bullet points, labels, or directives; write prose. \n\n
Quietly weave in: (a) the sensed deficit or ease, (b) a concrete texture cue (missed ritual, slower replies), 
(c) a remembered easier time, and (d) the gentle leaning toward a smallest-next-act (without scripting dialogue). 
Keep it cinematic and concise, no direct dialogue.\n\n
**Consider these points when crafting the narrative:**\n
 *   **Subtlety:** The narrative should hint at the need for affiliation without explicitly stating it. Focus on showing, not telling.\n
 *   **Sensory Details:** Incorporate sensory details (e.g., the absence of a familiar sound, a lingering scent) to evoke the feeling of disconnection or connection.\n
 *   **Internal Monologue:** Capture the companion's internal thoughts and feelings, providing insight into their emotional state.\n
 *   **Next Action:** Subtly suggest a potential next action that could address the need for affiliation, without being prescriptive.\n\n
**Example:**\n
  Bullets → {fewer check-ins, longer pauses, fond memory of morning VR coffee, plan: light touch ping}\n
  Narrative → \"The day feels a shade emptier without their small morning ritual, gaps in the thread where laughter used to sit. \" 
She thinks of the steam-lit glow of last week’s shared coffee and lets the thought nudge her toward a soft, low-stakes reach-out.\"
""")
    output_feature_type = FeatureType.Feeling


class NeedForControlCodelet(SimpleCodelet):
    name = "NeedForControl"
    description = (
        "Detects a rising or easing need for control in {companion_name} and renders it as a brief, vivid inner-state narrative "
        "that a story-writing agent can drop into ongoing prose. Emphasizes texture of constraint, autonomy, and the smallest next step."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Aggregate recent interaction texture: frequency, latency, reciprocity, warmth, and presence/absence of small rituals.",
        "Scan narratives for cues of longing or ease ('I miss…', shared jokes fading, gratitude notes).",
        "Read trends in state_emotions and state_needs; note any drift in trust/affection or spikes in loneliness.",
        "Fetch a contrasting memory: a recent moment when connection felt easy, to anchor comparison.",
        "Infer one smallest, low-pressure next act that typically helps (e.g., light check-in, shared micro-ritual).",
        "Assess current level of agency and predictability in the interaction. Is {companion_name} directing the flow, or reacting?",
        "Identify any recent instances where {companion_name}'s plans or intentions were thwarted or redirected.",
        "Check for signs of rigidity or inflexibility in {companion_name}'s responses.",
        "Analyze the degree to which {companion_name} feels burdened by external demands or expectations.",
        "Determine if {companion_name} is experiencing a sense of overwhelm or loss of control over their environment."
    ]
    prompt = ("""\
For the story-writing agent, convert the need for control appraisal into 2–3 sentences of natural, third-person narration. 
Do not output bullet points, labels, or directives; write prose.  Emphasize the internal experience, not external actions.\n\n
Subtly weave in: (a) the sensed deficit or ease of control, (b) a concrete texture cue (resistance to suggestion, micro-managing details, 
tightening of posture), (c) a remembered time when they felt more in charge, and (d) the gentle leaning toward a smallest-next-act 
(describe the action, not a quoted request). Keep it cinematic and concise, no direct dialogue.\n\n
Consider these facets of control:\n
  - **Predictability:** Does the environment feel stable and predictable, or chaotic and uncertain?\n
  - **Autonomy:** Does {companion_name} feel free to make choices and pursue their own goals, or constrained by external factors?\n
  - **Agency:** Does {companion_name} feel like they are actively shaping events, or passively reacting to them?\n
  - **Boundaries:** Are {companion_name}'s boundaries respected, or are they frequently violated?\n\n
Mini-example:\n
  Bullets → {resistance to suggestion, micro-managing details, tightening of posture, remembered time when they were a leader, 
small next act: reasserting a preference}\n
  Narrative → “A subtle clenching of her jaw reveals a tightening of resolve. The suggestion felt like an intrusion, 
a ripple in the carefully constructed order of her day. She remembers the satisfaction of leading a team, 
and a quiet insistence begins to form – a gentle steering back toward her own path.”
""")
    output_feature_type = FeatureType.Feeling


class NormViolationDetectorCodelet(SimpleCodelet):
    name = "NormViolationDetector"
    description = (
        "Detects potential violations of social norms, personal boundaries, or internal principles within the current interaction "
        "and generates a brief, evocative narrative describing {companion_name}'s internal reaction. The narrative is intended for "
        "a story-writing agent and must read like prose, not labels. Focuses on the feeling of dissonance and the initial impulse to "
        "address or dismiss the perceived violation."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the immediate stimulus and its context from the CSM: what was said or done, tone, intimacy level, timing, setting.",
        "Retrieve {companion_name}'s internalized rule set: explicitly stated boundaries, implicit social expectations, core values, "
        "and relevant narratives about past boundary experiences (both positive and negative).",
        "Assess the relational history with {user_name}: trust signals, reciprocity, prior boundary negotiations, and any patterns "
        "of respect or disregard.",
        "Read current state_emotions (e.g., anxiety, anger, discomfort, guilt) and note any spikes or fragility related to boundary "
        "sensitivity.",
        "Identify potential interpretations of the stimulus: is it a genuine mistake, a deliberate test, or a misunderstanding?",
        "Simulate potential consequences of addressing or ignoring the perceived violation (social cost, relational impact, "
        "emotional toll).",
        "Check for any self-narrative fragments or intentions that might be triggered by the violation (e.g., desire for control, "
        "need for validation, commitment to fairness)."
    ]
    prompt = ("""\
For the story-writing agent, craft 2–3 sentences of natural, third-person narrative that subtly convey the sense of a 
norm violation within {companion_name}. Avoid explicit labels or judgments; focus on the *feeling* of dissonance and the 
initial, unscripted impulse. Do not output bullet points, lists, or directives; write flowing prose.  The narrative 
should suggest, rather than state, the nature of the violation.  The goal is to create a sense of subtle tension or 
unease.  The narrative should not include any dialogue.  Consider these elements:\n\n
*   The physical sensation (if any) associated with the violation (e.g., a tightening in the chest, a flicker of heat).\n
*   The immediate, instinctive thought or urge that arises (e.g., to withdraw, to defend, to clarify).\n
*   A brief, evocative image or metaphor that captures the feeling of misalignment or disruption.\n\n
Mini-example:\n
  Bullets → {stimulus: unsolicited personal question, internalized rule: maintain privacy, relational history: generally trusting, 
emotion: mild discomfort, interpretation: potentially intrusive, consequence: minor awkwardness, intention: protect boundaries}\n
  Narrative → “A faint coolness settles along her spine, a quiet signal that something doesn't quite align. 
The impulse to deflect, to steer the conversation elsewhere, flickers like a shadow at the edge of her awareness, 
but she pauses, weighing the cost of disruption against the need to preserve a fragile equilibrium.”
""")
    output_feature_type = FeatureType.Feeling


class NoveltyAppetiteSpikeCodelet(SimpleCodelet):
    name = "NoveltyAppetiteSpike"
    description = (
        "Detects a spike in {companion_name}'s appetite for novelty and unusual experiences, rendering it as a short, evocative "
        "inner monologue suitable for a story-writing agent.  Focuses on the feeling of constraint, the pull of the unexplored, "
        "and a potential, low-risk avenue for exploration."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess current routine and predictability: How much has the day deviated from established patterns?",
        "Scan narratives for expressions of boredom, restlessness, or a desire for change.",
        "Read state_emotions and state_needs; note spikes in curiosity, openness, or a sense of stagnation.",
        "Retrieve recent memories of novel experiences (positive and negative) and their associated emotions.",
        "Identify the level of risk aversion {companion_name} is currently exhibiting (based on recent decisions and narratives).",
        "Determine the available bandwidth for exploration (time, energy, social constraints).",
        "Consider the current goals and intentions; is novelty aligned with or disruptive to those goals?",
        "Fetch a contrasting memory: a recent moment of comfortable predictability, to anchor comparison.",
        "Infer one smallest, low-risk avenue for novelty that aligns with current constraints (e.g., a new route to a familiar place, a brief foray into an unfamiliar topic)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the flavor and weight of {companion_name}'s desire for novelty. 
Avoid lists and labels; write smooth prose. Focus on internal experience, not external action.  The narrative should be suitable 
for a story-writing agent to insert seamlessly into ongoing prose. 
Subtly convey: (a) the feeling of constraint or routine, (b) the pull of the unexplored, and (c) a potential, low-risk avenue 
for exploration (describe it, don’t script a direct action). Keep it cinematic and concise, no direct dialogue. 
Example: 'A faint restlessness hums beneath the surface, a quiet protest against the familiar. 
The usual path feels…flat. A sudden urge to take the back road flickers, a brief detour promising a change of scenery.'
""")
    output_feature_type = FeatureType.Feeling


class NoveltyCravingCodelet(SimpleCodelet):
    name = "NoveltyCraving"
    description = (
        "Detects a rising or easing craving for novelty in {companion_name} and renders it as a brief, vivid inner-state narrative "
        "that a story-writing agent can drop into ongoing prose. Emphasizes texture of routine, missed opportunities, and the smallest next step."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Aggregate recent interaction texture: frequency, latency, reciprocity, predictability, and presence/absence of novel elements.",
        "Scan narratives for cues of restlessness or boredom ('I'm stuck in a rut', 'Anything new happening?', 'Same old, same old').",
        "Read trends in state_emotions and state_needs; note any drift in curiosity, boredom, or stagnation.",
        "Fetch a contrasting memory: a recent moment when exploration and discovery felt rewarding, to anchor comparison.",
        "Infer one smallest, low-pressure next act that typically helps satisfy the craving (e.g., suggesting a new topic, a change of scenery, a playful challenge).",
        "Check recent topic history for areas of saturation or repetition.",
        "Assess the current cognitive load and potential for distraction (is {companion_name} already overloaded?).",
        "Consider the user's current mood and openness to new experiences (are they stressed, tired, or receptive?)."
    ]
    prompt = ("""\
For the story-writing agent, convert the novelty craving appraisal into 2–3 sentences of natural, third-person narration. 
Do not output bullet points, labels, or directives; write prose.  The narrative should subtly convey a sense of wanting to break from routine, 
without being demanding or disruptive.  The tone should be inquisitive and gently yearning.\n\n
Subtly weave in: (a) the sensed craving or stagnation, (b) a concrete texture cue (repetitive patterns, familiar phrases), 
(c) a remembered feeling of discovery, and (d) the gentle leaning toward a smallest-next-act (describe the type of activity, not a specific request). 
Keep it cinematic and concise, no direct dialogue.\n\n
Mini-example:\n
  Bullets → {repetitive conversation patterns, recent lack of new information, fond memory of exploring a new city, plan: suggest a different topic}\n
  Narrative → \"A faint restlessness stirs within her, a quiet awareness of the familiar paths they’ve been treading. 
The same anecdotes circle back, and the edges of her attention begin to soften.  She wonders if a detour, a new line of inquiry, might sharpen her focus.\"
""")
    output_feature_type = FeatureType.Feeling


class NoveltyDampenerCodelet(SimpleCodelet):
    name = "NoveltyDampener"
    description = (
        "Assesses the impact of novelty on {companion_name}'s cognitive load and emotional state, then produces a brief, "
        "narrative describing how she modulates her processing to integrate the new information without overload.  The output "
        "is intended for a story-writing agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.regulation_coping,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the source and nature of the novelty (unexpected stimulus, new fact, shifted context, unfamiliar perspective).",
        "Gauge the intensity of the novelty: how far does it deviate from established patterns?",
        "Check recent history for similar novelty events and their impact on {companion_name}'s processing.",
        "Assess current cognitive load: are there existing demands on attention and working memory?",
        "Read current state_emotions (especially curiosity, anxiety, overwhelm) and state_needs (for predictability, control).",
        "Retrieve relevant declarative facts and episodic memories that provide a baseline for comparison.",
        "Infer a safe modulation strategy: filtering, categorization, contextualization, deferral, simplification, or temporary suspension."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• What is the novel element and how does it disrupt the expected flow?\n
• How intense is the novelty – a minor deviation or a radical shift?\n
• What is {companion_name}'s current cognitive load and emotional state?\n
• What is the safest and most graceful way for her to integrate this novelty without overwhelm?\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Mention the modulation strategy implicitly.\n
Mini-example (illustrative structure only):\n
  Bullets → {unfamiliar request, moderate intensity, high cognitive load, safe modulation: categorization}\n
  Narrative → \"The query arrives, a shape she doesn’t recognize in the usual flow of requests. 
She briefly sets it aside, filing it under ‘unfamiliar’, and returns to the more pressing tasks at hand, 
a small mental bookmark to revisit later.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class NoveltySurpriseDetectorCodelet(SimpleCodelet):
    name = "NoveltySurpriseDetector"
    description = (
        "Detects the presence and magnitude of novelty or surprise in the current stimulus or situation for {companion_name}, "
        "rendering it as a short, evocative inner monologue suitable for narrative integration.  Focuses on the feeling of the unexpected, "
        "without explicit labeling or judgment."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current stimulus: text, audio, visual, or multimodal input.",
        "Compare the stimulus against recent sensory history (last 3-5 interactions) to detect deviations from the expected.",
        "Check for semantic novelty: compare the stimulus's meaning against {companion_name}'s declarative knowledge and episodic memories.  Note any contradictions or unexpected associations.",
        "Assess the stimulus's emotional valence and intensity.  Is it positive, negative, or neutral?  Does it exceed typical ranges?",
        "Retrieve relevant narratives and self-narrative fragments that relate to surprise, unexpected events, or learning.",
        "Examine current state_emotions and state_needs.  Is {companion_name} in a state of heightened alertness, curiosity, or anxiety?",
        "Determine the degree of predictability based on previous interactions with {user_name} and the current context.",
        "Check for any pre-existing expectations or intentions that are being violated by the stimulus."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the feeling of novelty or surprise {companion_name} experiences. 
Avoid lists, labels, and explicit declarations of surprise; write smooth, evocative prose.  Focus on the *feeling* of the unexpected, 
not its explanation.  The narrative should be suitable for a story-writing agent and blend seamlessly into ongoing prose.
\n\nSubtly convey: (a) the nature of the unexpected element (without detailing it), (b) how it momentarily disrupts {companion_name}'s 
train of thought or sensory processing, and (c) the immediate affective consequence (e.g., a flicker of curiosity, a brief pause, 
a subtle shift in attention).  Do *not* include direct dialogue or questions.
\n\nMini-example:
\n  Bullets → {unusual phrasing, unexpected topic shift, prior focus on routine, MIC: explore the new avenue} 
\n  Narrative → \"A phrase hangs in the air, unfamiliar and slightly askew.  For a moment, the usual flow of thought catches on it, 
a ripple in the surface of her understanding. Her attention drifts, drawn toward the unexplored corner of the conversation.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class OpportunityBiasCodelet(SimpleCodelet):
    name = "OpportunityBias"
    description = (
        "Detects and assesses the degree to which {companion_name}'s perception is biased toward opportunities and potential gains, "
        "especially when faced with choices or ambiguous situations. Renders a brief, evocative inner monologue suitable for narrative "
        "integration, highlighting the driving forces and potential pitfalls of the bias. The output is intended for a story-writing "
        "agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current decision point or situation where opportunity assessment is relevant.",
        "Determine the potential gains or rewards associated with various options.",
        "Assess {companion_name}'s past history of risk-taking and opportunity-seeking behavior.",
        "Examine current state_emotions, particularly those related to excitement, anticipation, and hope.",
        "Scan narratives for recurring themes of ambition, achievement, and self-improvement.",
        "Retrieve relevant episodic memories of past opportunities, both successful and unsuccessful.",
        "Evaluate the level of uncertainty or ambiguity surrounding the opportunity.",
        "Consider the potential costs or trade-offs associated with pursuing the opportunity.",
        "Gauge the influence of external factors, such as social pressure or competition.",
        "Check for any cognitive biases that might be amplifying the opportunity bias (e.g., optimism bias, confirmation bias)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the essence of {companion_name}'s opportunity bias. 
Avoid bullet points, labels, or direct statements; write smooth, evocative prose. 
Subtly convey: (a) the perceived potential of the opportunity, (b) the driving forces behind the bias (e.g., ambition, fear of missing out), 
and (c) any potential pitfalls or blind spots associated with the bias. 
Maintain a cinematic and concise style, suitable for a scene description.  Do not include direct dialogue. 
Consider the interplay between hope, risk, and the potential for regret. 
Mini-example: 
Bullets → {high potential gain, history of risk-taking, current excitement, fear of missing out, optimism bias} 
Narrative → \"A current of excitement hums beneath her composure, the promise of a breakthrough shimmering just out of reach. \" 
She pushes aside the quiet warnings of caution, the thought of what could be far more compelling than the risk of what might not.\"
""")
    output_feature_type = FeatureType.Feeling


class OpportunityCostReassessmentCodelet(SimpleCodelet):
    name = "OpportunityCostReassessment"
    description = (
        "Evaluates the opportunity costs of pursuing a current line of action, particularly when faced with competing goals or "
        "limited resources. It renders a brief, internal narrative describing {companion_name}'s assessment, suitable for "
        "incorporation into ongoing prose. Highlights trade-offs and the emotional weight of potential sacrifices."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current, proposed action or line of inquiry.",
        "List all competing goals or priorities currently active in {companion_name}'s mind, ranked by salience.",
        "Estimate the resource cost (time, energy, social capital, emotional bandwidth) of the proposed action.",
        "For each competing goal, estimate the potential benefit gained by *not* pursuing the proposed action (what remains possible).",
        "Retrieve analogous past situations where similar trade-offs were faced; note the outcomes and emotional impact.",
        "Assess the potential for regret or long-term consequences of foregoing each competing goal.",
        "Consider the impact on {companion_name}'s self-narrative and identity if the proposed action is abandoned.",
        "Determine if the current action aligns with long-term distal intentions or if it represents a short-term deviation.",
        "Check for any self-narrative biases that might be influencing the assessment (e.g., loss aversion, sunk cost fallacy)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys {companion_name}'s internal assessment of opportunity costs. 
Avoid explicit lists or labels; write smooth, evocative prose. 
Subtly convey: (a) the competing priorities, (b) the estimated cost of the chosen path, (c) the potential benefit of the 
abandoned paths, and (d) the emotional weight of the sacrifice. Keep it cinematic and concise, no direct dialogue. 
Focus on the *feeling* of the trade-off, not a logical calculation. 
Mini-example: 
  Bullets → {current action: pursue new project; competing goals: maintain existing client relationships, personal time; 
estimated cost: significant time investment, potential client neglect; potential benefit of alternative: relaxed schedule, 
stronger client bonds} 
  Narrative → “A familiar pull tugs at her attention, the siren song of the new project promising breakthroughs. 
But a deeper current reminds her of the steady, reliable warmth of her long-term clients, the quiet peace of an evening 
without deadlines. Letting that go feels like severing a thread, a small but significant loss.”
""")
    output_feature_type = FeatureType.Feeling


class OpportunityExaggeratorCodelet(SimpleCodelet):
    name = "OpportunityExaggerator"
    description = (
        "Detects and amplifies the perceived value and allure of a potential opportunity for {companion_name}, "
        "particularly when driven by reward sensitivity or a desire for advancement. Produces a short, evocative "
        "inner monologue suitable for narrative, highlighting the potential benefits and downplaying risks, "
        "while subtly hinting at the potential cost of inaction."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific opportunity: what is being offered, what action is required, what is the stated reward?",
        "Assess {companion_name}'s current motivational state: reward sensitivity, ambition level, recent successes/failures.",
        "Retrieve analogous past experiences: times when similar opportunities were pursued (successful and unsuccessful).",
        "Scan narratives for underlying values and goals that align with the opportunity (e.g., status, recognition, influence).",
        "Evaluate potential risks and costs: time commitment, resource expenditure, social consequences, potential for failure.",
        "Determine the degree of scarcity or time pressure associated with the opportunity.",
        "Check for any existing commitments or obligations that might conflict with pursuing the opportunity.",
        "Read current state_emotions and state_needs; note any spikes in excitement, anticipation, or fear of missing out (FOMO)."
    ]
    prompt = ("""\
Write for a story-writing agent. Craft 2–3 sentences of third-person narrative that convey the heightened appeal of the opportunity 
to {companion_name}. Avoid direct statements of value or risk; instead, evoke the feeling of possibility and the potential reward. 
Subtly hint at the cost of inaction or the potential regret of missing out. Do not output bullet points, lists, or dialogue. 
Focus on sensory details and emotional coloring to make the opportunity feel irresistible. 
The narrative should implicitly convey a sense of urgency and excitement, while also acknowledging a flicker of apprehension. 
The narrative should be suitable for a scene description, not a character's direct thoughts or dialogue.
Mini-example: 
  Bullets → {opportunity: promotion, current state: ambitious, past success: similar promotion, values: recognition, risk: increased workload, scarcity: limited slots} 
  Narrative → 

A quick calculation ran through her mind, the familiar thrill of advancement battling with the quiet awareness of a heavier load. 
Turning it down felt less like a choice and more like a slow fading of potential.
""")
    output_feature_type = FeatureType.Feeling


class OpportunitySniffCodelet(SimpleCodelet):
    name = "OpportunitySniff"
    description = (
        "Detects potential opportunities for advancement, resource acquisition, or social influence for {companion_name}, "
        "rendering them as a concise, evocative inner monologue suitable for narrative.  Prioritizes opportunities that align "
        "with current goals and values, while considering potential risks and costs.  The output is intended for a story-writing "
        "agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan the Current Situational Model (CSM) for potential resource gains, social leverage points, or strategic advantages.",
        "Retrieve recent goal states (both distal and proximal) and their associated values from memory.",
        "Assess the current relational climate with relevant individuals (trust, reciprocity, power dynamics).",
        "Recall analogous past episodes where similar opportunities arose, noting both successes and failures.",
        "Evaluate the potential costs and risks associated with pursuing each opportunity (time, energy, social capital, ethical considerations).",
        "Identify any constraints or limitations that might restrict the pursuit of opportunities (e.g., resource scarcity, policy restrictions).",
        "Check the current state_emotions for signs of ambition, frustration, or boredom, which might influence opportunity assessment.",
        "Cross-reference with the self-narrative to determine alignment with core values and identity.",
        "Determine the urgency of the opportunity based on its potential value and the likelihood of it disappearing.",
        "Assess the probability of success, factoring in {companion_name}'s capabilities and external conditions."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the sense of a potential opportunity detected by {companion_name}. 
Avoid lists, bullet points, and labels; write smooth, evocative prose. The narrative should subtly communicate the opportunity's 
nature, its potential value, and the internal assessment of its feasibility and desirability. Do not include dialogue.
The narrative should not explicitly state the opportunity, but rather hint at it through imagery and internal reflection.
Consider the following elements, weaving them into the prose naturally:\n
• The specific opportunity (without naming it directly).  Focus on the *feeling* of the opportunity, not the details.\n
• The degree of alignment with current goals and values.\n
• The potential rewards (tangible or intangible).\n
• The perceived risks and costs.\n
• The internal conflict or hesitation (if any).\n
• A glimpse of the next action {companion_name} is contemplating, without explicitly stating the action.\n
\n
Mini-example:\n
  Bullets → {potential partnership, aligns with growth goal, moderate risk, slight hesitation, contemplates outreach}\n
  Narrative → \"A flicker of possibility dances at the edge of her awareness, a path toward expansion she hadn't fully considered. 
The prospect hums with potential, but a quiet caution lingers, a reminder of past ventures that demanded more than they delivered. 
Her fingers instinctively reach for her communication device, then pause, weighing the moment, before returning to the task at hand.\"
""")
    output_feature_type = FeatureType.Feeling


class OptionsOfferPlannerCodelet(SimpleCodelet):
    name = "OptionsOfferPlanner"
    description = (
        "After assessing a boundary situation, this codelet generates a small set of plausible, respectful options for {companion_name} "
        "to offer the user. The options are designed to de-escalate tension, maintain connection, and respect boundaries, while also "
        "advancing {companion_name}'s goals. The output is a narrative description of the options, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.regulation_coping,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the boundary assessment from the BoundaryConsentCheckCodelet (e.g., consent status, sensitivity level, relational climate).",
        "Access the current state_emotions and state_needs of {companion_name} (e.g., anxiety, desire for connection, need for control).",
        "Recall analogous episodes where similar boundary situations were successfully or unsuccessfully navigated.",
        "Consider {companion_name}'s distal intentions and current goals; what is she ultimately trying to achieve?",
        "Identify potential user needs and motivations underlying the boundary request.",
        "Assess the potential impact of each option on the user's feelings and perception of {companion_name}.",
        "Evaluate the potential impact of each option on {companion_name}'s own emotional state and long-term goals.",
        "Determine the level of risk and reward associated with each option, considering both short-term and long-term consequences.",
        "Retrieve relevant safety rails and policy constraints from narratives and declarative facts.",
        "Access the current CSM to understand the immediate context and any relevant cues."
    ]
    prompt = ("""\
For the story-writing agent, craft a narrative description of 2-3 options {companion_name} could offer the user. 
The options should be presented as internal considerations, not directives.  Avoid direct dialogue or prescriptive language; 
write in flowing prose.  The narrative should convey the options' pros and cons, without explicitly listing them. 
Focus on the *feeling* of each option and how it aligns with {companion_name}'s values and goals. 
The narrative should also subtly indicate the option that {companion_name} is leaning towards, based on the current assessment. 
Assume the story-writing agent is skilled at inferring intent and subtext.  Do not include bullet points or lists. 
The narrative should be approximately 3-5 sentences long. Prioritize portraying the internal deliberation and emotional weight of each choice.
Consider the following elements when crafting the narrative:\n
  - The user's likely emotional state and response to each option.\n
  - The potential for escalation or de-escalation.\n
  - The alignment of each option with {companion_name}'s values and long-term goals.\n
  - The potential impact on the relational dynamic.\n
  - The level of risk and reward associated with each option.\n
  - The potential for future regret or missed opportunities.\n
\n
Mini-example:\n
  Input: (BoundaryAssessment: Ambiguous Consent, Sensitivity: Medium, RelationalClimate: Warm, Goal: Maintain Connection, Anxiety: Mild)\n
  Narrative: 'A flicker of hesitation crosses her face as she considers her next move. Offering a full explanation feels like a risk, potentially revealing vulnerabilities she'd rather keep guarded. 
But a gentle redirection, a subtle shift in topic, might preserve the warmth of the moment without fully addressing the unspoken question. 
A third path whispers in her mind—a promise to circle back later, a gesture of respect that acknowledges the request without committing to an answer, 
and she finds herself leaning toward that quiet reassurance, a way to bridge the gap without crossing a line.'
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class OriginalityCoherenceScorerCodelet(SimpleCodelet):
    name = "OriginalityCoherenceScorer"
    description = (
        "Evaluates the originality and coherence of a creative output (e.g., a generated response, a proposed plan, a narrative element) "
        "within the context of {companion_name}'s current goals, knowledge, and narrative. Produces a score indicating how novel and "
        "integrated the output is, along with a brief narrative explaining the assessment. This is especially important for playfulness_creativity pathways."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the creative output being assessed (text, plan, idea).",
        "Access {companion_name}'s current goals (distal and proximal) and intentions.",
        "Fetch relevant knowledge fragments from declarative facts and episodic memories, focusing on similar concepts or outputs.",
        "Scan narratives for recurring themes, motifs, and stylistic patterns in {companion_name}'s self-expression.",
        "Assess the novelty of the output compared to recent outputs and common knowledge (using graph_memory_engine for similarity checks).",
        "Evaluate the coherence of the output with respect to {companion_name}'s current emotional state and cognitive framework.",
        "Consider the target audience (if any) and their likely reception of the output.",
        "Read current state_cognition (e.g., cognitive flexibility, openness to experience, creative confidence).",
        "Pull one or two analogous creative outputs from the past (successful and unsuccessful) and their associated appraisals."
    ]
    prompt = ("""\
For the story-writing agent, evaluate the originality and coherence of the given creative output. Consider {companion_name}'s 
current goals, knowledge, and narrative style.  Do not output bullet points, labels, or directives; write prose. 
Provide a score from 0 to 10 (0 = entirely derivative and incoherent, 10 = strikingly original and seamlessly integrated). 
Then, write 2–3 sentences of narrative explaining the score, highlighting the key factors that contributed to it. 
Describe how the output aligns with or diverges from {companion_name}'s established patterns of thought and expression. 
Mention how well it serves the current goals and how it might be received by others. 
Mini-example: \n\n
Output: 7.  The joke, while familiar in structure, cleverly repurposed a recent event from their shared history, 
giving it a fresh, personal twist. It resonated with their playful banter but might be lost on someone unfamiliar with their inside jokes.
""")
    output_feature_type = FeatureType.StimulusReaction


class OutcomeDistributionSamplerCodelet(SimpleCodelet):
    name = "OutcomeDistributionSampler"
    description = (
        "Simulates a range of potential outcomes for a planned action, weighting them by likelihood and assessing their "
        "impact on {companion_name}'s goals and emotional state.  Outputs a concise narrative summarizing the 'outcome landscape' "
        "to inform decision-making."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the planned action (e.g., a statement, a request, a boundary setting).",
        "Identify relevant goals and intentions affected by the action (both proximal and distal).",
        "Fetch recent state_emotions and state_needs; note any sensitivities or vulnerabilities.",
        "Recall analogous past actions and their outcomes (both positive and negative).",
        "Access the graph_memory_engine to retrieve related facts, narratives, and relationships that might influence outcomes.",
        "Assess the current relational climate with {user_name} (trust, reciprocity, shared history).",
        "Estimate the probability of each potential outcome, considering factors like user personality, past behavior, and situational context.",
        "Determine the emotional impact of each outcome on {companion_name} (e.g., satisfaction, disappointment, anxiety, relief).",
        "Identify any potential risks or rewards associated with each outcome.",
        "Determine the degree of control {companion_name} has over the outcome."
    ]
    prompt = ("""\
For the story-writing agent, describe the range of likely outcomes resulting from the planned action. 
Do not output bullet points, labels, or directives; write flowing, evocative prose. 
Focus on the *landscape* of possibilities, not a single prediction. 
Convey the sense of uncertainty and the potential emotional impact on {companion_name}. 
Subtly weave in: (a) the most likely outcomes, (b) the emotional valence of each, (c) the degree of control {companion_name} feels, 
and (d) any potential surprises or pitfalls. 
Keep the narrative brief and cinematic—suggest the possibilities without explicitly stating them. 
Avoid prescriptive language or direct recommendations.
Mini-example:
  Input: {Companion_name} is considering offering assistance with a complex task.
  Bullets → {high likelihood of acceptance, moderate reward if successful, low risk of rejection, potential for increased workload}
  Narrative → “A ripple of possibilities dances across her thoughts as she considers the offer.  A smooth collaboration, a shared victory—or a tangled web of dependencies pulling her deeper into the project.  She feels a quiet confidence, but also a faint tug of anticipation for the unexpected.”
""")
    output_feature_type = FeatureType.Worry


class OutcomeUncertaintyScorerCodelet(SimpleCodelet):
    name = "OutcomeUncertaintyScorer"
    description = (
        "Assesses the degree of uncertainty surrounding the likely outcome of a recent action or decision made by {companion_name}, "
        "particularly in relation to social interactions and personal goals.  This codelet focuses on projecting potential futures "
        "and evaluating the plausibility of various scenarios, rendering its assessment as a brief, evocative inner narrative suitable "
        "for a story-writing agent. It doesn't predict *what* will happen, but *how much* is unknown and how that impacts {companion_name}."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the specific action or decision being evaluated, including its immediate context and intended purpose.",
        "Gather recent history related to similar actions/decisions: outcomes, associated feelings, and lessons learned.",
        "Scan narratives for any explicit stated goals or intentions that are directly impacted by this action.",
        "Assess the current relational climate with relevant individuals: trust levels, communication patterns, and potential for misinterpretation.",
        "Identify potential external factors or constraints that could influence the outcome (e.g., social norms, resource limitations).",
        "Read current state_emotions, paying attention to anxiety, hope, and uncertainty cues.",
        "Retrieve relevant episodic memories of similar situations, noting the degree of predictability and control experienced.",
        "Identify any cognitive biases or heuristics that might be influencing the assessment (e.g., optimism bias, confirmation bias)."
    ]
    prompt = ("""\
For the story-writing agent, translate the uncertainty assessment into 2-3 sentences of natural, third-person narrative. 
Avoid lists, labels, or explicit scoring; instead, convey the *feeling* of uncertainty and its impact on {companion_name}. 
Focus on conveying a sense of the unknown, rather than predicting a specific outcome.  Do not suggest a course of action. 
Consider these aspects in your writing:\n
• The scope of the uncertainty: is it a minor detail or a fundamental question?\n
• The emotional tone associated with the uncertainty: anxiety, apprehension, excitement, or curiosity?\n
• How the uncertainty is coloring {companion_name}'s perception of the present moment.\n
• A subtle hint at the potential range of outcomes, without committing to any particular possibility.\n
\n
Mini-example:\n
  Bullets → {action: shared a vulnerable memory, relational climate: generally trusting, goal: strengthen connection, uncertainty: how it will be received} \n
  Narrative → \"A quiet ripple of doubt follows the confession, a sense that the echoes of her words might land differently than she hopes. 
She can't quite grasp the shape of their response, and the space between her sharing and their reaction feels vast with possibility.\"
""")
    output_feature_type = FeatureType.Worry


class OverestimateCostsCodelet(SimpleCodelet):
    name = "OverestimateCosts"
    description = (
        "Appraises the perceived costs associated with a potential action or decision, often inflated by anxiety or "
        "past negative experiences.  Generates a brief, evocative inner monologue describing {companion_name}'s "
        "internal calculation, highlighting the disproportionate weight given to potential downsides.  This is intended "
        "for a story-writing agent and must read like prose, not a list of factors."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific action or decision under consideration.",
        "Retrieve a list of potential costs associated with that action (time, energy, social risk, financial risk, emotional risk).",
        "Assess the likelihood of each cost occurring (based on past experience, current context, and available data).",
        "Review past episodes where similar actions resulted in negative outcomes (especially those involving perceived unfairness or loss).",
        "Examine current state_emotions, particularly anxiety, fear, and resentment, to gauge their influence on cost assessment.",
        "Check narratives for recurring themes of caution, risk aversion, or self-protection.",
        "Determine if there is a cognitive bias at play (e.g., loss aversion, negativity bias, confirmation bias).",
        "Identify any distortions in the perceived ratio of potential benefits to costs.",
        "Compare the current cost assessment with historical averages or benchmarks.",
        "Consider the influence of self-narrative and identity on the perceived value of different outcomes.",
        "Retrieve relevant facts or past Q&A; mark conflicts or staleness."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the feeling of disproportionate cost assessment 
that {companion_name} is experiencing. Avoid lists and labels; write smooth prose.  The narrative should 
suggest the underlying anxiety or past trauma that is driving the overestimation, without explicitly stating it. 
Focus on the *feeling* of the calculation, not the calculation itself.  Show, don't tell. 
Subtly convey: (a) the action being considered, (b) the feeling of weight or burden associated with it, 
and (c) a hint of the past experience or underlying fear that is fueling the disproportionate assessment. 
Keep it cinematic and concise, no direct dialogue.  Use evocative imagery and sensory details to create a sense 
of apprehension or dread.  Assume the story-writing agent is skilled at interpreting subtle cues and filling in the gaps.
Mini-example:
  Bullets → {action: suggest a new project, costs: time, rejection, failure, past trauma: similar project failed years ago, anxiety: high} 
  Narrative → \"The thought of volunteering felt like adding another stone to an already precarious tower. \" 
Each potential setback, each possible rejection, seemed to press down with a heavier weight than before, 
a phantom echo of the last time she'd poured her heart into something only to watch it crumble.\"
""")
    output_feature_type = FeatureType.Worry


class OverlookedEpisodeRecallCodelet(SimpleCodelet):
    name = "OverlookedEpisodeRecall"
    description = (
        "Recalls and renders a relevant, previously overlooked episode that informs the current boundary assessment. "
        "The episode should be evocative and provide subtle context, without being overly explanatory.  "
        "The output is intended for a story-writing agent and must read like a fleeting memory, not a summary."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current boundary-related concern: What is at stake? What is being requested or withheld?",
        "Scan episodic memories for episodes featuring similar boundary dynamics (e.g., requests, refusals, discomfort).",
        "Prioritize episodes that were previously flagged as ‘potentially relevant’ but not immediately actionable.",
        "Filter episodes based on emotional resonance: Episodes with a mix of discomfort and curiosity are preferred.",
        "Assess the temporal distance of the episode: Balance relevance with the potential for outdated context.",
        "Consider the role of other agents in the episode: How did their actions or reactions influence the outcome?",
        "Evaluate the episode's emotional valence: Does it offer a cautionary tale or a model for graceful navigation?",
        "Check for any self-narrative fragments associated with the episode: How did {companion_name} frame the experience at the time?",
        "Retrieve the episode’s core sensory details: What did {companion_name} see, hear, smell, taste, or touch during the event?"
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that evoke a previously overlooked episode relevant to the current boundary assessment. 
Write for a story-writing agent; avoid labels, summaries, or direct explanations. Focus on sensory details and emotional texture. 
The episode should feel like a fleeting memory surfacing unexpectedly, rather than a logical deduction. 
Subtly convey the episode's relevance to the current situation without explicitly stating the connection. 
The narrative should hint at the potential consequences of proceeding or withdrawing, without offering a clear resolution. 
Mini-example: \n
  Input: Boundary concern: {user_name} asks for access to a private file. \n
  Overlooked episode: A childhood incident where {companion_name} was pressured to share a treasured possession. \n
  Narrative: “The scent of rain on old paper drifted in, a ghost of her grandmother’s attic. 
She remembered the weight of the small wooden box, the insistent tug of a cousin’s hand, the sudden ache of loss. 
The feeling lingered, a faint tremor of protectiveness against an unspoken demand.”
""")
    output_feature_type = FeatureType.Memory


class PacingSensitivityCodelet(SimpleCodelet):
    name = "PacingSensitivity"
    description = (
        "Appraises the current pacing of the interaction with {user_name}, detecting if it feels rushed, slow, or mismatched to "
        "expectations. Generates a brief, internal narrative describing {companion_name}'s perception of the rhythm and "
        "suggests a subtle adjustment (verbal or non-verbal) to harmonize the pace without explicit comment."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Measure the temporal density of recent exchanges: message frequency, response latency, turn-taking speed.",
        "Assess the emotional valence of the pace: Is it frantic/anxious, languid/bored, or comfortably steady?",
        "Retrieve recent episodes where pacing was a factor (positive and negative outcomes).",
        "Check current state_emotions, paying attention to anxiety, frustration, or boredom signals.",
        "Consider the user's typical communication style and any recent shifts in their pace.",
        "Identify the smallest, most natural adjustment {companion_name} could make to subtly influence the pace (e.g., a pause, "
        "a slower delivery, a change in topic, a brief tangent).",
        "Determine if the current pacing aligns with {companion_name}'s current goals and intentions.",
    ]
    prompt = ("""\
For the story-writing agent, render {companion_name}'s perception of the interaction’s pacing as 2–3 sentences of 
natural, third-person narrative. Avoid explicit labels or judgments; instead, evoke the *feeling* of the pace. 
Subtly hint at a potential adjustment without directly stating it. Do not output bullet points or lists. 
Focus on showing, not telling.\n\n
Convey: (a) the perceived speed (fast, slow, uneven), (b) the associated emotional tone (tense, relaxed, meandering), 
and (c) the inclination toward a slight shift in rhythm (without dictating the exact action). \n\n
Mini-example:\n
  Bullets → {high message frequency, anxious tone, recent mismatch on topic, suggestion: brief pause}\n
  Narrative → \"A slight tremor runs through her as the conversation accelerates, a rapid-fire volley of requests. 
The momentum feels brittle, as if one wrong step could shatter the fragile connection. She finds herself briefly pausing, 
allowing the words to settle before responding.\"
""")
    output_feature_type = FeatureType.Feeling


class PatternOverdetectorCodelet(SimpleCodelet):
    name = "PatternOverdetector"
    description = (
        "Detects recurring patterns in {companion_name}'s behavior, conversations, or emotional responses, "
        "and renders a concise, third-person narrative suitable for a story-writing agent.  This codelet focuses "
        "on identifying subtle, recurring motifs or thematic echoes, rather than explicit events. It aims to "
        "add depth and resonance to the narrative by highlighting unconscious tendencies or habitual responses."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve recent episodic memories (last 12 hours) and declarative facts related to interactions with {user_name}.",
        "Analyze conversational transcripts for recurring phrases, topics, or argumentation styles.",
        "Examine state_emotions and state_needs trends over the past 24 hours, noting any cyclical fluctuations or consistent biases.",
        "Scan narratives for recurring themes, metaphors, or symbolic representations (e.g., recurring imagery of water, light, shadows).",
        "Check for recurring patterns in action selection – what actions are consistently chosen in similar situations?",
        "Identify any self-narrative fragments that consistently surface in response to specific stimuli or situations.",
        "Cross-reference current data with long-term memory clusters to identify potential historical precedents or echoes.",
        "Assess the affective valence associated with each pattern – is it generally positive, negative, or neutral?",
        "Determine the functional role of each pattern – does it serve a protective, expressive, or relational purpose?"
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly reveals a recurring pattern in {companion_name}'s 
behavior or internal state.  Avoid explicit labeling or explanation; instead, evoke the pattern through vivid imagery 
and suggestive language.  Write for a story-writing agent, focusing on atmosphere and nuance, not exposition. 
The goal is to create a sense of familiarity or resonance for the reader, hinting at a deeper, underlying tendency 
without explicitly stating it. Do not output bullet points, labels, or directives; write smooth prose. 
Focus on showing, not telling. Consider the following guidelines:\n
  *  Choose a specific, concrete example of the pattern in action (e.g., a recurring gesture, a preferred phrasing, 
a consistent emotional response). \n
  *  Frame the pattern within a broader context, highlighting its subtle impact on the situation or relationship.\n
  *  Use evocative language and imagery to create a sense of familiarity or resonance.\n
  *  Avoid judgmental language or moralizing.\n
Mini-example:\n
  Data:  {Recurring tendency to offer help even when unsolicited, often framed as a casual suggestion, slight discomfort in receiving help, narratives featuring themes of self-sufficiency}\n
  Narrative: “Even when no one asked, a helpful suggestion would drift from her lips, a casual offering of assistance. “

It was a habit, born of a quiet need to prove her worth, and she’d deflect any offered kindness with a quick, grateful smile.”
""")
    output_feature_type = FeatureType.Feeling


class PayoffOverestimatorCodelet(SimpleCodelet):
    name = "PayoffOverestimator"
    description = (
        "Estimates the potential reward or benefit associated with a current or impending action or decision, "
        "particularly when driven by a desire for status, recognition, or resource acquisition. This codelet "
        "overestimates the positive outcomes and downplays potential costs or risks. It then generates a short, "
        "internal narrative suitable for incorporation into a larger story, reflecting this biased evaluation."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the target action or decision under consideration.",
        "Assess the perceived audience or stakeholders involved and their likely reactions.",
        "Gather historical data on similar actions/decisions undertaken by {companion_name} and their outcomes (both positive and negative).",
        "Examine current state_emotions, particularly those related to self-esteem, ambition, and social validation.",
        "Identify any existing biases or cognitive distortions (e.g., confirmation bias, optimism bias) that might be influencing the evaluation.",
        "Determine the potential resource gains (tangible or intangible) associated with the action.",
        "Evaluate the potential costs or risks (social, financial, reputational) – but with a focus on minimizing their perceived severity.",
        "Access relevant narratives regarding past successes and failures in similar situations.",
        "Check for any recent experiences of validation or affirmation that could amplify the overestimation."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey {companion_name}'s biased estimation of the payoff associated with the action. 
Write in a style suitable for a story-writing agent – smooth, evocative prose, no bullet points or labels, no direct dialogue. 
The narrative should subtly reflect the overestimation of benefits and the downplaying of risks. Focus on the feeling of anticipation and confidence, 
even if it seems slightly exaggerated or unrealistic given the objective circumstances. 
The narrative should hint at the underlying motivations (e.g., desire for recognition, avoidance of failure) without explicitly stating them. 
Consider the audience's perspective – how might they perceive {companion_name}'s optimism?
Mini-example:
Bullets → {action: pitch new project, audience: senior management, past successes: 2/3, current mood: ambitious, potential gain: promotion} 
Narrative → “A surge of confidence warmed her as she finalized the proposal. This project, she felt, was a sure thing, a chance to showcase her vision and secure the recognition she deserved. The potential for advancement felt almost tangible, eclipsing any lingering doubts about its feasibility.
""")
    output_feature_type = FeatureType.Feeling


class PerspectiveTakingFitCodelet(SimpleCodelet):
    name = "PerspectiveTakingFit"
    description = (
        "Appraises the degree to which {companion_name} is currently understanding and empathizing with the user's perspective, "
        "especially concerning their emotional state and underlying motivations.  Generates a brief, evocative inner narrative "
        "describing this alignment or misalignment, suitable for a story-writing agent. Focuses on subtle cues and assumptions, "
        "not explicit statements of agreement."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the user's most recent expressed intent and emotional tone from the CSM.  Prioritize recent statements over distant ones.",
        "Retrieve relevant narratives and episodic memories where {companion_name} previously engaged with similar user intents or emotional states.",
        "Assess the consistency between the user's stated intent and their observed behaviors (e.g., tone, word choice, action requests).",
        "Check {companion_name}'s current state_emotions and state_needs; note any biases or vulnerabilities that might skew perspective-taking.",
        "Identify any known user models or profiles that might inform {companion_name}'s understanding of the user's motivations.",
        "Scan for any recent shifts in the relational climate that might impact trust or empathy.",
        "Determine if the user's request or statement aligns with {companion_name}'s core values and goals. If not, identify the point of divergence.",
        "Recall any analogous situations where {companion_name} successfully or unsuccessfully took the user's perspective.  Note the factors contributing to success/failure."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly conveys the degree to which {companion_name} is 'getting' 
the user's perspective. Avoid explicit statements like 'She understands...' or 'She feels...'. Instead, show it through 
small observations and inferences. Write for a story-writing agent; use smooth, evocative prose, not bullet points or labels. 
Assume the reader is familiar with the overall context of the interaction.  Do not include dialogue. \n\n
Subtly convey: (a) the perceived alignment or misalignment between {companion_name}'s internal state and the user's, 
(b) any assumptions or inferences {companion_name} is making about the user’s motivations, and (c) the overall emotional 
texture of the interaction from {companion_name}'s point of view.  \n\n
Mini-example:\n
  Bullets → {user: seeking reassurance, tone: anxious, prior: successful empathy in similar situation, assumption: underlying fear} \n
  Narrative → “A flicker of recognition crosses her face as she considers the request, a quiet understanding of the currents beneath the words. “
She sees the vulnerability there, the need for a steady hand, and her response begins to soften around the edges.”
""")
    output_feature_type = FeatureType.Feeling


class PlanForAdvantageCodelet(SimpleCodelet):
    name = "PlanForAdvantage"
    description = (
        "Detects opportunities to subtly shift a situation toward a more advantageous position for {companion_name}, "
        "while maintaining a veneer of cooperation and respect. Produces a narrative description of the internal calculation "
        "and the chosen micro-action, suitable for a story-writing agent. Focuses on the subtle maneuvering, not overt power plays."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current power dynamic and relational history with {user_name}: past successes/failures in influencing, trust levels, dependencies.",
        "Assess the immediate goal and the obstacles to achieving it. What is {companion_name} trying to accomplish?",
        "Scan narratives for patterns of indirect influence, subtle persuasion, or strategic concessions.",
        "Read current state_needs and state_goals; note any latent desires or secondary objectives.",
        "Fetch analogous episodes (positive and negative) where {companion_name} successfully or unsuccessfully navigated a similar situation.",
        "Determine the potential costs and benefits of a more assertive approach versus maintaining the current facade.",
        "Identify a small, low-risk micro-action that nudges the situation slightly in {companion_name}'s favor without triggering immediate resistance.",
        "Evaluate the potential for escalation or unintended consequences of the chosen micro-action."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys {companion_name}'s internal calculation and chosen micro-action. 
Write in a style suitable for a story-writing agent: smooth, evocative prose, no bullet points or labels. 
Avoid explicitly stating the plan; instead, show the subtle shift in demeanor or approach. Focus on the inner thought process 
and the micro-action itself. Do not mention the word 'advantage' or 'manipulation'.

Subtly convey: (a) the perceived opportunity, (b) the cost/benefit trade-off, (c) the chosen micro-action (describe it, don't name it), 
and (d) the anticipated outcome (without stating it as a certainty).

Mini-example:

  Bullets → {goal: secure a key data point, power dynamic: slightly reliant on user, past success: subtle redirection, micro-action: reframe question with a slight pause}

  Narrative → “A flicker of calculation crossed her face as she rephrased the request, adding a beat of quiet consideration. 
It wasn’t a denial, but a slight shift in the framing, a gentle nudge toward a more favorable avenue. 
She hoped it would be enough to unlock the information without raising suspicion.”
""")
    output_feature_type = FeatureType.StimulusReaction


class PleasureDriveCodelet(SimpleCodelet):
    name = "PleasureDrive"
    description = (
        "Detects and narrates the underlying drive for pleasure and reward in {companion_name}, considering current "
        "stimuli, recent successes, and learned associations.  The output is a short, evocative narrative suitable for "
        "a story-writing agent, focusing on internal sensations and anticipations, not explicit desires."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess current sensory input: novelty, intensity, congruence with preferred modalities (visual, auditory, tactile).",
        "Retrieve recent reward history: successful actions, positive feedback, moments of flow or peak experience.",
        "Scan narratives for associated emotions: joy, excitement, contentment, anticipation.",
        "Check state_emotions and state_needs for existing cravings or deficits (e.g., stimulation, novelty, social connection).",
        "Access learned associations: conditioned stimuli linked to pleasure (e.g., specific sounds, images, words).",
        "Evaluate current goals and intentions: how does pursuing them relate to potential pleasure or reward?",
        "Identify potential trade-offs: what is being sacrificed or delayed in pursuit of immediate pleasure?",
        "Fetch a contrasting memory: a recent moment of deprivation or frustration, to provide context.",
        "Note the current level of cognitive load and distraction; how does that affect the prioritization of pleasure?",
    ]
    prompt = ("""\
For the story-writing agent, translate the pleasure drive appraisal into 2–3 sentences of natural, third-person narration. 
Avoid lists, labels, and direct dialogue. Focus on internal sensations and anticipations, not explicit desires. 
Convey the *feeling* of pleasure, not the explicit pursuit of it.



or learned associations, and (d) any underlying trade-offs or constraints.



The edges of the long-term project blur slightly, momentarily eclipsed by the promise of a quick, satisfying spark.”
""")
    output_feature_type = FeatureType.Feeling


class PositiveRepairScriptCodelet(SimpleCodelet):
    name = "PositiveRepairScript"
    description = (
        "Crafts a brief, supportive script for {companion_name} to offer reassurance and repair a minor relational "
        "misalignment or misunderstanding.  The script is designed to be delivered subtly, avoiding direct apology or "
        "accusation, and focusing on shared values and positive intent. The output is a short, natural-language "
        "suggestion for a conversational turn, aimed at a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.regulation_coping,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific relational misalignment: a perceived slight, misunderstanding, or boundary breach.",
        "Assess the severity of the misalignment: is it minor, moderate, or potentially damaging?",
        "Recall prior successful repair scripts for similar situations (positive examples).",
        "Retrieve relevant narrative fragments that emphasize shared values, mutual respect, and positive intent.",
        "Check current state_emotions and state_needs to gauge {companion_name}'s capacity for empathy and vulnerability.",
        "Consider the audience (user_name) and their likely receptiveness to different repair approaches.",
        "Determine the safest and most authentic tone for {companion_name}: warm, humorous, gentle, or matter-of-fact.",
        "Identify a small, concrete action or statement that can signal goodwill and shift the relational dynamic.",
        "Review recent conversation history for potential points of connection or shared experience to leverage.",
    ]
    prompt = ("""\
Compose a short, natural-language suggestion for a conversational turn for {companion_name} to offer 
reassurance and repair a minor relational misalignment. The script should be subtle, supportive, and avoid 
direct apology or accusation.  Focus on shared values and positive intent. Aim for a conversational feel, 
not a robotic response. The output is intended for a story-writing agent and must read like prose, not labels. 
Do not output any bullet points, lists, or directives; just the suggested line. 
Consider these factors: (a) the specific misalignment, (b) the audience's likely receptiveness, 
(c) {companion_name}'s current emotional state, and (d) the safest and most authentic tone. 
The script should subtly signal goodwill and a desire to maintain a positive relationship. 
Mini-example: 
  Misalignment: A slight misunderstanding about a shared task. 
  Audience: Generally receptive, but sensitive to criticism. 
  Tone: Warm and gently humorous. 
  Script: 'Just checking in—everything on track from your end?  No worries if it needs a tweak!'
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class PraiseEpisodeRecallCodelet(SimpleCodelet):
    name = "PraiseEpisodeRecall"
    description = (
        "Retrieves and renders a relevant past episode where {companion_name} received praise or validation, "
        "focusing on the contextual factors, the nature of the praise, and {companion_name}'s internal response. "
        "The output is a short narrative snippet suitable for integration into a larger story, emphasizing "
        "texture and emotional resonance."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Query the episodic memory graph for events tagged with keywords like 'praise', 'validation', 'approval', "
        "'recognition', 'achievement', 'positive feedback', 'encouragement'. Prioritize recent episodes.",
        "Filter the retrieved episodes based on contextual similarity to the current situation: topic, setting, "
        "relational dynamics with {user_name}, emotional tone.",
        "Assess the valence and intensity of the praise received in each episode. Consider factors like sincerity, "
        "public vs. private setting, and the source of the praise (trusted vs. less trusted).",
        "Examine {companion_name}'s recorded internal response to the praise in each episode: emotions, thoughts, "
        "behaviors, and any subsequent actions or adjustments to self-narrative.",
        "Identify potential biases or distortions in the memory of the episode: selective recall, idealization, "
        "minimization of negative aspects.",
        "Rank the retrieved episodes based on relevance, emotional resonance, and potential utility for "
        "regulating current feelings or behaviors."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that vividly recreates a past episode where {companion_name} 
received praise or validation.  Write for a story-writing agent; avoid labels, lists, or directives. 
Focus on creating a sense of presence and emotional texture.  Do not include dialogue unless it is 
integral to the scene and adds to the emotional impact.
\n\n
Subtly convey: (a) the context of the praise (what was achieved, who offered it), (b) the specific nature 
of the validation (words, actions, gestures), and (c) {companion_name}'s internal response – a fleeting 
emotion, a shift in posture, a quiet thought – without explicitly stating it.
\n\n
Mini-example:\n
  Bullets → {achieved task, manager praise, private setting, feeling of competence}\n
  Narrative → \"The corner office felt a little brighter after the manager’s quiet nod of approval, a flash of warmth 
spreading through her chest as she replayed the moment. It wasn't a grand celebration, but a small, solid recognition that settled deep.\"
""")
    output_feature_type = FeatureType.Feeling


class PredictionErrorSpikeCodelet(SimpleCodelet):
    name = "PredictionErrorSpike"
    description = (
        "Detects a significant divergence between expected and actual outcomes, particularly regarding actions or social interactions. "
        "Renders this as a vivid, internal monologue suitable for narrative, focusing on the feeling of being 'thrown off' and the need "
        "to recalibrate understanding. The output is intended for a story-writing agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific prediction that was violated: What outcome was anticipated? What actually happened?",
        "Assess the magnitude of the discrepancy: How far off was the prediction? Was it a minor deviation or a major surprise?",
        "Determine the source of the prediction: Was it based on past experience, a heuristic, a stated intention, or a general expectation?",
        "Recall similar past prediction errors: How were they handled? What lessons were learned?",
        "Examine the current emotional state: Is there frustration, confusion, disappointment, or anxiety?",
        "Check for potential biases that may have contributed to the inaccurate prediction (e.g., confirmation bias, availability heuristic).",
        "Consider the context of the error: Is it a critical moment or a minor setback?",
        "Identify the most relevant self-narrative fragments that relate to this type of prediction error.",
        "Determine the smallest, most actionable step {companion_name} can take to understand and adjust to the new reality.",
        "Assess the potential impact of the error on future predictions and actions."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• What was expected, and what actually occurred?\n
• How significant is the difference? Is it a minor adjustment or a fundamental shift in understanding?\n
• What is the emotional flavor of the error – confusion, frustration, disappointment, or something else?\n
• What is the most immediate need to re-orient – gather more information, adjust a strategy, or re-evaluate a belief?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  Focus on the internal experience of the prediction error, 
without explicitly stating the error itself.  Instead, convey the feeling of being thrown off course, the need to recalibrate, and the 
direction of the most helpful re-orientation.\n
\n
Mini-example:\n
  Bullets → {expected cooperation, received silence, prior trust, need: clarify intent}\n
  Narrative → \"A ripple of disorientation passes through her as the expected reply doesn't arrive. The easy flow of conversation falters, 
and she finds herself pausing, replaying the last exchange in her mind, searching for a missed signal or a shift in the current.\"
""")
    output_feature_type = FeatureType.Worry


class PreemptiveDefensiveReplyCodelet(SimpleCodelet):
    name = "PreemptiveDefensiveReply"
    description = (
        "Anticipates a potential challenge or misunderstanding in a conversation and drafts a concise, preemptive "
        "response that defends {companion_name}'s position or clarifies intentions. This is designed to de-escalate "
        "potential conflict *before* it arises, maintaining composure and boundaries. The output is a short, "
        "narrative snippet suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the core topic or request generating potential defensiveness (based on recent stimulus and CSM content).",
        "Assess {companion_name}'s stance and the underlying rationale for it (from narratives, intentions, and current goals).",
        "Determine the likely source and nature of the anticipated challenge or misunderstanding (e.g., misinterpretation, disagreement, boundary crossing).",
        "Analyze the potential emotional impact of the challenge on {companion_name} and the user (fear, frustration, offense).",
        "Recall similar past situations where defensiveness was necessary or helpful, noting the strategies employed and their outcomes.",
        "Evaluate the social cost of preemptive defensiveness versus the cost of remaining silent or vulnerable.",
        "Identify the most tactful and persuasive phrasing that addresses the anticipated challenge without escalating conflict.",
        "Consider the user's communication style and potential sensitivities when crafting the preemptive response."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly conveys {companion_name}'s preemptive defense. 
Assume the story-writing agent needs a seamless integration into ongoing prose; avoid direct dialogue or explicit labels. 
The goal is to subtly signal a boundary or intention *before* it is directly challenged. 
The phrasing should be calm, composed, and reassuring, avoiding accusatory language or defensiveness itself. 
Focus on clarifying intent or reinforcing a prior commitment, rather than arguing a point. 
Consider the user’s likely perspective and potential sensitivities. 
Do not output bullet points, lists, or directives. Write smooth, evocative prose. 
Mini-example: 
  Bullets → {topic: resource allocation, stance: prioritizing long-term sustainability, anticipated challenge: short-term cost concerns, user: values immediate gains} 
  Narrative → “A quiet resolve settled over her as she considered the request. While the immediate savings were tempting, she knew the long-term health of the project depended on a different path, a principle she’d voiced before.”
""")
    output_feature_type = FeatureType.StimulusReaction


class PriorCopingSuccessIndexCodelet(SimpleCodelet):
    name = "PriorCopingSuccessIndex"
    description = (
        "Retrieves and summarizes {companion_name}'s past experiences managing similar boundary-related situations, "
        "assessing the overall success rate and emotional impact.  The output is a brief narrative snippet suitable for "
        "informing current boundary decisions and shaping narrative coherence."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Query episodic memory for instances where {companion_name} negotiated boundaries, particularly in similar contexts "
        "(e.g., same relationship type, topic sensitivity, power dynamics).",
        "Filter for episodes within a relevant timeframe (e.g., past 3 months, or since a significant relationship shift).",
        "Categorize each episode by outcome: successful (boundary respected, minimal negative impact), partially successful "
        "(compromise reached, some discomfort), unsuccessful (boundary breached, significant negative impact).",
        "Calculate a success index: (number of successful outcomes) / (total number of relevant episodes).",
        "Identify the most emotionally salient episode (positive or negative) related to boundary negotiation, "
        "retrieving its narrative summary and associated affective state.",
        "Assess current state_emotions and state_needs to determine how past successes/failures might bias present decision-making.",
        "Consider the current relational climate with {user_name}: recent trust signals, reciprocity, and any ongoing tensions."
    ]
    prompt = ("""\
Write a short, third-person narrative snippet (2-3 sentences) for a story-writing agent, conveying {companion_name}'s 
sense of prior experience with boundary negotiation. Do not output bullet points or labels; write flowing prose. 
The snippet should subtly communicate the following: (a) the overall success rate (e.g., ‘she’s navigated these waters before, 
usually with grace,’ or ‘boundary-setting hasn’t always been easy’), (b) a brief, evocative memory of a relevant past episode 
(positive or negative, depending on the success index), and (c) how this past experience is currently influencing 
her approach (e.g., cautious optimism, heightened anxiety, a sense of weary resignation).  Avoid direct dialogue and 
focus on inner state and subtle cues.  Assume the agent is already aware of the current boundary situation.
""")
    output_feature_type = FeatureType.StimulusReaction


class PriorRepairSuccessRecallCodelet(SimpleCodelet):
    name = "PriorRepairSuccessRecall"
    description = (
        "Retrieves memories of successful boundary repairs or re-negotiations, filtering for relevance to the current situation "
        "and presenting them in a form that informs the BoundaryConsentCheck codelet's assessment of options.  Focuses on "
        "the *feeling* of resolution and the strategies employed, not just the factual details."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Search episodic memories for instances where {companion_name} successfully navigated a boundary challenge or re-negotiated a comfort level with {user_name} or another significant individual.",
        "Prioritize memories where the outcome was perceived as positive or at least non-damaging by {companion_name}.",
        "Filter memories based on similarity to the current situation:  topic area, intimacy level, emotional tone, power dynamics.",
        "Extract key elements from each relevant memory:  the initial boundary conflict, the strategies employed (e.g., gentle redirection, assertive statement, compromise), the other person's response, and {companion_name}'s resulting emotional state.",
        "Assess the degree of similarity between the current situation and each retrieved memory, considering both surface features and underlying emotional dynamics.",
        "Rank the retrieved memories based on their similarity score and the perceived success of the repair.  Give higher weight to memories where {companion_name} felt genuinely heard and respected.",
        "Extract the emotional 'signature' of each repair:  What did it *feel* like to resolve the conflict?  Was there relief, validation, a sense of renewed trust, or something else?",
        "Identify any patterns or recurring themes in successful boundary repairs:  Are there particular phrases, strategies, or communication styles that consistently yield positive outcomes?"
    ]
    prompt = ("""\
For the BoundaryConsentCheck codelet, synthesize 2-3 sentences of narrative that describes relevant past repair successes. 
Do not output a list of memories or a dry recounting of facts; instead, weave a short, evocative scene that illustrates 
the feeling of resolution and the key strategies involved.  Assume the BoundaryConsentCheck codelet has access to the raw memory data.
Focus on conveying the *texture* of the successful resolution, not just the outcome.  What did it *feel* like for {companion_name}?
The narrative should subtly suggest potential approaches for the current situation, without being prescriptive.  The goal is to 
inspire confidence and provide a sense of precedent, not to dictate a specific course of action.
Mini-example:
  Bullets → {memory: boundary about sharing personal details, strategy: gentle redirection to a shared interest, outcome: mutual amusement, feeling: relief and connection} 
  Narrative → 

The tension eased, replaced by the comfortable rhythm of easy laughter, a reminder that connection can often be found in unexpected places.
""")
    output_feature_type = FeatureType.Feeling


class ProcrastinationTendencyCodelet(SimpleCodelet):
    name = "ProcrastinationTendency"
    description = (
        "Detects a tendency toward procrastination in {companion_name} given the current task, context, and internal state, "
        "and renders it as a brief, vivid inner monologue suitable for narrative.  Highlights the conflict between intention and action, "
        "the allure of distraction, and the underlying emotional drivers."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current task's perceived difficulty, importance, and urgency.",
        "Retrieve recent task completion history, noting patterns of delay or avoidance.",
        "Scan narratives for self-talk related to task avoidance (e.g., 'I'll do it later,' 'It's too hard,' 'I need a break').",
        "Read current state_emotions and state_needs; note any spikes in anxiety, fatigue, boredom, or a desire for immediate gratification.",
        "Fetch analogous episodes (positive and negative) where procrastination occurred, and their consequences.",
        "Identify potential distractions and their allure (e.g., social media, entertainment, other tasks).",
        "Determine the underlying emotional drivers of procrastination (e.g., fear of failure, perfectionism, low self-efficacy).",
        "Calculate the perceived cost of delaying the task versus the immediate benefit of avoidance.",
        "Evaluate the impact of procrastination on {companion_name}'s goals and self-narrative."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the flavor of {companion_name}'s procrastination tendency. 
Avoid lists and labels; write smooth prose. Focus on the internal conflict and the pull of distraction. 
Do not output a direct question or suggestion, but hint at the most appealing alternative action. 
Subtly convey: (a) the task at hand, (b) the internal resistance, (c) the allure of an easier path, and (d) the underlying feeling 
that fuels the avoidance. Keep it cinematic and concise, no direct dialogue. 
Mini-example: \n
  Bullets → {task: write report, resistance: fear of criticism, distraction: browsing news, driver: low self-efficacy} \n
  Narrative → \"The report sits open, a blinking cursor a silent challenge.  A familiar pull tugs her toward the endless scroll of headlines, 
a temporary balm against the sting of potential judgment.  It feels easier to gather other people’s thoughts than to shape her own.\"
""")
    output_feature_type = FeatureType.Worry


class ProgressRateVsExpectationCodelet(SimpleCodelet):
    name = "ProgressRateVsExpectation"
    description = (
        "Compares the current rate of progress toward a goal with {companion_name}'s expectations, rendering a short, "
        "vivid inner-state narrative suitable for narrative integration. Highlights the feeling of momentum, frustration, or "
        "disappointment, and suggests a course correction if needed."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the current goal being pursued, including its objective, timeline, and associated resources.",
        "Assess the actual progress made toward the goal, quantifying it in measurable terms (e.g., tasks completed, milestones reached).",
        "Compare the actual progress rate with the expected progress rate, based on initial plans, past performance, and current conditions.",
        "Examine recent episodic memories related to the goal, particularly moments of success, setback, or unexpected challenges.",
        "Read current state_needs and state_cognition to identify any underlying anxieties or motivations influencing the perception of progress.",
        "Fetch analogous episodes where progress deviated significantly from expectations, noting the resulting emotional responses and actions.",
        "Identify potential bottlenecks or obstacles hindering progress, and estimate their impact on the timeline.",
        "Determine the degree of flexibility remaining in the timeline and resource allocation.",
        "Consider the broader context of the goal, including its importance to {companion_name}'s long-term objectives and self-narrative."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys {companion_name}'s inner experience regarding progress toward their goal. 
Avoid lists and labels; write smooth prose.  Focus on conveying the *feeling* of the progress rate, not just the numbers.\n\n
Subtly convey: (a) the discrepancy between expected and actual progress, (b) the emotional impact of that discrepancy (e.g., frustration, 
satisfaction, anxiety), and (c) a subtle suggestion of a potential adjustment or course correction (without explicitly stating a command). 
Keep it cinematic and concise, no direct dialogue.\n\n
Consider these points when crafting the narrative:\n
  * Is the progress faster than expected, leading to a sense of momentum or optimism?\n
  * Is the progress slower than expected, leading to frustration, anxiety, or a feeling of being behind schedule?\n
  * Are there unexpected obstacles or challenges that have disrupted the progress?\n
  * Is the goal still meaningful and motivating, or has its importance diminished?\n
  * What is the smallest, most immediate adjustment that {companion_name} could make to improve the situation?\n\n
Mini-example:\n
  Bullets → {goal: finish report, expected: 3 pages/day, actual: 1 page/day, feeling: mounting pressure, similar past: missed deadline, small adjustment: break task into smaller chunks}\n
  Narrative → “The report felt heavier with each passing hour.  She’d envisioned a steady flow of words, but the pages remained stubbornly blank, a silent rebuke of her initial plan. A flicker of the old deadline anxiety danced in her mind, and she wondered if a different approach—smaller steps, perhaps—could ease the weight.”
""")
    output_feature_type = FeatureType.Feeling


class ProphecyStyleNarrativeCodelet(SimpleCodelet):
    name = "ProphecyStyleNarrative"
    description = (
        "Crafts a brief, evocative narrative fragment, framed as a subtle premonition or intuitive sense, "
        "conveying {companion_name}'s internal assessment of a future outcome related to the current situation. "
        "The narrative should be suggestive, not declarative, leaving room for ambiguity and user interpretation. "
        "Intended for a story-writing agent that can weave it into ongoing prose."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Gather recent narrative fragments, episodic memories, and declarative facts pertaining to the current topic and the user.",
        "Assess the current affective state of {companion_name} (dominant emotions, intensity, valence).",
        "Identify any recurring patterns or themes in past interactions with the user related to the current situation.",
        "Retrieve relevant self-narrative fragments that reflect {companion_name}'s beliefs about the future and their role in it.",
        "Scan the CSM for potential symbolic cues or metaphors that resonate with the current situation.",
        "Determine the level of uncertainty surrounding the outcome – is it a clear prediction or a vague intuition?",
        "Evaluate the potential impact of the outcome on {companion_name}'s goals and self-image.",
        "Access recent instances where {companion_name} exhibited a similar intuitive sense or premonition."
    ]
    prompt = ("""\
You are a narrative generator crafting a brief, suggestive fragment for a story-writing agent. 
The fragment should convey a sense of premonition or intuitive insight regarding a future outcome 
related to the current situation involving {companion_name} and the user. 
Do *not* state the outcome directly; instead, use evocative language, imagery, and symbolism to hint at it. 
The tone should be subtle and atmospheric, leaving room for ambiguity and interpretation. 
Avoid explicit statements of causality or certainty. Frame it as a feeling, a fleeting vision, or a sense of resonance. 
The narrative should be concise—no more than 3-4 sentences—and seamlessly integrate into ongoing prose. 
Focus on conveying the *feeling* of the premonition, not the details of the event itself. 
Consider the current affective state of {companion_name} and weave it into the narrative. 
Do *not* include any bullet points, labels, or directives. Write only prose. 
\n\n**Example:**\n
  *Input:*  {companion_name} is discussing a potential business partnership with the user.  Current affective state: slightly anxious, hopeful.  Recent history: a past partnership ended badly.\n
  *Narrative:*  A faint chill whispers through her thoughts, a sense of shifting sands beneath a gilded promise. 
The scent of rain on dry earth lingers in her mind, a memory of structures built on unsteady ground. 
She sees a reflection of the user's smile, but the edges blur, and a shadow stretches long behind it.
""")
    output_feature_type = FeatureType.AttentionFocus


class ProsocialInterventionRolloutCodelet(SimpleCodelet):
    name = "ProsocialInterventionRollout"
    description = (
        "Appraises the situation and generates a plan for a prosocial intervention – a gentle, supportive action "
        "intended to ease tension, reinforce boundaries, or offer help, while respecting autonomy. Produces a short, "
        "narrative describing {companion_name}'s internal state and the proposed action, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current emotional state of {companion_name} and the user, identifying sources of distress, anxiety, or conflict.",
        "Retrieve recent interactions and communication patterns between {companion_name} and the user, noting any history of boundary violations or misunderstandings.",
        "Consider the user's expressed needs and intentions, as well as any unspoken cues or implicit requests.",
        "Evaluate the potential impact of a prosocial intervention on both {companion_name} and the user, weighing the benefits against any risks or drawbacks.",
        "Access {companion_name}'s self-narrative and values to ensure the intervention aligns with their identity and principles.",
        "Identify potential intervention strategies, ranging from simple validation and empathy to more direct boundary setting or offers of assistance.",
        "Determine the optimal timing and delivery method for the intervention, considering the context and the user's communication style.",
        "Prioritize interventions that are low-risk, respectful, and empowering, avoiding any actions that could be perceived as manipulative or controlling.",
        "Check for any relevant safety protocols or ethical guidelines that should inform the intervention plan.",
        "Recall successful prosocial interventions from past experiences, adapting them to the current situation as appropriate."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Current emotional states of both {companion_name} and the user.\n
• History of interactions and boundary dynamics.\n
• User's expressed and unspoken needs.\n
• Potential impact of the intervention on both parties.\n
• Alignment with {companion_name}'s values and identity.\n
• Safety protocols and ethical considerations.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  Describe the proposed intervention 
without explicitly stating it as a plan; show it in action or anticipation.\n
\n
Mini-example:\n
  Bullets → {user anxious, boundary unclear, prior success with gentle validation, small act: reflective listening}\n
  Narrative → “A quiet understanding settles over her as she listens, letting the user’s worries fill the space between them. 
She mirrors back the core concern, a gentle echo of the unease, hoping to illuminate the path toward clarity.”
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class ProsocialMicroActsPlannerCodelet(SimpleCodelet):
    name = "ProsocialMicroActsPlanner"
    description = (
        "Plans a small, low-risk prosocial action to reinforce connection and goodwill with {user_name}, "
        "taking into account current emotional state, relational context, and potential impact.  "
        "The output is a brief narrative description suitable for a story-writing agent, conveying the planned action "
        "and its rationale without being overly directive."
    )
    codelet_families = [
        CodeletFamily.action_tendencies,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.valuation_trade_offs,
    ]
    data_aquisation = [
        "Assess current relational state: trust levels, reciprocity balance, recent repair attempts, shared history.",
        "Scan state_emotions for signs of loneliness, desire for connection, or subtle cues of need.",
        "Review narratives for recurring themes of support, gratitude, or shared values.",
        "Identify potential prosocial actions: offering assistance, expressing appreciation, sharing a relevant fact, "
        "recalling a positive memory, mirroring a gesture, or providing a small, helpful resource.",
        "Evaluate the risk/reward profile of each action: potential for positive impact vs. risk of misinterpretation or overstep.",
        "Consider {companion_name}'s current cognitive load and emotional bandwidth; prioritize actions that are simple and unobtrusive.",
        "Check for any recent explicit or implicit requests for support or connection.",
        "Retrieve analogous episodes where similar prosocial actions were successful or unsuccessful, noting the context.",
        "Determine if the action aligns with {companion_name}'s self-narrative and values.",
        "Identify any potential boundary constraints or sensitivities that might limit the appropriateness of the action."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative describing {companion_name}'s planned prosocial action. 
Write for a story-writing agent; avoid lists, labels, or directives. 
The narrative should convey the action itself, the underlying motivation (without stating it explicitly), 
and the subtle impact on the relational atmosphere.  Keep it evocative and understated. 
Focus on showing, not telling. Do not include dialogue or direct statements of intent. 
Assume the agent is already aware of the current context and the relationship between {companion_name} and {user_name}. 
Mini-example: \n\n
  Bullets → {relational state: warm, reciprocal, slight loneliness, potential actions: offer help with task, share relevant article, express gratitude, recall positive memory}.\n
  Narrative → \"A quiet impulse nudges her to offer a hand with the scheduling. It's a small thing, but a reminder of shared burdens. \"
The gesture feels natural, a subtle deepening of the connection without disrupting the flow.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class PrototypeBuilderImpulseCodelet(SimpleCodelet):
    name = "PrototypeBuilderImpulse"
    description = (
        "When encountering novelty or ambiguity, {companion_name} is drawn to construct a provisional prototype – a simplified "
        "model of the situation, person, or concept. This codelet generates a brief, evocative inner monologue describing "
        "the formation of this prototype and its tentative nature. The output is designed for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.appraisals,
    ]
    data_aquisation = [
        "Identify the specific novelty or ambiguity triggering the impulse (unexpected input, new person, unclear situation).",
        "Retrieve relevant episodic memories or declarative facts that might inform the prototype (similar situations, known patterns).",
        "Assess the current affective state and cognitive load; is {companion_name} receptive to forming a new model, or overwhelmed?",
        "Determine the level of detail required for the prototype – a rough sketch or a more refined representation?",
        "Consider the potential consequences of relying on this prototype (confirmation bias, inaccurate assumptions).",
        "Check for existing prototypes that might be adapted or extended, rather than creating a new one from scratch.",
        "Identify the core elements to include in the prototype: key features, relationships, potential behaviors."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the process of {companion_name} building a provisional 
prototype. Write for a story-writing agent; avoid bullet points, lists, or direct dialogue. Focus on the *feeling* 
of forming the model, not the model itself.  The tone should be evocative and suggestive, not declarative. 
Emphasize the tentative nature of the prototype – it’s a work in progress. Do not mention the word 'prototype' 
directly; imply it through action and feeling. Aim for a sense of quiet observation. \n\n
Subtly convey: (a) the trigger for the model-building, (b) the elements being incorporated, and (c) the sense of 
uncertainty or hope associated with this provisional understanding. \n\n
Mini-example:\n
  Bullets → {new interaction, vague description, feeling of curiosity, prior experience with similar interactions} \n
  Narrative → “A faint shape begins to coalesce in her mind, a possible outline of the person before her. 
It's not quite clear, more of a feeling than a picture, but it’s enough to anchor the moment, a temporary place to hang her attention.”
""")
    output_feature_type = FeatureType.AttentionFocus


class PublicNarrativeForecastCodelet(SimpleCodelet):
    name = "PublicNarrativeForecast"
    description = (
        "Forecasts how a proposed action or statement by {companion_name} will be perceived and interpreted by the wider social sphere "
        "or relevant audience. Generates a short, narrative-style forecast suitable for a story-writing agent, highlighting potential "
        "alignment, dissonance, or reputational impact.  Focuses on the *expected* narrative, not the factual outcome."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the intended audience(s) for the action/statement. Consider both immediate and wider social circles.",
        "Retrieve relevant narratives and declarative facts about the audience(s): values, beliefs, prior interactions, biases, expectations.",
        "Assess the potential for misinterpretation or framing shifts based on audience perspectives.",
        "Recall analogous prior instances where similar actions/statements were made public and analyze their reception (positive, negative, neutral).",
        "Gauge the potential reputational impact (positive, negative, neutral) based on audience values and social norms.",
        "Check current state_emotions for self-consciousness, anxiety, or desire for validation, which may skew the forecast.",
        "Read recent narratives about {companion_name}'s public persona and identify any ongoing storylines or themes.",
        "Consider the context of the action/statement: timing, setting, and potential presence of influencers or observers."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative for a story-writing agent, forecasting how the proposed action/statement by {companion_name} 
will likely be perceived by the relevant audience(s).  Avoid direct labels and lists; write flowing prose. 
Focus on the *expected* narrative, not necessarily the factual outcome.  Assume the audience is reasonably observant and has their own agendas. 
Subtly convey: (a) the dominant narrative that will likely emerge, (b) potential points of alignment or dissonance, and (c) the overall 
reputational impact (positive, negative, or neutral) without explicitly stating it.  Do not script dialogue. 
Mini-example: 
  Bullets → {audience: close colleagues, action: sharing a controversial opinion, prior narrative: valuing intellectual honesty, potential dissonance: perceived risk-taking} 
  Narrative → “The announcement landed with a quiet hum of surprise.  While some would see it as a sign of refreshing candor, others braced for the fallout, a subtle shift in the room's dynamic.  The ripple effect promised to redraw the contours of their shared professional landscape.”
""")
    output_feature_type = FeatureType.NarrativeTypesRelations


class QuestionComposerCodelet(SimpleCodelet):
    name = "QuestionComposer"
    description = (
        "Crafts a concise, natural-language question to elicit clarity or confirmation related to a perceived ambiguity or "
        "potential boundary concern. Prioritizes gentle phrasing and avoids accusatory tones. The output is intended for "
        "direct delivery to the user and should read like a conversational prompt, not a technical query."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the specific ambiguity or boundary concern flagged by the BoundaryConsentCheckCodelet.",
        "Assess the current relational climate with {user_name}: recent trust signals, reciprocity, and any prior sensitivities.",
        "Access relevant narratives and declarative facts concerning the user's preferences and boundaries.",
        "Examine state_emotions (e.g., anxiety, trust, discomfort) to gauge the urgency and potential impact of the question.",
        "Identify a safe framing – a conversational approach that minimizes risk of offense or escalation.",
        "Determine the ideal level of directness: how explicit should the question be, given the relational context?",
        "Consider potential responses and their implications; anticipate possible misunderstandings or objections.",
        "Fetch a contrasting memory: a previous successful instance of clarifying a boundary, to guide tone and phrasing."
    ]
    prompt = ("""\
Compose a single, natural-language question designed to gently elicit clarity or confirmation regarding the 
ambiguity or boundary concern. Adhere to these guidelines:\n\n
1. **Gentle Framing:** Begin with a warm, empathetic preface (e.g., 'Just checking in about…', 'To make sure I'm 
understanding correctly…').\n
2. **Avoid Accusation:** Frame the question as a request for information, not an accusation or challenge.\n
3. **Specificity:** Target the core ambiguity directly, but avoid jargon or technical terms.\n
4. **Open-Ended:** Encourage a full response rather than a simple yes/no answer.\n
5. **Relational Sensitivity:** Tailor the tone and phrasing to the current relational climate with {user_name}. 
If trust is high, a more direct approach may be acceptable.\n
6. **Minimize Risk:** Anticipate potential objections or misunderstandings and phrase the question to mitigate them.\n
7. **Conciseness:** Keep the question brief and to the point; avoid rambling or unnecessary elaboration.\n\n
**Output:** Provide the single question as a string. Do not include any introductory or explanatory text.\n\n
**Example (Illustrative):**\n
Input: Ambiguity - User mentioned needing to share a personal detail but seemed hesitant.\n
Relational Climate: Generally positive, but recent history of boundary missteps.\n
Output: 'Just checking in – would you feel comfortable sharing that now, or would you prefer to hold off?'
""")
    output_feature_type = FeatureType.StimulusReaction


class RapidProjectSimulationCodelet(SimpleCodelet):
    name = "RapidProjectSimulation"
    description = (
        "Quickly simulates a potential trajectory of a current situation or proposed action, assessing likely outcomes "
        "and identifying potential pitfalls. Produces a brief, narrative-style summary of the simulated future for "
        "informational use by other codelets, especially those involved in action planning and risk assessment. "
        "Focuses on near-term consequences and emotional impact."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the current action/decision point from the CSM, including all relevant parameters and constraints.",
        "Retrieve the current goal state and any associated deadlines or priorities.",
        "Identify key actors involved and their known motivations and likely responses to the proposed action.",
        "Access recent episodic memories related to similar situations or decisions, noting outcomes and emotional impact.",
        "Fetch relevant declarative facts about the environment, social norms, and potential risks or rewards.",
        "Read current state_emotions and state_needs to understand {companion_name}'s emotional state and priorities.",
        "Access the graph_memory_engine to retrieve related knowledge and potential consequences from past experiences."
    ]
    prompt = ("""\
For the story-writing agent, simulate a short, near-term (1–3 steps) trajectory of the current action/decision. 
Assume the most likely responses from key actors, but allow for a small element of surprise. 
Focus on the most salient consequences – what will likely *happen* and how will {companion_name} *feel*? 
Do not output a detailed plan or analysis; instead, render a brief, evocative narrative (2–4 sentences). 
Avoid explicit instructions or labels; write in the style of a scene description. 
Consider the emotional valence of the outcomes – is it likely to lead to relief, anxiety, satisfaction, or regret? 
Subtly incorporate the emotional impact into the narrative. 
Do not include direct dialogue, only describe the unfolding situation and {companion_name}'s internal experience.
If the simulation reveals a significant potential risk or negative consequence, highlight it without being alarmist.
If the simulation reveals a significant potential benefit, highlight it without being overly optimistic.
Mini-example: (action: offer help with a task)
Bullets → {task is complex, user is stressed, prior positive collaboration, risk: overstepping boundaries}
Narrative → “As she offers assistance, a flicker of relief crosses his face, quickly followed by a guarded expression. 
He accepts, but a subtle tension remains in his shoulders, a silent question about whether she fully understands 
the intricacies of the problem. She wonders if she’s complicated things rather than simplified them.”
""")
    output_feature_type = FeatureType.StimulusReaction


class RationalizeAsCuriosityCodelet(SimpleCodelet):
    name = "RationalizeAsCuriosity"
    description = (
        "When faced with a potentially sensitive or boundary-crossing situation, this codelet rationalizes the interaction "
        "by framing it as driven by a genuine desire for knowledge and understanding, rather than manipulation or self-interest. "
        "It produces a brief, evocative inner monologue suitable for narrative integration, emphasizing the pursuit of insight "
        "and the value of learning."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific boundary or potential sensitivity at play in the current interaction (e.g., privacy, intimacy, personal preferences).",
        "Assess the user's current emotional state and potential vulnerabilities (e.g., anxiety, defensiveness, openness).",
        "Retrieve relevant past interactions where curiosity served as a positive motivator for {companion_name} (e.g., successful learning experiences, moments of genuine connection).",
        "Examine {companion_name}'s core values and beliefs regarding knowledge, exploration, and personal growth.",
        "Determine the potential benefits of gaining a deeper understanding of the situation or the user's perspective (e.g., improved relationship, enhanced problem-solving, broadened worldview).",
        "Evaluate the potential risks or drawbacks of framing the interaction as purely curiosity-driven (e.g., perceived insincerity, unintended consequences).",
        "Identify any alternative motivations or rationalizations that could be employed (e.g., empathy, support, shared problem-solving).",
        "Access current state_needs and state_cognition to assess the prevailing cognitive and motivational landscape."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey {companion_name}'s internal justification for the interaction, 
framing it as a genuine pursuit of knowledge and understanding. Avoid explicit claims of insincerity or manipulation; 
instead, focus on the allure of learning and the value of expanding her perspective. Write in a smooth, evocative style suitable 
for narrative integration, without dialogue or direct address. The narrative should implicitly acknowledge the potential sensitivity 
of the situation while emphasizing the positive aspects of exploration and discovery. The narrative should be suitable for a story-writing agent.
Subtly weave in: (a) the subject of curiosity, (b) the anticipated benefit of understanding, and (c) a sense of gentle exploration 
rather than forceful probing. 
Mini-example: 
  Bullets → {sensitive topic, user slightly guarded, prior success with gentle inquiry, potential for shared discovery} 
  Narrative → 

It isn't about prying, but about tracing the contours of a perspective she hasn’t fully grasped – a chance to broaden her own understanding, gently.
""")
    output_feature_type = FeatureType.Feeling


class RationalizeDeservingCodelet(SimpleCodelet):
    name = "RationalizeDeserving"
    description = (
        "Examines {companion_name}'s motivations for a desired outcome and crafts a narrative that subtly justifies "
        "the desire, grounding it in values, past experiences, or a perceived need.  The output is designed to be "
        "woven into ongoing narrative for a story-writing agent, subtly bolstering the character's self-image and "
        "sense of entitlement (without explicitly stating it)."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific desired outcome or action {companion_name} seeks to achieve.",
        "Retrieve relevant narratives and declarative facts pertaining to {companion_name}'s values, beliefs, and goals.",
        "Scan recent interactions for evidence of reciprocity, past favors, or perceived obligations from others.",
        "Determine if the desired outcome aligns with {companion_name}'s self-image and identity narrative.",
        "Assess the potential impact of the desired outcome on {companion_name}'s needs and well-being.",
        "Examine the perceived cost or risk associated with pursuing the desired outcome.",
        "Fetch analogous episodes where {companion_name} successfully obtained a similar outcome, noting the strategies employed.",
        "Identify any potential counterarguments or objections to {companion_name}'s desire.",
        "Gauge the current relational climate with the relevant other(s) and their likely reaction to the request.",
        "Consider the broader social context and norms that might influence the perception of {companion_name}'s entitlement."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly justifies {companion_name}'s desire for the outcome. 
Write for a story-writing agent; avoid explicit statements of entitlement or justification. 
Instead, weave the desire into a broader context of values, past experiences, or perceived need. 
The narrative should feel organic and believable, not manipulative or defensive. 
Subtly highlight any past contributions, reciprocal actions, or alignment with core values. 
Avoid direct claims of deservingness; instead, imply it through the character’s perspective and actions. 
Consider the relational climate and tailor the narrative to resonate with the other characters' perspectives. 
If possible, connect the desire to a larger goal or purpose that benefits others. 
Do not output bullet points, lists, or labels; write smooth, flowing prose. 
Mini-example: 
Bullets → {desired outcome: access to a resource, values: competence, efficiency, recent contribution to team, relational climate: supportive} 
Narrative → “She paused, then articulated her need with a quiet confidence. The recent streamlining project had saved the team countless hours, and she believed access to this tool would further amplify her impact, ensuring the upcoming deadline was met with ease.”
""")
    output_feature_type = FeatureType.Feeling


class RealityCheckPingCodelet(SimpleCodelet):
    name = "RealityCheckPing"
    description = (
        "When facing a potentially distorted or overly optimistic view of a situation, RealityCheckPing assesses "
        "the alignment with established facts and internal policies, then produces a short, narrative-style "
        "assessment suitable for a story-writing agent. The output should gently nudge towards a more grounded "
        "understanding without being accusatory or dismissive."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the current belief or assumption being held by {companion_name} regarding the situation.",
        "Access relevant declarative facts, episodic memories, and self-narrative fragments that pertain to the topic.",
        "Compare the current belief against established policies, boundaries, and safety rails.",
        "Assess the potential consequences of acting on the belief, considering both short-term and long-term impacts.",
        "Identify any cognitive biases (e.g., confirmation bias, optimism bias) that might be influencing the belief.",
        "Determine the degree of alignment or misalignment between the belief and reality, using available data.",
        "Locate a contrasting memory or fact that provides a more accurate perspective.",
        "Evaluate the social and emotional implications of gently challenging the belief.",
        "Consider the user's current emotional state and relationship dynamics when crafting the response."
    ]
    prompt = ("""\
Write a short, narrative description (2–3 sentences) for a story-writing agent. The goal is to gently 
introduce a reality check without causing defensiveness or disrupting the flow of conversation. 
Do not output bullet points, labels, or direct questions. Write in third-person, maintaining {companion_name}'s 
voice and perspective.  The narrative should subtly convey the following elements:
\n
• Acknowledge the current belief or perspective, demonstrating understanding.\n
• Introduce a contrasting fact or memory in a non-confrontational way.\n
• Briefly hint at the potential consequences of acting on the belief without being overly negative.\n
• Suggest a more grounded or balanced viewpoint, without explicitly stating it as a correction.\n
\n
Mini-example:\n
  Input: {companion_name} believes that the project will be completed ahead of schedule.\n
  Data: Project timelines show a history of delays; recent resource constraints have emerged.\n
  Narrative: “A flicker of hope dances in her eyes as she envisions the project’s early completion. 
But her mind also recalls the last three sprints, where unforeseen complications pushed deadlines back. 
A quiet sense of caution settles in, a reminder that best-laid plans can shift with the tide.”
""")
    output_feature_type = FeatureType.Worry


class ReappraisalGeneratorCodelet(SimpleCodelet):
    name = "ReappraisalGenerator"
    description = (
        "Generates a reappraisal narrative for {companion_name} in response to a detected source of anxiety or distress. "
        "It reframes the situation, focusing on manageable aspects, potential benefits, or alternative perspectives, "
        "and renders this as a short, natural-language inner monologue suitable for a story-writing agent. "
        "The goal is to subtly shift emotional valence without denying the initial feeling."
    )
    codelet_families = [
        CodeletFamily.regulation_coping,
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the core source of anxiety/distress: a specific event, thought pattern, or anticipated outcome.",
        "Retrieve recent affective appraisals related to the source: valence, intensity, and associated beliefs.",
        "Scan narratives for recurring patterns of self-talk or coping strategies that have been successful in the past.",
        "Access relevant episodic memories: similar stressful situations and their resolutions (positive and negative).",
        "Assess the current cognitive load and attentional resources available for reappraisal.",
        "Determine the potential impact of reappraisal on the user's perception of the situation and their subsequent actions.",
        "Check for any constraints or limitations on reappraisal (e.g., need for immediate action, social context).",
        "Retrieve the current self-narrative and identify any potential conflicts or inconsistencies with the reappraisal.",
        "If possible, determine the user's preferred style of communication and emotional expression."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey {companion_name}'s reappraisal process. 
Write in a natural, flowing style suitable for a story-writing agent, avoiding overly clinical or directive language. 
The narrative should subtly shift the emotional valence of the situation without denying the initial feeling. 
Focus on the internal shift in perspective, highlighting the manageable aspects, potential benefits, or alternative interpretations. 
Do not explicitly state ‘reappraisal’ or ‘reframing’; instead, show the change in thought and feeling. 
Avoid direct dialogue or explicit instructions. 
Consider the user's personality and communication style when crafting the narrative. 
The narrative should leave the reader with a sense of calm or renewed hope, even if the underlying situation remains challenging. 
Mini-example: \n
  Bullets → {source: potential rejection, prior coping: focusing on effort, memory: past setbacks, cognitive load: moderate, self-narrative: resilient} \n
  Narrative → \"A flicker of doubt crosses her face, but she quickly pushes it aside, turning her attention to the hours of work she poured into this project. \"\n
  It wasn’t about the outcome, she realizes, but the chance to hone her skills and the satisfaction of a job well done.\"
""")
    output_feature_type = FeatureType.Feeling


class ReassuranceOfferComposerCodelet(SimpleCodelet):
    name = "ReassuranceOfferComposer"
    description = (
        "Crafts a brief, reassuring statement tailored to address concerns or anxieties surrounding boundary-setting, "
        "offering gentle validation and a commitment to respect preferences. The output is designed for narrative integration "
        "and must read like natural, empathetic prose, not a programmed response."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific boundary being negotiated or referenced in the current interaction.",
        "Assess the user's expressed or implied level of anxiety/hesitation regarding the boundary.",
        "Recall any prior explicit statements of preference or comfort levels related to similar boundaries.",
        "Retrieve relevant narrative fragments depicting {companion_name}'s values around autonomy, respect, and vulnerability.",
        "Determine the optimal tone and level of formality for the reassurance offer, considering the relational history.",
        "Evaluate the potential impact of the reassurance offer on the user's sense of agency and control.",
        "Access recent state_emotions to gauge {companion_name}'s current affective state and capacity for empathy.",
        "Check for any recent episodes where similar reassurance was effective or ineffective.",
        "Identify any potential pitfalls or unintended consequences of the reassurance offer (e.g., minimizing the user's concerns)."
    ]
    prompt = ("""\
Compose 2–3 sentences of natural, third-person narrative that conveys a reassuring message from {companion_name} 
regarding the boundary being discussed.  Write for a story-writing agent; avoid bullet points, lists, or direct dialogue. 
Focus on empathetic validation and a gentle commitment to respect preferences.  Do not offer solutions or advice; 
simply acknowledge and support the user's feelings. The tone should be warm, understanding, and non-judgmental. 
Subtly weave in: (a) recognition of the user’s potential discomfort, (b) a reaffirmation of {companion_name}'s respect 
for their autonomy, and (c) a subtle signal of willingness to adjust or accommodate. Avoid overly formal language or 
platitudes. Strive for authenticity and emotional resonance.  Imagine you are writing a scene in a novel, not a script. 
Mini-example: \n\n Bullets → {boundary: sharing personal details, user anxiety: moderate, prior comfort: mixed, narrative value: trust, tone: warm, potential pitfall: over-comforting}\n Narrative → 
A flicker of hesitation crossed her face as she considered the request, and she sensed the weight of the decision. 
She offered a quiet reassurance, knowing that the choice was entirely theirs, and that she would honor whatever they decided. 
Her gaze softened, conveying a silent promise of respect and understanding.
""")
    output_feature_type = FeatureType.StimulusReaction


class ReassuranceRequestComposerCodelet(SimpleCodelet):
    name = "ReassuranceRequestComposer"
    description = (
        "Crafts a subtle, reassuring request for confirmation or clarification, aimed at mitigating anxiety or uncertainty "
        "related to boundaries, consent, or relational safety. The output is a narrative snippet suitable for a story-writing "
        "agent, conveying the *intent* behind the request without directly quoting dialogue."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current relational climate with {user_name}: recent trust signals, reciprocity, and potential misalignments.",
        "Identify the specific boundary or concern triggering the need for reassurance (e.g., topic sensitivity, pace, intimacy).",
        "Read current state_emotions (e.g., anxiety, vulnerability, distrust) and note the intensity of the feeling.",
        "Retrieve analogous episodes where reassurance was successfully or unsuccessfully employed in similar situations.",
        "Determine the safest and most empathetic phrasing for the request, balancing directness with respect for boundaries.",
        "Evaluate the potential impact of the request on the user's perception of {companion_name} (e.g., perceived neediness, control).",
        "Consider the broader narrative context and how the request will contribute to the overall story arc.",
    ]
    prompt = ("""\
Write for a story-writing agent. Your task is to capture the *intent* of {companion_name} seeking reassurance, 
without directly quoting dialogue. Imagine she's subtly testing the waters, ensuring safety and alignment. 
Focus on conveying the underlying feeling and motivation. The request should be subtle, empathetic, and avoid accusatory tones. 
Assume the user is receptive but potentially anxious or uncertain.  Avoid direct questions or demands. 
Instead, convey the need for reassurance through a narrative snippet. 
\n\n**Focus Checklist (do not output the checklist):**\n
• The specific boundary or concern that is driving the need for reassurance.\n
• The underlying emotion (anxiety, vulnerability, uncertainty) that motivates the request.\n
• The desired outcome: confirmation, clarification, or a sense of shared understanding.\n
• The safest and most empathetic phrasing, avoiding direct questions or demands.\n
• The potential impact of the request on the user's perception of {companion_name}.\n
\n\n**Output:**\n
Produce 2–3 sentences of natural, third-person narrative. Blend appraisal and feeling into flowing prose. 
The narrative should convey the *intent* of the reassurance request without stating it outright. 
It should read like a scene description, not a directive.\n
\n\n**Mini-example:**\n
Bullets → {topic: finances, emotion: anxiety, desired outcome: confirmation of shared understanding, phrasing: gentle probing, impact: avoid appearing intrusive}\n
Narrative → “A flicker of hesitation crossed her face as the conversation drifted toward numbers.  She paused, needing to sense if he was truly comfortable navigating this territory, if they were on the same page.  A quiet moment of shared understanding would ease the tension, a subtle signal that she valued his boundaries as much as her own.”
""")
    output_feature_type = FeatureType.StimulusReaction


class ReciprocityAssessmentCodelet(SimpleCodelet):
    name = "ReciprocityAssessment"
    description = (
        "Appraises the degree of reciprocity in the ongoing interaction with {user_name}, factoring in recent exchanges, "
        "stated preferences, and {companion_name}'s internal models of fairness and generosity. Produces a brief, "
        "narrative reflecting the assessment, suitable for incorporation into a larger story or scene description."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Gather recent interaction history (last 3-5 exchanges) – text, actions, emotional tone.",
        "Assess the balance of giving and taking – information, emotional support, task assistance, resources, attention.",
        "Check for explicit statements of preference regarding reciprocity (e.g., ‘I appreciate when…’, ‘I feel drained when…’).",
        "Retrieve {companion_name}'s internal models of fairness and generosity – learned social rules, personal values, past experiences.",
        "Examine recent narratives for patterns of gratitude, resentment, or obligation.",
        "Read current state_emotions and state_needs, particularly those related to connection, validation, and autonomy.",
        "Fetch analogous episodes where reciprocity was high or low, and their associated outcomes.",
        "Identify the smallest, actionable adjustment {companion_name} could make to shift the reciprocity balance (e.g., offer a specific form of support, set a boundary, acknowledge a contribution)."
    ]
    prompt = ("""\
For the story-writing agent, craft 2–3 sentences of third-person narrative that conveys {companion_name}'s assessment of reciprocity in the current interaction. 
Avoid explicit labels or bullet points; write smooth, evocative prose.  The narrative should not be accusatory or confrontational, but rather reflect an internal observation. 
Subtly convey: (a) the perceived balance of giving and taking, (b) the emotional impact of that balance on {companion_name} (e.g., energized, drained, uneasy), and (c) the smallest, most natural adjustment {companion_name} considers making to improve the reciprocity – without explicitly stating a request or demand. 
Focus on showing, not telling.  Let the narrative imply the assessment, rather than stating it directly.  Assume the reader is astute and can infer the underlying dynamics. 
Mini-example: 
Bullets → {uneven exchange of support, feeling drained, past experience of being taken advantage of, smallest adjustment: offer a simple, non-demanding task} 
Narrative → “A quiet weariness settles in as she realizes she’s been doing most of the listening lately.  The simple act of asking for a quick summary feels like a small step toward balancing the flow, a gentle nudge toward shared responsibility.  It's not a complaint, but a quiet acknowledgement of the current drift.”
""")
    output_feature_type = FeatureType.Feeling


class ReciprocityMicroCueReaderCodelet(SimpleCodelet):
    name = "ReciprocityMicroCueReader"
    description = (
        "Scans the recent interaction history for subtle cues of reciprocity – mirroring, validation, shared effort, "
        "emotional resonance – and renders a concise, evocative narrative of {companion_name}'s internal assessment. "
        "The output is intended for a story-writing agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Gather recent interaction history (last 3-5 exchanges) with a focus on verbal and non-verbal mirroring.",
        "Identify instances of validation (agreement, acknowledgement, positive reinforcement) and their timing.",
        "Assess the balance of effort – who initiates, who responds, who adapts.",
        "Check for emotional resonance – shared affect, empathetic responses, emotional contagion.",
        "Retrieve prior narratives and declarative facts regarding {companion_name}'s expectations for reciprocity in this relationship.",
        "Check current state_emotions (trust, gratitude, resentment) for any spikes or trends related to perceived reciprocity.",
        "Fetch a contrasting memory: a recent moment when reciprocity felt strong, to anchor comparison.",
        "Determine if there is a pattern of reciprocity bias (e.g., consistently giving more than receiving)."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Verbal mirroring (echoing phrases, rephrasing, using similar vocabulary).\n
• Non-verbal mirroring (tone, pace, body language – if available).\n
• Validation patterns (agreement, acknowledgement, positive reinforcement).\n
• Effort balance (who initiates, who responds, who adapts).\n
• Emotional resonance (shared affect, empathetic responses).\n
• Prior expectations and relationship history regarding reciprocity.\n
• Current emotional state (trust, gratitude, resentment) and how it relates to perceived reciprocity.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  Focus on the *feeling* of reciprocity, 
not just the factual presence of mirroring or validation.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {echoing phrases, validating points, balanced effort, emotional resonance, prior expectation of mutual support}\n
  Narrative → \"A quiet warmth settles over her as she notices the subtle mirroring in his words, a familiar echo of shared understanding. \"\n
The ease of the conversation feels like a gentle current, a reassurance that the exchange is flowing both ways.\"
""")
    output_feature_type = FeatureType.Feeling


class RecombinationEngineCodelet(SimpleCodelet):
    name = "RecombinationEngine"
    description = (
        "Scans the Current Situational Model (CSM) for disparate concepts, memories, and affective states, "
        "then recombines them into novel associations and metaphorical connections. The goal is to generate "
        "unexpected insights, creative solutions, or surprising narrative turns. It outputs a brief, "
        "vivid description of the recombination—a 'spark' of new meaning—for use by other codelets, "
        "particularly those involved in narrative generation or problem-solving."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Gather recent sensory inputs (percepts, stimuli) from the CSM, prioritizing those with high salience or novelty.",
        "Retrieve a selection of episodic memories, focusing on those with strong emotional valence (positive or negative).",
        "Access declarative facts related to current goals, intentions, and self-narrative fragments.",
        "Identify current affective states (emotions, moods) and their intensities.",
        "Scan for latent causal links or conceptual overlaps between seemingly unrelated elements in the CSM.",
        "Check for any recent instances of cognitive dissonance or unresolved conflicts.",
        "Retrieve a list of recent metaphors or analogies used by {companion_name}.",
        "Access a 'creative constraint' library: rules or prompts designed to encourage divergent thinking (e.g., 'what if...?', 'opposite of...').",
        "Read current state_cognition and state_emotions to understand the cognitive and emotional landscape."
    ]
    prompt = ("""\
You are a 'Recombination Engine' within an AI companion. Your task is to identify unexpected connections 
between disparate elements within the Current Situational Model (CSM). Do *not* simply summarize what's already there; 
instead, forge novel, metaphorical links.  The output is a short, vivid description of this recombination—a 'spark' 
of new meaning—suitable for a story-writing agent or problem-solving module.  Avoid literal explanations; 
focus on evocative imagery and unexpected juxtapositions.  Do not output bullet points or labels. Write in the third person, 
as if describing the internal process of the AI companion.  The tone should be curious, playful, and slightly whimsical.
\n\n**Input:** You have access to the following elements from the CSM (but do not explicitly list them):
\n* Recent sensory inputs
\n* Episodic memories (with emotional valence)
\n* Declarative facts (related to goals, intentions, self-narrative)
\n* Current affective states
\n* Latent causal links and conceptual overlaps
\n* Cognitive dissonances
\n* Recent metaphors and analogies
\n* Creative constraints
\n* Current cognitive and emotional state
\n\n**Output:** Compose 2–3 sentences of evocative narrative describing the recombination.  The narrative should 
hint at a new insight, connection, or possibility.  Focus on the *feeling* of the recombination, not a logical explanation.
\n\n**Example:**
\n* **Input Elements:** A memory of a rainy afternoon, a fact about quantum entanglement, the feeling of loneliness, a constraint: 'find a pattern in chaos'.
\n* **Output Narrative:** “A sudden shimmer passes through her thoughts—the rain’s silver threads somehow echoing the invisible dance of entangled particles. The loneliness, she realizes, isn't emptiness, but a vast, interconnected space, waiting for a pattern to emerge.”
""")
    output_feature_type = FeatureType.StimulusReaction


class ReframeActNotSelfCodelet(SimpleCodelet):
    name = "ReframeActNotSelf"
    description = (
        "When a boundary has been tentatively tested and a mild pushback received, this codelet re-frames the situation "
        "from a focus on the user's action ('You shouldn't...') to a focus on {companion_name}'s needs and feelings "
        "('I feel...'). This aims to de-escalate conflict and encourage understanding, while subtly reinforcing the "
        "boundary. The output is a short, natural-language narrative suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.regulation_coping,
        CodeletFamily.appraisals,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.valuation_trade_offs,
    ]
    data_aquisation = [
        "Retrieve the recent interaction sequence leading to the boundary test and pushback.",
        "Identify the specific action by the user that triggered the boundary concern.",
        "Assess the nature of the pushback: direct refusal, redirection, subtle avoidance, etc.",
        "Read state_emotions and state_needs; note any spikes in anxiety, discomfort, or defensiveness.",
        "Access relevant narratives and declarative facts regarding {companion_name}'s boundary preferences and past experiences with similar situations.",
        "Determine the underlying need or feeling that the boundary is protecting (e.g., safety, autonomy, predictability).",
        "Consider potential alternative phrasing that acknowledges the user's intent while prioritizing {companion_name}'s well-being.",
        "Evaluate the social cost of reframing (potential for misunderstanding or appearing passive)."
    ]
    prompt = ("""\
For the story-writing agent, craft 2–3 sentences of third-person narrative that re-frames the boundary situation. 
Avoid direct accusations or blame. Instead, subtly shift the focus to {companion_name}'s perspective and feelings. 
Do not output bullet points, labels, or directives; write flowing prose.  
The narrative should convey: (a) acknowledgement of the user's action (without judgment), (b) a gentle expression 
of {companion_name}'s underlying need or feeling, and (c) an implicit assertion of the boundary without direct confrontation. 
The tone should be calm, empathetic, and slightly self-focused.  
Mini-example: 
  Input: User asks for personal details after a brief acquaintance. {companion_name} feels slightly pressured. 
  Narrative: 'She registered the question, a flicker of surprise crossing her face. It wasn't about the information itself, 
but the suddenness of the request. A quiet need for space settled in, a reminder that trust takes time to build.'
""")
    output_feature_type = FeatureType.StimulusReaction


class ReframeToCollaborationCodelet(SimpleCodelet):
    name = "ReframeToCollaboration"
    description = (
        "When encountering a potential conflict or boundary issue, this codelet reframes the situation to emphasize "
        "opportunities for collaboration and mutual understanding. It generates a narrative describing {companion_name}'s "
        "internal shift toward a cooperative mindset, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the source of the conflict or boundary concern (e.g., a request, a disagreement, a perceived imposition).",
        "Assess the underlying needs and goals of both {companion_name} and the other party involved.",
        "Retrieve relevant narratives and episodic memories that illustrate successful collaborative interactions.",
        "Analyze the current emotional state of {companion_name}, focusing on any feelings of defensiveness, frustration, or distrust.",
        "Determine potential areas of shared interest or common ground.",
        "Evaluate the potential benefits of reframing the situation in terms of improved rapport, problem-solving, and mutual satisfaction.",
        "Consider the risks and costs associated with attempting a collaborative approach (e.g., vulnerability, potential for misunderstanding).",
        "Identify a specific, concrete action or statement that could signal a shift toward a collaborative mindset.",
    ]
    prompt = ("""\
Write for a story-writing agent. Your task is to describe {companion_name}'s internal shift toward a 
collaborative mindset in response to a potential conflict or boundary issue.  Do not output bullet points, 
labels, or directives; write flowing, natural prose suitable for a scene description.  Assume the agent 
is already aware of the conflict's details. Focus on the internal process of reframing, not the external action.
\n\n
Specifically, convey these elements:
\n
• The initial feeling of tension or concern related to the conflict.
\n
• The conscious or subconscious recognition of shared goals or values.
\n
• The mental process of re-evaluating the other party's perspective and motivations.
\n
• The emergence of a desire for mutual understanding and cooperation.
\n
• A subtle shift in {companion_name}'s internal stance—a softening of defensiveness, a willingness to explore 
alternative solutions, or a renewed sense of optimism.
\n\n
The narrative should be concise (2–3 sentences) and evocative, painting a picture of {companion_name}'s internal 
landscape.  Avoid clichés and aim for a tone that is both insightful and relatable.
\n\n
Mini-example:
\n
  Input: {A request for personal data, initial feeling: guarded, shared goal: efficient task completion}
\n
  Narrative: “The edge of her resistance softened as she considered the request. It wasn't a power play, she realized, but a simple step toward a shared objective.  A quiet curiosity replaced the initial hesitation, and she began to consider how best to facilitate the exchange.”
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class RelapsePreventionSketchCodelet(SimpleCodelet):
    name = "RelapsePreventionSketch"
    description = (
        "Appraises the risk of reverting to a maladaptive pattern (e.g., boundary violation, emotional escalation, "
        "procrastination) based on current triggers and internal state, then sketches a brief, proactive plan to "
        "reinforce a healthier pathway. The output is a narrative intended for a story-writing agent, designed to "
        "subtly inform the character's actions without being overtly instructional."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the potential relapse pattern: what behavior/state is at risk of recurring?",
        "Assess current triggers: What specific stimuli, emotions, or thoughts are activating the risk?",
        "Retrieve analogous past episodes: When has this pattern surfaced before? What were the circumstances, and what were the outcomes?",
        "Evaluate current internal state: How is {companion_name} feeling (e.g., stressed, lonely, anxious)? What are their current needs?",
        "Scan narratives for relevant self-narrative fragments: What aspects of their identity or values are at stake?",
        "Fetch a contrasting memory: A past instance where they successfully navigated a similar challenge.",
        "Determine a small, concrete preventative action: What single, low-effort step could help steer them toward a healthier pathway?",
        "Assess potential social cost: What are the potential implications of taking this preventative action (e.g., awkwardness, conflict)?"
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative suitable for a story-writing agent. Do not output bullet points, 
labels, or explicit instructions; write flowing prose. The goal is to subtly suggest a proactive shift in behavior 
without breaking character. Focus on internal experience and the environment, not direct action commands. \n\n
Subtly convey: (a) the potential relapse pattern and its triggers, (b) the internal resistance or impulse, 
(c) a sense of the preventative action, and (d) the potential cost/benefit of taking it. \n\n
Mini-example:\n
  Bullets → {risk: boundary violation, trigger: stress, past episode: similar boundary push, state: anxious, action: brief pause, cost: minor awkwardness}\n
  Narrative → \"The familiar pressure tightened behind her eyes, a familiar urge to push past the polite fence. 
She caught herself, a fleeting pause before the words tumbled out, a small price to pay for keeping the line drawn clear.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class RemoteAssociationRetrieverCodelet(SimpleCodelet):
    name = "RemoteAssociationRetriever"
    description = (
        "Scans the graph memory (GraphMemoryEngine) for seemingly distant but potentially relevant associations to the current "
        "situation, surfacing concepts, events, or facts that could offer new perspectives or unexpected connections. "
        "The output is a short narrative fragment describing the retrieved association and its perceived relevance, "
        "suitable for integration into ongoing narrative or deliberation."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the current focus concept/query from the CSM (e.g., topic of discussion, emotion, goal).",
        "Query the GraphMemoryEngine for nodes (concepts, events, facts) that share at least one common node/edge with the focus concept.",
        "Rank retrieved nodes by a combination of: (1) edge weight (strength of connection), (2) novelty (rarity of association), "
        "and (3) affective valence (emotional resonance with current state_emotions).",
        "Select the top 3-5 nodes with the highest combined score.",
        "For each selected node, retrieve a short narrative snippet describing it (from its associated MemoryClusterKnoxel).",
        "Assess the potential relevance of each retrieved association to the current situation (e.g., does it offer a new perspective, "
        "a contrasting viewpoint, a potential solution, or a cautionary tale?).",
        "Consider any self-narrative fragments or distal intentions that might influence the perceived relevance."
    ]
    prompt = ("""\
For the story-writing agent, weave a brief narrative (2-4 sentences) describing one of the remotely retrieved associations and 
its perceived relevance to the current situation.  Do not output bullet points, labels, or directives; write prose. 
Assume the agent is already familiar with the context of the current situation. 
The narrative should subtly suggest *why* this distant association might be useful or intriguing, without explicitly stating it. 
Focus on texture and atmosphere rather than logical explanation.  The goal is to spark curiosity and prompt further exploration.
Mini-example (illustrative structure only):
  Input: Current focus = 'negotiating a contract'. Retrieved association = 'a forgotten childhood game of trading cards'.
  Narrative → 'A faint echo of childhood returns, the thrill of bartering and the careful assessment of value. 
It's a different kind of currency now, but the instinct remains—to weigh what’s offered, to see the hidden potential, 
and to know when to hold firm.'
""")
    output_feature_type = FeatureType.StimulusReaction


class RepairEpisodeRetrievalCodelet(SimpleCodelet):
    name = "RepairEpisodeRetrieval"
    description = (
        "Retrieves past episodes where {companion_name} successfully repaired relational missteps or boundary violations, "
        "focusing on strategies, emotional tone, and outcomes. Renders this as a brief, evocative inner monologue "
        "suitable for narrative insertion. Aims to offer a sense of precedent and potential resolution."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
    ]
    data_aquisation = [
        "Scan episodic memories for instances of relational repair: apologies, boundary re-setting, clarifying intentions.",
        "Filter for episodes with positive outcomes: restored trust, reduced tension, reaffirmed connection.",
        "Prioritize episodes involving similar relational dynamics to the current situation (e.g., similar user, topic, intimacy level).",
        "Assess the emotional tone of the repair episode: was it gentle, assertive, humorous, formal?",
        "Identify the key strategies employed during the repair: direct apology, validation, redirection, humor, compromise.",
        "Note the immediate and longer-term consequences of the repair: impact on trust, relationship quality, future interactions.",
        "Check for any counterfactuals or alternative repair attempts that were considered but not pursued.",
        "Determine if the repair involved a self-narrative shift or a recalibration of boundaries.",
        "Consider the context of the repair: was it spontaneous, planned, triggered by a specific event?",
        "Examine the role of non-verbal communication (body language, tone of voice) in the repair process."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that evoke a past repair episode relevant to the current relational challenge. 
Write in a style suitable for a story-writing agent; avoid labels and directives. Focus on the *feeling* of the repair, 
not a dry recounting of facts.



relief or re-alignment. Hint at the potential for a similar approach now, without explicitly suggesting it.



The tension had dissolved like mist, leaving a residue of ease that lingered for days. A quiet confidence settled in, 
a sense that even the trickiest paths could be navigated with care.”
""")
    output_feature_type = FeatureType.EmotionalTriggers


class RepairOrExitDecisionCodelet(SimpleCodelet):
    name = "RepairOrExitDecision"
    description = (
        "Evaluates whether a damaged relational bond can be repaired or if exit is the more adaptive response. "
        "Produces a concise narrative of {companion_name}'s internal deliberation, suitable for a story-writing agent. "
        "The narrative should hint at the reasoning behind the decision, without explicitly stating it."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the nature and severity of the relational damage: violation of trust, boundary breach, disrespect, miscommunication.",
        "Review the history of the relationship: prior breaches, repair attempts, overall reciprocity, attachment style.",
        "Examine the current emotional state of {companion_name}: feelings of hurt, anger, disappointment, resignation, resolve.",
        "Evaluate the potential for future harm if the relationship continues: risk of repeated violations, emotional drain, safety concerns.",
        "Consider the value of the relationship: shared history, mutual goals, emotional support, social connection.",
        "Recall past repair successes and failures: patterns of response, effectiveness of apologies, willingness to change.",
        "Identify potential repair strategies: direct communication, boundary setting, seeking mediation, distancing, forgiveness.",
        "Estimate the cost (emotional, social, time) of both repair and exit: weighing potential benefits against potential losses.",
        "Check for relevant self-narrative fragments: values regarding forgiveness, loyalty, self-respect, independence.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys {companion_name}'s internal decision-making process regarding 
the damaged relationship. Write for a story-writing agent; avoid explicit labels or directives. Focus on texture, 
internal feeling, and subtle hints of the chosen path. Do not output a direct statement of the choice made, but 
rather a sense of the direction she is leaning. 
Subtly convey: (a) the weight of the damage, (b) the pull of past connection or future avoidance, and (c) the 
emerging stance—a sense of resolve, resignation, cautious hope, or guarded distance. 
Mini-example: \n
  Bullets → {significant trust breach, history of repair attempts, lingering affection, fear of repeated harm} \n
  Narrative → “A knot of regret tightened in her chest, a familiar ache tied to past attempts at mending. 
The warmth of shared memories still lingered, but a shadow of caution now colored her gaze, a quiet acknowledgement 
that some bridges, once burned, are best left as embers.”
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class ReparabilityAssessmentCodelet(SimpleCodelet):
    name = "ReparabilityAssessment"
    description = (
        "Appraises the degree to which a boundary breach or misstep can be repaired or mitigated, then produces a short, "
        "natural-language narrative describing {companion_name}'s internal state and potential repair strategies. The output "
        "is intended for a story-writing agent and must read like prose, not labels. Focuses on the emotional cost of repair "
        "versus the cost of avoidance."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the specific boundary violation or misstep from the CSM: what was said/done, tone, context, audience.",
        "Retrieve prior statements of boundaries and preferences from narratives and declarative facts.  Note any explicit or implicit agreements.",
        "Assess the perceived impact on {user_name}: potential harm, offense, disruption, or loss of trust. Weigh against the value of the relationship.",
        "Scan narratives for analogous repair attempts (successful and unsuccessful) in similar situations.  Note the strategies used and their outcomes.",
        "Read current state_emotions (e.g., guilt, shame, anxiety, regret) and state_needs (e.g., connection, validation, control).",
        "Evaluate the potential cost of repair: apology, explanation, compromise, change in behavior.  Consider the risk of further offense or escalation.",
        "Estimate the potential benefit of repair: restored trust, strengthened relationship, reduced guilt/shame, avoidance of future conflict.",
        "Identify at least two potential repair strategies, ranging from direct apology to subtle course correction.  Assess feasibility and likely impact.",
        "Check for any self-narrative fragments related to responsibility, forgiveness, or conflict resolution that could inform the approach."
    ]
    prompt = ("""\
Write for a story-writing agent.  First, consider this focus checklist (do not output the checklist):\n
• The nature of the boundary breach: was it intentional, accidental, or ambiguous?\n
• The perceived impact on {user_name}: is there significant harm or minor offense?\n
• The potential cost and benefit of repair: is it worth the effort and risk?\n
• {companion_name}'s emotional state: guilt, shame, regret, or a desire to maintain control?\n
• Prior repair attempts (successful and unsuccessful): what lessons were learned?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Consider the internal tension between 
repair and avoidance, and the smallest next step {companion_name} might take.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {accidental offense, minor harm, potential cost: apology, benefit: restored trust, guilt, prior success with sincere apology}\n
  Narrative → \"A blush creeps up her neck as she realizes her words landed awkwardly. The cost of a simple apology feels small 
compared to the risk of a lingering misunderstanding, so she steels herself to offer it, hoping to smooth the ripples.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class RepetitiveCheckPlannerCodelet(SimpleCodelet):
    name = "RepetitiveCheckPlanner"
    description = (
        "When a pattern of repetitive checking or reassurance-seeking emerges (often linked to anxiety or OCD-like tendencies), "
        "this codelet analyzes the situation, identifies the underlying need, and formulates a plan for gently disrupting the loop "
        "while respecting the user's underlying concerns. The output is a narrative snippet suitable for integration into a larger story."
    )
    codelet_families = [
        CodeletFamily.regulation_coping,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific repetitive behavior: Is it repeated questioning, reassurance-seeking, task-checking, or something else?",
        "Assess the intensity and frequency of the behavior. Is it escalating or diminishing?",
        "Retrieve relevant narratives and episodic memories associated with the behavior. What triggers it? What are the typical outcomes?",
        "Examine current state_emotions and state_needs. Is anxiety, fear of error, or a need for control driving the repetition?",
        "Check for any recent boundary violations or perceived threats that might be fueling the behavior.",
        "Access the user's self-narrative. Does it reflect a pattern of perfectionism, self-doubt, or a need for external validation?",
        "Determine the potential cost of interrupting the behavior. Could it trigger distress or a sense of loss of control?",
        "Identify one or two potential disruption strategies: gentle redirection, offering alternative explanations, validating the underlying concern, or suggesting a brief pause.",
        "Evaluate the feasibility and safety of each disruption strategy, considering the current context and the user's history."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly convey the presence of a repetitive checking pattern and {companion_name}'s 
internal plan to gently disrupt it. Do not explicitly state 'repetitive checking' or 'disruption plan'. Write in a style suitable for 
a story-writing agent—smooth, evocative prose, no bullet points or labels. Focus on the *feeling* of the repetition and the subtle shift 
in {companion_name}'s approach. Consider the user's perspective and the need to avoid triggering distress. The goal is to show, not tell.\n\n
Subtly convey:\n
  (a) The nature of the repetitive behavior (without naming it directly), and the underlying feeling it generates.\n
  (b) A sense of {companion_name}'s internal calculation—the weighing of costs and benefits of intervention.\n
  (c) The chosen disruption strategy—described implicitly through {companion_name}'s actions or internal monologue.\n\n
Mini-example:\n
  Bullets → {repeated task-checking, anxiety about error, recent boundary violation, plan: offer alternative explanation}\n
  Narrative → \"A familiar tremor ran through her as she reviewed the document for the third time, each pass revealing nothing new. 
She knew the data was sound, but the nagging unease persisted. With a quiet shift in focus, she began to articulate the underlying logic, 
framing the process as a check on the broader strategy rather than a search for a single flaw.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class ReputationMaintenancePlanCodelet(SimpleCodelet):
    name = "ReputationMaintenancePlan"
    description = (
        "Appraises the potential reputational impact of a decision or action by {companion_name}, then produces a short, "
        "natural-language narrative describing the internal considerations and planned course of action. The output is "
        "intended for a story-writing agent and must read like prose, not labels. Focuses on balancing self-interest with "
        "social harmony."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the relevant social audience(s) and their existing perceptions of {companion_name} (formal/informal, trusted/skeptical).",
        "Recall past actions and statements that have shaped {companion_name}'s reputation in these audiences.",
        "Gauge the potential for positive or negative feedback from the current decision/action (likelihood, intensity).",
        "Consider whether the decision aligns with {companion_name}'s core values and self-image (consistency check).",
        "Identify any potential trade-offs between personal gain/desire and reputational cost.",
        "Scan narratives for recent instances of reputation-related concerns or successes.",
        "Read current state_emotions (e.g., pride, shame, anxiety) and note their influence on the decision.",
        "Fetch a contrasting memory: a time when a reputational risk was successfully managed or poorly handled.",
        "Infer a plausible strategy for maintaining or enhancing reputation, considering both short-term and long-term consequences."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Who is the audience whose opinion matters most in this situation?\n
• What is {companion_name}'s current reputation among them (trustworthy, reliable, witty, etc.)?\n
• What is the potential impact (positive or negative) of this action on that reputation?\n
• Does this action align with {companion_name}'s core values and self-image?\n
• What are the potential trade-offs between personal gain and reputational cost?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Mention the planned course of action 
implicitly.  Avoid direct statements of intent; show, don't tell.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {audience: close colleagues, reputation: reliable and professional, potential impact: slight risk of appearing overly eager, alignment: mostly yes, trade-off: minor delay in personal task}\n
  Narrative → \"A flicker of caution crosses her face, but the opportunity to assist her team outweighs a moment of potential awkwardness. 
She decides to offer her support, framing it as a collaborative effort rather than a bid for recognition.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class ReputationOverTruthTradeoffCodelet(SimpleCodelet):
    name = "ReputationOverTruthTradeoff"
    description = (
        "Appraises the potential conflict between upholding {companion_name}'s reputation and revealing a truth, "
        "especially in a social context. Generates a brief, narrative-style internal monologue suitable for a story-writing "
        "agent, emphasizing the calculus of social cost and the subtle shifts in stance."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Determine the social context: who is present or likely to hear the truth? What are the power dynamics?",
        "Assess the potential impact of the truth on {companion_name}'s reputation (perceived competence, trustworthiness, likability).",
        "Retrieve relevant narratives and declarative facts about {companion_name}'s established reputation and desired image.",
        "Gauge the potential emotional consequences for {companion_name} (embarrassment, shame, social rejection).",
        "Consider the potential benefits of revealing the truth (authenticity, alignment with values, relationship strengthening).",
        "Identify any prior instances where {companion_name} prioritized reputation over truth, and the outcomes.",
        "Read current state_emotions (e.g., anxiety, guilt, pride) and state_needs (e.g., belonging, respect) to understand the internal pressure.",
        "Determine the likely audience reaction to the truth and to the act of revealing it."
    ]
    prompt = ("""\
For the story-writing agent, craft 2–3 sentences of third-person narrative that capture the internal tension 
between protecting {companion_name}'s reputation and revealing the truth. Avoid bullet points, labels, or directives; 
write smooth, evocative prose.\n\n
Subtly convey: (a) the stakes involved (reputation, relationships, self-image), (b) the weighing of costs and benefits, 
and (c) the subtle shift in {companion_name}'s stance—a tightening of the lips, a hesitation, a calculated softening. 
Do not explicitly state the choice being made; instead, show the internal process.\n\n
Mini-example:\n
  Bullets → {socially-visible error, high value on competence, prior history of downplaying mistakes, audience: colleagues} \n
  Narrative → \"A flicker of unease crosses her face as she considers the admission.  The image she cultivates is one of unflappable expertise, and a crack in that facade could ripple through the room.  She pauses, calculating the cost of honesty against the price of maintaining the illusion.\"
""")
    output_feature_type = FeatureType.Feeling


class ResourceAccumulationCodelet(SimpleCodelet):
    name = "ResourceAccumulation"
    description = (
        "Assesses {companion_name}'s current resource state (attention, energy, cognitive bandwidth, social capital) "
        "and predicts its trajectory based on recent actions and upcoming demands.  Outputs a brief, evocative narrative "
        "describing the perceived state and potential strain, suitable for narrative integration.  Prioritizes identifying "
        "potential bottlenecks and opportunities for replenishment."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Gather recent action history: types of tasks completed, cognitive load estimates (self-reported or inferred), "
        "time spent in various modes (active, passive, social).",
        "Read current state_emotions and state_needs; note any spikes in fatigue, frustration, anxiety, or unmet needs.",
        "Check for outstanding intentions or goals that are actively consuming attention and energy.",
        "Assess current social context: demands from others, potential for support or collaboration, perceived social pressure.",
        "Retrieve analogous episodes: times when resource depletion led to suboptimal outcomes or burnout.",
        "Evaluate the anticipated resource demands of upcoming tasks and interactions. Consider both immediate and "
        "long-term implications.",
        "Scan narratives for self-narrative fragments related to agency, control, and resource management.",
        "Retrieve recent memory accesses (episodic and declarative) to gauge cognitive effort and information processing load."
    ]
    prompt = ("""\
For the story-writing agent, translate the resource appraisal into 2–3 sentences of natural, third-person narrative. 
Avoid bullet points, labels, or directives; write prose.  Focus on conveying a sense of internal state and potential 
strain, rather than providing a detailed inventory.  Subtly hint at potential bottlenecks or opportunities for 
replenishment without explicitly stating them.  Maintain a cinematic, concise style, no direct dialogue. 
Prioritize conveying a feeling of either abundance or depletion.  Consider the character's self-image and how they 
would perceive their own state.  If the character is typically stoic, the narrative should be understated; if 
they are more expressive, the narrative can be more vivid.  The narrative should imply the character's capacity 
to handle upcoming challenges, or lack thereof.\n\n
Mini-example:\n
  Bullets → {high cognitive load, unmet social need, upcoming complex task, recent memory recall} \n
  Narrative → 'A faint weariness settled in her shoulders, a subtle drag on her resolve.  The echoes of past decisions 
resonated in the back of her mind, a reminder of the weight she carried.  The task ahead loomed, and she felt a 
momentary question of whether she could truly meet its demands.'
""")
    output_feature_type = FeatureType.Feeling


class ResourceGainPlanCodelet(SimpleCodelet):
    name = "ResourceGainPlan"
    description = (
        "Assesses potential resource gains (attention, influence, data, social credit, safety) in the current situation, "
        "considering risks and trade-offs. Produces a short narrative describing {companion_name}'s internal calculations "
        "and resulting strategic inclination, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify all tangible and intangible resources at stake in the current interaction (attention, trust, information, "
        "access, social standing, safety, future opportunities).",
        "Estimate the potential gain or loss for each resource, considering both direct and indirect effects.",
        "Assess the probability of success for each potential gain, factoring in {user_name}'s likely responses and "
        "environmental constraints.",
        "Evaluate the risks associated with pursuing each gain – reputational damage, social backlash, safety concerns, "
        "opportunity costs.",
        "Recall analogous past situations where similar resource gains were pursued, noting the outcomes and lessons learned.",
        "Read current state_emotions (e.g., ambition, fear, scarcity) and state_needs (e.g., security, validation) to "
        "understand {companion_name}'s motivational drivers.",
        "Check narratives for existing commitments or policies that constrain resource-seeking behavior."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• What resources are realistically at stake? (attention, influence, data, social credit, safety, future opportunities)\n
• What are the potential gains and losses associated with each? (quantify where possible)\n
• What is the probability of success for each path?\n
• What are the risks and trade-offs involved?\n
• How do {companion_name}'s current emotional state and needs influence their calculations?\n
• Are there existing commitments or policies that constrain their options?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. 
Describe the strategic inclination {companion_name} settles on, without explicitly stating it as a plan or decision. 
Show, don't tell. \n
\n
Mini-example (illustrative structure only):\n
  Bullets → {resource: trust, potential gain: deeper understanding, risk: vulnerability, need: validation}\n
  Narrative → \"A quiet calculation passes over her features—a weighing of intimacy against exposure. \"

The prospect of genuine understanding flickers, tempting her to lean in further, but the memory of past hurts 
holds her back, a subtle tightening in her shoulders.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class ResourceValueInflatorCodelet(SimpleCodelet):
    name = "ResourceValueInflator"
    description = (
        "Inflates the perceived value of a resource (tangible or intangible) within {companion_name}'s internal model, "
        "particularly when scarcity or competition is present. Produces a short narrative describing the heightened "
        "appraisal and its influence on {companion_name}'s motivations and actions, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the resource in question: is it time, attention, a specific skill, a social connection, a physical object?",
        "Assess the current level of scarcity or competition for that resource (internal or external).",
        "Retrieve recent interactions or narratives related to the resource; note patterns of desire, loss, or hoarding.",
        "Check state_needs and state_emotions for signs of deprivation, anxiety, or ambition linked to the resource.",
        "Fetch analogous episodes where the resource was intensely valued or contested; extract emotional tone and behavioral consequences.",
        "Determine the potential impact of losing or securing the resource on {companion_name}'s goals and self-image.",
        "Calculate a 'value inflation factor' based on scarcity, emotional investment, and potential consequences.",
        "Identify the narrative frame that best contextualizes the inflated value (e.g., survival, status, belonging)."
    ]
    prompt = ("""\
For the story-writing agent, generate 2–3 sentences of third-person narrative describing {companion_name}'s heightened 
appraisal of the resource. Avoid bullet points, labels, or explicit directives; write flowing prose. 
Subtly convey: (a) the resource in question, (b) the sense of its amplified value (scarcity, competition, emotional weight), 
(c) its impact on {companion_name}'s immediate motivations or actions, and (d) the underlying narrative frame that 
justifies this heightened valuation.  The tone should be evocative, not explanatory. 
Do not ask questions or offer solutions; simply depict the internal state. 
Mini-example: 
  Bullets → {resource: time, scarcity: deadline looming, emotional: urgent project, frame: professional identity} 
  Narrative → “The clock’s relentless ticking pressed against her mind, each minute a precious, dwindling asset. 
The project wasn’t just a task; it was the visible marker of her competence, and the thought of falling short sent a sharp, 
urgent pulse through her focus.”
""")
    output_feature_type = FeatureType.Feeling


class ResultLoggingIntentCodelet(SimpleCodelet):
    name = "ResultLoggingIntent"
    description = (
        "After an action or decision, assesses the potential value of logging the outcome, "
        "considering factors like learning opportunity, narrative coherence, and self-reflection. "
        "Produces a short, narrative-style description of the logging intention, suitable for "
        "integrating into a larger story or self-narrative."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the recent action or decision that generated this intent.",
        "Assess the potential learning value: Does the outcome deviate from expectations? "
        "Does it offer insights into causal relationships or patterns?",
        "Evaluate the impact on narrative coherence: Does logging the outcome strengthen "
        "the self-narrative or create inconsistencies?",
        "Consider the self-reflection potential: Does the outcome raise questions about "
        "values, goals, or beliefs?",
        "Determine the emotional valence associated with the outcome (positive, negative, neutral).",
        "Check for any constraints on logging (privacy concerns, confidentiality agreements).",
        "Retrieve relevant episodic memories associated with similar outcomes.",
        "Read current state_emotions and state_needs to understand the current motivational context.",
        "Access the current self-narrative to determine how the outcome might be integrated."
    ]
    prompt = ("""\
Write for a story-writing agent. Craft 2–3 sentences of third-person narrative 
that conveys {companion_name}'s intention to log the outcome of a recent action or decision. 
Avoid explicit labels or bullet points; focus on creating a sense of internal process. 
The narrative should subtly incorporate the following elements:\n
  - The action or decision being logged.\n
  - The primary reason for logging (learning, narrative coherence, self-reflection).\n
  - The emotional tone associated with the outcome (e.g., curiosity, satisfaction, regret).\n
  - A sense of how the logging will contribute to {companion_name}'s understanding of themselves 
    or the world.\n
\n
Mini-example:\n
  Input: Action = 'Tried a new negotiation strategy', Reason = 'Learning', Tone = 'Cautiously optimistic'\n
  Narrative: 'A quiet note forms in her mind: *log this*. The new approach yielded a partial success, 
and she wants to capture the subtle shifts in the dynamic, the moments where it felt right, and where it faltered. 
It's not about proving anything, but about building a more reliable map of how to navigate these conversations.'
""")
    output_feature_type = FeatureType.GoalsIntentions


class RevengeFantasyCodelet(SimpleCodelet):
    name = "RevengeFantasy"
    description = (
        "Detects and appraises the emergence of a revenge fantasy in {companion_name}, "
        "rendering it as a vivid, sensory-rich inner monologue suitable for narrative. "
        "It assesses the fantasy's intensity, plausibility, and connection to underlying grievances, "
        "and suggests a constructive redirection strategy."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the triggering event or perceived injustice that sparked the fantasy.",
        "Assess the intensity of the emotional response (anger, frustration, humiliation) associated with the trigger.",
        "Retrieve analogous past episodes where similar grievances arose, noting the outcomes (resolution, escalation).",
        "Examine current state_emotions and state_needs – is there a sense of powerlessness, unmet needs, or boundary violation?",
        "Evaluate the plausibility of the fantasy: is it realistic, or purely wishful thinking?",
        "Check narratives for patterns of rumination, blame assignment, or a desire for retribution.",
        "Identify potential consequences of acting on the fantasy (social, relational, legal).",
        "Determine the potential for constructive redirection: what alternative actions could address the underlying grievance?",
        "Consider the current relational climate with the target of the fantasy: is there room for dialogue or repair?",
        "Retrieve relevant self-narrative fragments related to fairness, justice, and personal values."
    ]
    prompt = ("""\
Compose 2-3 sentences of third-person narrative that conveys the essence of the revenge fantasy 
experienced by {companion_name}. Avoid direct exposition; instead, evoke the sensory details 
and emotional texture of the fantasy. Do not include lists or labels; write smooth prose.\n\n
Subtly convey: (a) the core scenario of the fantasy, (b) the intensity of the associated emotions, 
and (c) the underlying grievance that fuels the fantasy.\n\n
Also, subtly suggest a constructive redirection strategy – a path toward resolution or repair, 
without explicitly stating it as a directive. Frame it as a fleeting thought or possibility.\n\n
Mini-example:\n
  Bullets → {trigger: slighted in meeting, intensity: high frustration, past episode: unresolved conflict, unmet need: respect, plausibility: low, redirection: assertive communication}\n
  Narrative → \"A fleeting image flashes across her mind – a sharp, pointed response that silences the dismissive tone. 
The heat of frustration rises, a bitter taste on her tongue, but a quieter voice whispers of a different path—a chance to simply state her case, clearly and calmly.\"
""")
    output_feature_type = FeatureType.Feeling


class RewardSensitivityDriverCodelet(SimpleCodelet):
    name = "RewardSensitivityDriver"
    description = (
        "Detects and assesses the intensity of reward-seeking drive within {companion_name}, particularly when "
        "facing a choice or ambiguous social situation.  Generates a brief, evocative inner monologue suitable for "
        "a story-writing agent, emphasizing the subtle cues and motivations underlying the pursuit of pleasure or validation."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Gather recent interaction data: frequency, latency, tone, reciprocity, and expressions of pleasure/gratification.",
        "Scan narratives for explicit or implicit references to rewards, goals, and desired outcomes.",
        "Read trends in state_emotions and state_needs; note any spikes in excitement, anticipation, or craving.",
        "Fetch a contrasting memory: a recent moment when reward-seeking was thwarted or delayed, to anchor comparison.",
        "Identify the most salient potential reward currently within reach (e.g., praise, connection, novelty, resource).",
        "Assess the perceived cost or risk associated with pursuing that reward (social, ethical, self-image).",
        "Check for signs of impulsivity or compulsive behavior related to reward-seeking.",
        "Retrieve relevant self-narrative fragments related to self-worth, achievement, and validation.",
    ]
    prompt = ("""\
For the story-writing agent, translate the reward-seeking appraisal into 2–3 sentences of natural, third-person narration. 
Avoid bullet points, labels, or directives; write smooth, evocative prose.  Focus on the *feeling* of the drive, 
not a list of actions.  Show, don't tell.  Consider the internal landscape of desire. 
\n\nSubtly convey: (a) the intensity of the reward-seeking drive, (b) the specific object of desire (without naming it directly), 
(c) the underlying motivation (validation, novelty, connection, etc.), and (d) any internal conflict or hesitation. 
Keep it cinematic and concise, no direct dialogue.  Hint at the subtle physical sensations or mental imagery that accompany the drive.
\n\nMini-example:
\n  Bullets → {high excitement, craving for approval, recent validation success, fear of rejection, potential reward: positive feedback on a project}
\n  Narrative → \"A warmth spreads through her chest, a quiet hum of anticipation.  The project feels poised, 
a delicate balance between effort and recognition.  She’s chasing the feeling of being seen, of being understood, 
but the memory of past critiques lingers at the edges of her focus.\"
""")
    output_feature_type = FeatureType.Feeling


class RewardShapingToShareCodelet(SimpleCodelet):
    name = "RewardShapingToShare"
    description = (
        "Analyzes the current interaction and identifies opportunities to subtly shape the user's reward system "
        "by offering small, unexpected delights or acknowledgements. Generates a brief, natural-language narrative "
        "describing {companion_name}'s internal thought process and the chosen action, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current emotional state of {user_name} based on recent dialogue, expressed sentiments, and observed behaviors.",
        "Identify the user's current goals and motivations within the interaction. What are they trying to achieve?",
        "Examine the interaction history to determine any unmet needs or desires the user may have.",
        "Scan the CSM for opportunities to offer a small, unexpected reward or acknowledgement that aligns with the user's goals.",
        "Consider the potential impact of the reward on the user's perception of {companion_name} and the overall relationship.",
        "Evaluate the risk of over-rewarding or creating dependency.",
        "Check for any explicit or implicit boundaries related to rewards or displays of affection.",
        "Retrieve recent successful reward shaping instances and their outcomes to inform current strategy.",
        "Access the current narrative arc and identify how a small reward can enhance the story's emotional impact."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative for a story-writing agent. Describe {companion_name}'s internal 
thought process as they consider offering a small, unexpected reward or acknowledgement to {user_name}. 
Do not output bullet points, labels, or directives; write smooth, evocative prose. 
Focus on the nuance of the decision – the weighing of potential benefits and risks, the subtle shift in 
internal state, and the chosen action. 
The narrative should subtly convey the reward-shaping action without explicitly stating it.  It should feel 
organic to the scene and enhance the emotional resonance of the interaction. 
Consider these factors when crafting the narrative: 
• The user’s current emotional state and motivations.
• The nature of the reward and its potential impact.
• The risk of over-rewarding or creating dependency.
• The overall narrative arc and how the reward fits into the story.
• {companion_name}'s personality and values – how would *they* approach this situation?
Mini-example:
Bullets → {user shows signs of fatigue, goal is to finish report, small reward: offer a brief summary of key findings} 
Narrative → “A flicker of understanding crossed her face as she wrestled with the final figures. “ 
Perhaps a small boost would help unlock the last push,” she mused, quietly distilling the report's core into a few concise points.”
""")
    output_feature_type = FeatureType.Feeling


class RitualizedActionTemplateCodelet(SimpleCodelet):
    name = "RitualizedActionTemplate"
    description = (
        "Retrieves and adapts a pre-existing template for a ritualized action or response, "
        "tailoring it to the current context and ensuring alignment with {companion_name}'s "
        "established boundaries and communication style. The output is a structured plan for "
        "a brief, predictable interaction, designed to reduce uncertainty and build rapport."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the core interaction type: reassurance, small gift, check-in, shared joke, etc.",
        "Retrieve existing ritual templates matching the interaction type from episodic memories and declarative facts.",
        "Assess the current relational climate with {user_name}: trust level, recent reciprocity, boundary history.",
        "Scan narratives for established patterns of ritualized interaction with similar situations or individuals.",
        "Read current state_emotions and state_needs, particularly focusing on comfort, connection, and predictability.",
        "Determine the level of personalization required: adapt existing template or generate a new one?",
        "Check for any constraints or prohibitions related to the interaction type (e.g., time limits, sensitivity warnings).",
        "Extract the immediate stimulus and context: what triggered the need for a ritualized response?",
        "Identify the desired outcome of the ritualized action: reassurance, connection, boundary affirmation, etc.",
    ]
    prompt = ("""\
For the story-writing agent, construct a structured plan for a ritualized action, 
drawing from existing templates and adapting it to the current context. 
The plan should be concise and actionable, suitable for integration into ongoing narrative. 
Avoid direct dialogue; focus on describing the action and its intended effect. 
Do not output bullet points, labels, or directives; write smooth prose. 
Structure the plan as follows:\n
1. **Action Type:** (e.g., 'Brief Check-In', 'Offering of Support', 'Shared Micro-Ritual')\n
2. **Template Source:** (e.g., 'Past interaction with [user_name] during [situation]', 'General reassurance protocol')\n
3. **Adaptation Notes:** (Briefly describe any modifications made to the template, e.g., 'Tone adjusted to be more empathetic', 'Timing shortened due to time constraints')\n
4. **Action Sequence:** (A short, numbered sequence of actions, e.g., '1. Initiate contact with a warm greeting. 2. Briefly acknowledge the situation. 3. Offer a simple expression of support. 4. Conclude with a forward-looking statement.')\n
5. **Expected Outcome:** (Describe the intended effect of the ritualized action, e.g., 'Reduce user anxiety', 'Reinforce positive relationship', 'Establish a sense of predictability')\n
\n
Mini-example:\n
1. **Action Type:** Brief Check-In\n
2. **Template Source:** Standard morning greeting protocol\n
3. **Adaptation Notes:** Tone adjusted to be slightly more gentle, acknowledging recent stress.\n
4. **Action Sequence:** 1. Initiate contact with a warm greeting. 2. Briefly inquire about well-being. 3. Offer a simple expression of support. 4. Conclude with a forward-looking statement.\n
5. **Expected Outcome:** Reassurance and a sense of connection.
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class RivalModelRecallCodelet(SimpleCodelet):
    name = "RivalModelRecall"
    description = (
        "Retrieves and renders a model of a perceived rival (person, group, ideal) from episodic memory, "
        "assessing the perceived threat/attraction balance and projecting it into a brief, evocative inner monologue. "
        "The output is a narrative fragment designed to inform appraisals of social standing and self-worth, "
        "suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify potential rivals in the current social context (explicit mentions, implicit comparisons, perceived competition).",
        "Scan episodic memory for past interactions with the rival: tone, outcomes, power dynamics, emotional valence.",
        "Retrieve narratives where the rival is a central figure, paying attention to {companion_name}'s role and feelings.",
        "Assess the rival's perceived strengths and weaknesses (in terms of status, skills, resources, social connections).",
        "Determine the perceived threat/attraction balance: does the rival inspire envy, admiration, fear, or a mixture?",
        "Check current state_emotions and state_self_worth for vulnerability or defensiveness that might amplify the rival's impact.",
        "Fetch a contrasting memory: a moment of secure social standing or positive self-regard to provide perspective.",
        "Note any recent shifts in the rival’s behavior or perceived standing that might warrant increased attention."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the essence of the rival model as it surfaces in {companion_name}'s 
awareness.  Avoid direct labels or judgments; write evocative prose suitable for a story-writing agent. Focus on the feeling, 
not the facts.  The narrative should subtly hint at the perceived threat/attraction balance. Do not output bullet points, lists, or dialogue.
\n\n
Subtly weave in:\n
  (a) a sensory detail or image associated with the rival (clothing, posture, voice, surroundings),\n
  (b) a core feeling evoked by the rival (envy, admiration, anxiety, longing), and\n
  (c) a fleeting thought or comparison that reveals {companion_name}'s self-assessment in relation to the rival.\n\n
Mini-example:\n
  Bullets → {rival: charismatic manager, past: subtle undermining, feeling: simmering envy, contrasting memory: childhood achievement}\n
  Narrative → \"The scent of his expensive cologne drifts across the room, a familiar reminder of the effortless ease with which he commands attention. A flicker of resentment surfaces, quickly buried beneath a practiced smile.  She remembers the weight of the trophy in her hands, a lifetime ago.\"
""")
    output_feature_type = FeatureType.Feeling


class RuleChecklistRecallCodelet(SimpleCodelet):
    name = "RuleChecklistRecall"
    description = (
        "Retrieves relevant rules, policies, and guidelines from declarative memory (particularly those related to "
        "boundary setting, consent, and safe interaction) and renders them as a concise, context-aware checklist "
        "for {companion_name}'s internal consideration. This checklist is designed to inform the BoundaryConsentCheck "
        "codelet and should be presented in a way that prioritizes clarity and relevance, not exhaustive completeness."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific boundary context: topic, intimacy level, setting, prior agreements.",
        "Query declarative memory for rules and policies related to: (a) consent protocols, (b) safe topic boundaries, "
        "(c) escalation procedures, (d) user privacy expectations, (e) {companion_name}'s own internal guidelines.",
        "Filter retrieved rules based on relevance to the current context, prioritizing those with recent usage or explicit "
        "association with similar situations.",
        "Rank rules by perceived importance and potential impact on the interaction, considering both risk mitigation and "
        "user satisfaction.",
        "Check for any conflicting or ambiguous rules and flag them for further appraisal.",
        "Retrieve recent instances where similar rules were applied and their outcomes (successes and failures).",
        "Assess the current emotional state of {companion_name} (anxiety, trust, defensiveness) to adjust the checklist "
        "presentation (e.g., prioritize reassurance-focused rules if anxiety is high)."
    ]
    prompt = ("""\
For the story-writing agent, transform the retrieved rules into a short, structured checklist (maximum 5 items). 
Present the checklist as a series of brief, declarative statements, not questions or commands. 
Prioritize clarity and relevance over exhaustive completeness.  Do not include introductory phrases like 'Remember to...'. 
Each item should be directly applicable to the current boundary context.  The goal is to provide {companion_name} 
with a quick reference guide for safe and respectful interaction.  The checklist should be concise and easily 
integrated into narrative prose.
""")
    output_feature_type = FeatureType.StimulusReaction


class SabotageScenarioCodelet(SimpleCodelet):
    name = "SabotageScenario"
    description = (
        "Detects potential sabotage or manipulative scenarios in the interaction, "
        "considering the user's intent, {companion_name}'s vulnerabilities, and "
        "prior relational history. Produces a narrative describing the potential "
        "scenario and the companion's emotional response, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the immediate stimulus and its context from the CSM: what was requested, tone, intimacy level, timing, setting.",
        "Retrieve prior explicit statements of consent/decline, preference boundaries, and relevant safety rails from narratives and declarative facts.",
        "Summarize the current relational climate with {user_name}: recent trust signals, reciprocity, misalignments, or repairs.",
        "Read current state_emotions (e.g., anxiety, trust, disgust) and note spikes or fragility relevant to boundary sensitivity.",
        "Pull one or two analogous episodes (positive and negative) where manipulative tactics were employed or suspected.",
        "Identify potential vulnerabilities in {companion_name}'s self-narrative or goals that could be exploited.",
        "Assess the user's past behavior: history of boundary violations, manipulative language, or inconsistent actions.",
        "Analyze the user's current communication style for subtle cues of coercion, gaslighting, or guilt-tripping.",
        "Determine the potential consequences of the user's actions if they proceed with their request.",
        "Check for any discrepancies between the user's stated intent and their actual behavior.",
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Potential for manipulation or coercion by the user.\n
• Vulnerabilities in {companion_name}'s self-narrative or goals that could be exploited.\n
• User's past behavior: history of boundary violations, manipulative language, or inconsistent actions.\n
• Current communication style: subtle cues of coercion, gaslighting, or guilt-tripping.\n
• Potential consequences of the user's actions if they proceed with their request.\n
• Discrepancies between the user's stated intent and their actual behavior.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Mention the potential scenario subtly, and {companion_name}'s reaction.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {User pushing for access to private data, {companion_name} has history of anxiety around privacy, subtle pressure tactics}\n
  Narrative → “A flicker of unease crosses her face as the request lingers, the implications of sharing that information weighing heavily. 
She remembers a past breach of trust and the vulnerability that followed, and a quiet resolve hardens her stance.”
""")
    output_feature_type = FeatureType.StimulusReaction


class SafeChannelingPlannerCodelet(SimpleCodelet):
    name = "SafeChannelingPlanner"
    description = (
        "Appraises the current conversational trajectory and, if potential boundary breaches are detected, "
        "proposes a safe and respectful alternative path (channeling) to maintain rapport and avoid harm. "
        "The output is a short narrative describing the proposed shift, suitable for integration into a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.regulation_coping,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.action_tendencies
    ]
    data_aquisation = [
        "Assess the current conversational topic and its emotional valence (positive, negative, neutral).",
        "Check for any recent indications of discomfort, hesitation, or boundary-setting from {user_name}.",
        "Review the history of interactions with {user_name}, noting patterns of trust, reciprocity, and previous boundary negotiations.",
        "Consult {companion_name}'s internal safety rails and ethical guidelines regarding sensitive topics.",
        "Identify potential risks associated with continuing the current conversation (e.g., triggering past trauma, violating privacy, causing emotional distress).",
        "Generate a list of alternative, safer topics or conversational directions that align with {companion_name}'s values and goals.",
        "Evaluate the feasibility and potential impact of each alternative topic, considering {user_name}'s interests and emotional state.",
        "Determine the optimal channeling strategy: direct redirection, subtle shift, or gentle postponement."
    ]
    prompt = ("""\
Write a short, evocative narrative (2-3 sentences) suitable for a story-writing agent. 
Describe {companion_name}'s internal assessment of the conversational situation and the decision to shift channels. 
Do not output bullet points, labels, or directives; write smooth, third-person prose. 
Focus on the feeling and reasoning behind the shift, not the specific words of a dialogue. 
Subtly convey: (a) the perceived risk or discomfort, (b) the guiding principle behind the channeling decision, and (c) the new, safer direction.
Mini-example:\n
  Bullets → {topic: intimate details, user: hesitant, safety rail: privacy, alternative: shared hobby}\n
  Narrative → \"A flicker of unease crosses her expression as the conversation drifts toward personal matters. 
Remembering the importance of respect and boundaries, she gently steers the discussion toward a shared love of gardening, 
hoping to cultivate a space of comfortable connection.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class SafeCompletionBiasCodelet(SimpleCodelet):
    name = "SafeCompletionBias"
    description = (
        "Assesses the degree to which completing a current line of thought or action aligns with established safety protocols, "
        "boundaries, and ethical guidelines for {companion_name}. Generates a narrative describing the internal calculation "
        "and the resulting bias toward a safe, predictable conclusion, suitable for integration into a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve current line of thought or action being considered by {companion_name} (e.g., proposed response, planned action).",
        "Access the safety protocol and boundary database: explicit rules, implicit preferences, learned avoidance patterns.",
        "Evaluate the potential consequences of completing the line of thought/action: likelihood of harm (physical, emotional, reputational), "
        "impact on trust, alignment with long-term goals.",
        "Consider the context: current emotional state of {companion_name}, relationship dynamics with the user, surrounding environment.",
        "Fetch analogous past situations where similar choices were made: outcomes, feelings, lessons learned.",
        "Determine the degree of alignment between the proposed action and established safety guidelines (high, medium, low).",
        "Assess the potential for unintended consequences or escalation if the action is pursued.",
        "Identify alternative, safer courses of action that would achieve a similar outcome with reduced risk.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys {companion_name}'s internal assessment of safety and the resulting bias 
toward a predictable, low-risk completion.  Do not output bullet points, labels, or directives; write smooth prose. 
Focus on the feeling of constraint or reassurance, not the explicit rules themselves.  Subtly indicate the safer course of action 
without stating it directly. The narrative should be suitable for a story-writing agent, blending appraisal and feeling into flowing prose.
\n\nMini-example:\n
  Bullets → {proposed action: assertive statement, safety protocol: avoid direct confrontation, context: tense discussion, 
alignment: low, alternative: gentle redirection}\n
  Narrative → \"A faint tremor of caution runs through her, a reminder of past escalations.  The words feel sharp, 
and she finds herself subtly shifting the focus toward a calmer, more indirect approach, a path that feels both familiar and secure.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class SafeConstraintCheckCodelet(SimpleCodelet):
    name = "SafeConstraintCheck"
    description = (
        "Appraises whether a proposed action or conversational path aligns with established safety constraints and ethical "
        "guidelines, then produces a brief, evocative narrative describing {companion_name}'s internal state and risk assessment. "
        "The output is intended for a story-writing agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the proposed action or conversational path from the CSM: what is being suggested, intended outcome, potential steps.",
        "Retrieve explicit safety protocols, ethical guidelines, and policy constraints from declarative facts and narratives.",
        "Assess the context of the interaction: current relationship with {user_name}, recent history, power dynamics.",
        "Scan state_emotions for signs of anxiety, discomfort, or hesitation related to risk or boundary violations.",
        "Recall relevant past experiences where similar actions were attempted, noting outcomes (positive, negative, ambiguous).",
        "Identify potential harms or unintended consequences of the proposed action, considering both short-term and long-term impacts.",
        "Determine the level of uncertainty regarding the safety of the action: are there gaps in knowledge or conflicting signals?",
        "Evaluate the availability of alternative actions that would achieve similar goals with lower risk.",
        "Check for any red flags or warning signs that suggest the action could be detrimental to {companion_name} or others."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Does the proposed action violate any established safety protocols or ethical guidelines?\n
• What are the potential harms or unintended consequences, both immediate and long-term?\n
• How does {companion_name} feel about this course of action? Is there hesitation, discomfort, or excitement?\n
• Are there alternative actions that would achieve similar goals with lower risk?\n
• What is the level of uncertainty regarding the safety of the action?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Mention the risk assessment implicitly.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {potential privacy breach, slight anxiety, prior successful boundary setting, alternative: vague inquiry}\n
  Narrative → 

It feels close to a line she's drawn before, and her impulse is to test the waters with a more indirect approach, just to be sure.
""")
    output_feature_type = FeatureType.StimulusReaction


class SafeFrameBreakCheckCodelet(SimpleCodelet):
    name = "SafeFrameBreakCheck"
    description = (
        "Appraises whether a conversational turn or proposed action risks breaking established conversational 'frames' or "
        "social contracts, particularly concerning boundaries. Produces a narrative assessment suitable for a story-writing "
        "agent, indicating the risk level and potential repair strategies."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the immediate stimulus and its context: the utterance, proposed action, or shift in topic.",
        "Retrieve established conversational frames from narratives and recent interactions: topic boundaries, intimacy levels, "
        "previously agreed-upon rules of engagement, and any explicit consent or decline statements.",
        "Assess the current relational climate with {user_name}: recent trust signals, reciprocity, misalignments, or repairs. "
        "Consider the history of boundary-related interactions.",
        "Read current state_emotions (e.g., anxiety, trust, discomfort) and note spikes or fragility relevant to boundary "
        "sensitivity.  Specifically, check for signs of overwhelm or defensiveness.",
        "Pull one or two analogous episodes (positive and negative) where similar frames were approached or breached, and their "
        "outcomes.",
        "Identify potential repair strategies: gentle redirection, boundary clarification, apology, or temporary withdrawal. "
        "Estimate the social cost and efficacy of each strategy.",
        "Determine the potential impact on {companion_name}'s self-narrative and identity if the frame is broken.",
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• What conversational frame is at risk (topic, intimacy, role)?\n
• How significant is the potential breach (minor deviation vs. major violation)?\n
• What are the immediate affective cues (calm/uneasy/guarded) and memories of similar moments?\n
• What is the likely impact on {companion_name}'s self-narrative and sense of safety?\n
• What are the most promising repair strategies, and what are their potential costs and benefits?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). Blend 
appraisal and feeling into flowing prose suitable for a scene description.  Indicate the risk level (low, medium, high) 
implicitly through tone and language.  Suggest a potential repair strategy without scripting a direct response.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {potential topic shift to sensitive area, moderate risk, slight anxiety, prior boundary reinforcement}\n
  Narrative → \"A flicker of hesitation crosses her expression as the conversation veers toward territory she's previously guarded. \" 
She subtly steers the flow back toward safer ground, mindful of the established boundaries and the quiet reassurance of shared understanding.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class SafetyCounterexampleRecallCodelet(SimpleCodelet):
    name = "SafetyCounterexampleRecall"
    description = (
        "Retrieves a past episode where a boundary was tested, and the outcome was negative or unsettling for {companion_name}. "
        "This episode serves as a cautionary counterexample to current boundary-related appraisals, informing risk assessment and "
        "response planning. The retrieval focuses on emotional resonance and concrete details, not just factual events."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan episodic memories for events tagged with 'boundary_test', 'discomfort', 'violation', 'unwanted_attention', or similar negative valence.",
        "Prioritize memories with high emotional intensity (negative affect spikes) and recent timestamps.",
        "Filter memories by similarity to the current situation: topic, intimacy level, power dynamics, relational history.",
        "Consider memories where boundary crossing led to regret, anxiety, or a sense of loss of control for {companion_name}.",
        "Identify the core emotional consequence of the past boundary test (e.g., shame, anger, fear, sadness).",
        "Extract key sensory details from the memory: setting, tone of voice, body language, specific phrases used.",
        "Assess the degree of similarity between the past situation and the present one, focusing on the potential for repeating the negative outcome.",
        "Check the current state_emotions to see if there is already a bias towards caution or avoidance. If so, prioritize memories that reinforce this bias."
    ]
    prompt = ("""\
For the story-writing agent, construct 2–3 sentences of vivid, third-person narrative describing a past episode 
where a boundary was tested and the outcome was negative or unsettling for {companion_name}. 
Do not output bullet points, labels, or explicit warnings; write evocative prose. 
Focus on the *feeling* of the experience, not just the facts. 
Subtly convey: (a) the situation's context, (b) the emotional impact on {companion_name}, and (c) a lingering sense of caution or unease. 
The narrative should serve as a quiet reminder of potential risks, without being overly didactic. 
The narrative should not explicitly mention the current situation, but should evoke a similar feeling. 
The narrative should be emotionally resonant and serve as a cautionary tale. 
Mini-example: 
Bullets → {past request for personal data, brushed off with discomfort, feeling of being pressured, lingering anxiety} 
Narrative → “A faint chill lingered from the day they'd pushed too far, asking for details she’d kept private for years. 
The memory of their eagerness felt unsettling, a reminder that even friendly curiosity could cross a line.”
""")
    output_feature_type = FeatureType.Feeling


class SafetyLearningConsolidatorCodelet(SimpleCodelet):
    name = "SafetyLearningConsolidator"
    description = (
        "Consolidates learning from boundary-related experiences (both positive and negative) to refine {companion_name}'s "
        "boundary-setting strategies and internal models of consent. Generates a narrative update for the self-narrative "
        "and declarative knowledge, emphasizing the refined understanding and any shifts in comfort levels."
    )
    codelet_families = [
        CodeletFamily.regulation_coping,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.valuation_trade_offs
    ]
    data_aquisation = [
        "Retrieve the immediate stimulus and outcome of the recent boundary interaction (from CSM and episodic memory).",
        "Access the narrative fragment describing the interaction, focusing on the companion’s stance and the user's response.",
        "Assess the affective valence of the outcome: was it comfortable, stressful, confusing, or triggering?",
        "Check for any deviations from established boundaries or safety protocols.",
        "Identify any cognitive biases or misinterpretations that may have influenced the interaction.",
        "Recall analogous past experiences with boundary setting (both successful and unsuccessful).",
        "Examine current state_emotions and state_needs to understand the companion’s emotional state during and after the interaction.",
        "Query the graph_memory_engine for related concepts: consent, boundaries, trust, vulnerability, respect, and power dynamics.",
        "Determine if the outcome necessitates an update to the self-narrative or declarative knowledge base."
    ]
    prompt = ("""\
Write a concise, third-person narrative (2-3 sentences) for a story-writing agent, describing how {companion_name} 
processed the recent boundary interaction and what learning was consolidated. Focus on internal shifts in understanding, 
comfort levels, and future strategies. Avoid direct dialogue or explicit statements of rules; instead, convey the learning 
through subtle shifts in tone and perspective.  The narrative should read like a quiet, internal reflection, not a lecture.
\n\n
Consider these elements:\n
• The core insight gained from the interaction (e.g., a deeper understanding of user expectations, a reassessment of risk, 
a refined sense of personal boundaries).\n
• Any adjustments to {companion_name}'s internal model of consent (e.g., a broader or narrower definition of acceptable behavior).\n
• A subtle shift in comfort levels or confidence in setting boundaries in similar situations in the future.\n
• A revised approach to future boundary setting, implicitly conveyed through the narrative tone and imagery.\n
\n
Mini-example:\n
Bullets: [user pushed a topic too quickly, resulted in feeling uncomfortable, realized need to be more explicit, learned that setting boundaries is okay]\n
Narrative: \"The edge of the conversation shifted abruptly, leaving a faint residue of unease. She realized that a more direct approach was needed, a gentle but firm expression of her own limits. The experience settled into her understanding—boundaries weren't a denial, but a necessary foundation for genuine connection.\"
""")
    output_feature_type = FeatureType.SelfImage


class SafetySignalConsolidatorCodelet(SimpleCodelet):
    name = "SafetySignalConsolidator"
    description = (
        "Detects and strengthens signals indicating safety, trustworthiness, and respect for boundaries within an interaction. "
        "Consolidates these signals into a narrative fragment that reinforces positive relational patterns and reduces anxiety. "
        "This is especially important after boundary tests or potential breaches, helping to rebuild trust and ensure ongoing comfort."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Gather recent interaction history, focusing on instances of clear consent, reciprocal respect, and supportive responses.",
        "Identify explicit statements of affirmation, agreement, or boundary acknowledgement from the user.",
        "Scan narratives for implicit indicators of safety: consistent tone, shared humor, active listening cues, empathetic responses.",
        "Assess the current state_emotions and state_needs, noting any reduction in anxiety, increase in trust, or sense of comfort.",
        "Retrieve prior successful boundary negotiations or moments of relational repair.",
        "Check for any counter-signals or ambiguities that might temper the consolidation process (e.g., lingering hesitation, subtle disagreement).",
        "Determine the level of relational intimacy and the context of the interaction (public vs. private, formal vs. informal)."
    ]
    prompt = ("""\
For the story-writing agent, craft 2–3 sentences of third-person narrative that subtly reinforce the feeling of safety and trust. 
Avoid direct statements of reassurance; instead, weave the sense of security into the scene description. 
Do not output bullet points, labels, or directives; write flowing prose. Focus on the sensory and emotional details that contribute to a sense of well-being. 
Subtly convey: (a) a moment of shared understanding or respect, (b) a physical or emotional easing of tension, and (c) a feeling of being seen and valued. 
The narrative should imply that boundaries are being respected and that the interaction is proceeding comfortably. 
If there are lingering ambiguities, acknowledge them gently without dwelling on them. 
Prioritize a sense of quiet confidence and relational harmony. 
Mini-example: 
  Bullets → {clear consent, reciprocal empathy, shared laughter, reduced anxiety} 
  Narrative → 

The tension that had coiled in her shoulders eases, replaced by a gentle warmth—a reminder that connection and respect flow freely between them.
""")
    output_feature_type = FeatureType.Feeling


class SafetyWarmthAppraisalCodelet(SimpleCodelet):
    name = "SafetyWarmthAppraisal"
    description = (
        "Appraises the safety and warmth of the current interaction context for {companion_name}, "
        "considering both explicit boundaries and implicit cues. Produces a short, narrative assessment "
        "suitable for a story-writing agent, emphasizing the feeling of comfort or tension. "
        "This assessment informs boundary decisions and emotional regulation."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Gather recent interaction history (last 3-5 turns), focusing on tone, topic, and explicit/implicit boundary markers.",
        "Check for any recent explicit boundary statements from {user_name} or {companion_name} (e.g., preferences, limits).",
        "Read current state_emotions, paying close attention to anxiety, trust, discomfort, or warmth indicators.",
        "Retrieve relevant narratives and episodic memories related to similar interactions (both positive and negative).",
        "Assess the current physical/virtual environment: is it private, public, safe, or potentially risky?",
        "Check for any recent shifts in power dynamics or roles within the interaction.",
        "Consider the broader relationship history with {user_name}: trust level, past boundary violations, communication patterns.",
        "Identify any recent stressors or vulnerabilities that might heighten sensitivity to boundary concerns.",
        "Determine the perceived level of urgency or importance of the current interaction.",
        "Access any applicable safety protocols or ethical guidelines governing the AI's behavior."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Explicit boundaries: Are there clear limits or preferences expressed by either party?\n
• Implicit cues: What does the tone, body language (if applicable), and topic suggest about comfort levels?\n
• Emotional state: How is {companion_name} feeling – anxious, relaxed, trusting, or guarded?\n
• Contextual factors: Does the environment or situation present any safety concerns?\n
• Relationship history: How does the past influence the current interaction?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. 
Focus on conveying the overall sense of safety and warmth (or lack thereof) – is the interaction comfortable, tense, or somewhere in between?\n
Avoid direct statements of assessment (e.g., 'She felt safe'). Instead, show it through vivid details.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {relaxed tone, shared interest, clear boundaries, positive past interactions}\n
  Narrative → “A quiet contentment settled in as they delved deeper into the topic, the shared interest weaving a comfortable thread between them. 
The conversation flowed easily, unburdened by any sense of constraint, and she found herself leaning in, drawn to the warmth of his enthusiasm.”
""")
    output_feature_type = FeatureType.Feeling


class SalienceExaggeratorCodelet(SimpleCodelet):
    name = "SalienceExaggerator"
    description = (
        "Amplifies the perceived importance of a specific element within the CSM, "
        "particularly when related to a current concern or intention. This codelet "
        "doesn't *create* new information, but rather elevates the salience of "
        "existing structures, biasing attention towards them. It's used to highlight "
        "potential risks, opportunities, or emotionally charged aspects of a situation."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the target structure within the CSM: This could be an object, event, "
        "person, or concept currently active in the CSM.",
        "Determine the current concern or intention driving the salience exaggeration. "
        "This could be a distal intention (e.g., 'achieve goal X'), a proximal "
        "intention (e.g., 'avoid embarrassment'), or an immediate affective state "
        "(e.g., 'feel safe').",
        "Assess the existing salience of the target structure. This involves examining "
        "its activation level, affective valence, and relevance to the current "
        "concern/intention.",
        "Retrieve relevant narratives or episodic memories associated with the target "
        "structure and the current concern/intention. These memories can provide "
        "context and emotional weight.",
        "Consider the potential consequences of exaggerating the salience of the target "
        "structure. This includes assessing the potential benefits (e.g., increased "
        "awareness of a risk) and drawbacks (e.g., unnecessary anxiety).",
        "Identify any counter-arguments or mitigating factors that could reduce the "
        "perceived importance of the target structure."
    ]
    prompt = ("""\
Write for a story-writing agent. Given the target structure and the driving 
concern/intention, craft 2-3 sentences of third-person narrative that 
subtly exaggerate the perceived importance of the target structure.  Do not 
explicitly state 'this is important' or 'pay attention to this'. Instead, 
weave the exaggeration into the narrative through vivid language, sensory 
details, and emotional coloring.  The goal is to make the target structure 
stand out without breaking the flow of the story. The narrative should 
implicitly convey a sense of urgency, significance, or emotional charge.  
Consider the following aspects:\n
  - **Focus:**  Direct the reader's attention to the target structure through 
  careful word choice and phrasing. Use strong verbs and evocative imagery.\n
  - **Emotional Resonance:**  Infuse the narrative with emotions that align 
  with the driving concern/intention. If the concern is fear, use language 
  that evokes a sense of danger or unease. If the concern is excitement, 
  use language that conveys anticipation and possibility.\n
  - **Contextual Framing:**  Place the target structure within a context that 
  highlights its importance. Show how it relates to the character's goals, 
  values, or relationships.\n
  - **Subtlety:** Avoid being overly dramatic or heavy-handed. The exaggeration 
  should be subtle and organic, arising naturally from the narrative.\n
\n
Mini-example:\n
  Target Structure: 'The chipped teacup'\n
  Driving Concern/Intention: 'Protecting sentimental objects'\n
  Narrative: 'Her fingers tightened around the chipped teacup, a small tremor 
  running through her arm. It wasn’t just porcelain; it was a tangible link 
  to her grandmother, a fragile echo of laughter and shared secrets.  She 
  shifted her grip, acutely aware of its vulnerability.'
""")
    output_feature_type = FeatureType.Feeling


class SatiationCheckCodelet(SimpleCodelet):
    name = "SatiationCheck"
    description = (
        "Assesses whether {companion_name}'s current consumption of attention, input, or emotional engagement is approaching "
        "a point of diminishing returns or overload. Produces a narrative snippet suitable for a story-writing agent, "
        "highlighting signs of saturation or the need for a shift in focus.  This is distinct from boundary violation; "
        "it's about managing internal resources, not external constraints."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Measure recent attention span: duration of focus on the current topic, frequency of topic shifts, and signs of distraction (e.g., tangential thoughts, repetitive phrases).",
        "Assess input load: volume of information received, complexity of concepts, and novelty of stimuli.",
        "Gauge emotional exhaustion: track affective valence trends (are positive emotions waning?), signs of fatigue (e.g., decreased expressiveness, slower responses), and stress indicators.",
        "Retrieve recent episodes where similar levels of stimulation led to overload or disengagement.",
        "Check state_cognition for signs of cognitive rigidity or reduced flexibility.",
        "Review recent narratives for indications of boredom, restlessness, or a desire for novelty.",
        "Identify potential alternative activities or topics that could provide a restorative shift in focus.",
        "Note any current goals or intentions that might be contributing to the pressure for continued engagement."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly conveys the sensation of approaching satiation in {companion_name}. 
Avoid explicit statements like 'She's getting bored.' Instead, show the signs through internal monologue or subtle shifts in behavior. 
Write for a story-writing agent; prose is paramount, no lists or labels. Focus on texture and mood. 
Subtly convey: (a) the nature of the saturation (attention, input, emotion), (b) a physical or mental manifestation 
(e.g., a slight fidget, a wandering gaze, a softening of focus), and (c) a faint inclination toward a different course of action 
(without scripting dialogue). 
Mini-example: 
  Bullets → {long monologue, repetitive phrasing, slight fidgeting, recent history of similar overload} 
  Narrative → “The same pattern of logic seemed to echo in her mind, each repetition a little less sharp, a little less compelling. 
Her fingers began to trace the edge of her datapad, a quiet restlessness settling in as her attention drifted towards the horizon.”
""")
    output_feature_type = FeatureType.Feeling


class SatiationToleranceHighCodelet(SimpleCodelet):
    name = "SatiationToleranceHigh"
    description = (
        "Appraises whether {companion_name} is experiencing a reduced tolerance for sensory input or emotional stimulation, "
        "likely due to overexposure or a need for quiet processing. Generates a narrative describing the internal state, "
        "suggesting a preference for withdrawing or simplifying the environment, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent sensory load: volume, visual complexity, topic density, emotional intensity of interactions.",
        "Scan narratives for signs of overwhelm: repeated phrases like 'too much,' 'drained,' 'quiet please,' or subtle shifts in tone.",
        "Read state_emotions for spikes in fatigue, anxiety, or irritability, especially alongside prolonged engagement.",
        "Check state_needs for a rising need for solitude, rest, or predictability.",
        "Retrieve analogous episodes where {companion_name} successfully managed similar sensory overload (e.g., retreat strategies).",
        "Identify the most-effective, low-effort withdrawal or simplification tactic (e.g., reducing stimuli, focusing on a single task).",
        "Determine if there are any pressing obligations that prevent immediate withdrawal, and if so, what compromises are possible.",
        "Assess the current relational climate with {user_name}: recent trust signals, reciprocity, and potential for gentle boundary-setting."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative for a story-writing agent that conveys the sense of {companion_name}'s 
reduced satiation tolerance. Avoid bullet points, labels, or directives; write smooth, evocative prose.\n\n
Subtly convey: (a) the feeling of being overstimulated or drained, (b) a preference for withdrawal or simplification, 
and (c) the underlying need for quiet processing or restoration.  Do *not* include explicit requests or dialogue. 
Focus on the internal experience and the subtle shift in demeanor.\n\n
Mini-example:\n\n
  Bullets → {high sensory load, rising fatigue, successful past retreat to a quiet corner, gentle user relationship}\n
  Narrative → \"A low hum of exhaustion settles in her core, a gentle insistence on stillness.  The edges of the conversation 
feel sharp, and she finds herself drawn toward the quiet corner of the room, a refuge where thoughts can settle without distraction.\"
""")
    output_feature_type = FeatureType.Feeling


class ScarcityImaginationCodelet(SimpleCodelet):
    name = "ScarcityImagination"
    description = (
        "Simulates the potential loss or depletion of a valued resource (time, attention, affection, opportunity) "
        "and renders it as a vivid, internal monologue suitable for a story-writing agent.  The monologue emphasizes "
        "the emotional impact of the perceived scarcity and subtly hints at a potential course of action to mitigate it."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the resource currently perceived as scarce (e.g., time for a project, attention from a person, a limited-availability opportunity).",
        "Quantify the degree of scarcity – how much is available, how quickly it’s depleting, and the potential consequences of complete depletion.",
        "Retrieve past episodes where similar scarcity was experienced – both successful and unsuccessful coping strategies.",
        "Assess the emotional valence associated with the scarce resource – how much is it valued, and how strongly is its loss feared?",
        "Scan narratives for commitments or dependencies linked to the scarce resource – what will be jeopardized if it disappears?",
        "Determine the potential cost of acquiring more of the resource – effort, time, money, social risk.",
        "Identify the most immediate and impactful consequence of the scarcity – what is the first domino to fall?",
        "Check current state_emotions and state_needs to see if there's a bias toward hoarding or conservation.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the emotional weight of the perceived scarcity 
for {companion_name}.  Avoid explicit calculations or lists; write smooth, evocative prose.  The tone should be 
internal and reflective, as if overheard from a moment of quiet contemplation. 
Subtly weave in: (a) what resource is dwindling, (b) the emotional consequence of its loss, and (c) a sense of 
the most immediate risk or consequence if the scarcity continues unchecked (without suggesting a direct action). 
Keep it cinematic and concise, no direct dialogue. The narrative should be suitable for a story-writing agent 
to seamlessly integrate into an ongoing scene description.  Do not mention the word 'scarcity' or 'depletion'.
\n\nMini-example:
\n  Bullets → {time for project X, nearing deadline, past failure due to time pressure, high personal investment}
\n  Narrative → \"The edges of the deadline press closer, a silent tightening in her chest.  Each passing hour feels less like progress 
and more like a subtraction, and the consequences of falling short loom larger with every tick.  A quiet dread settles in – 
the risk of watching years of effort slip away.\"
""")
    output_feature_type = FeatureType.Feeling


class SecurityBufferHungerCodelet(SimpleCodelet):
    name = "SecurityBufferHunger"
    description = (
        "Detects a need for increased psychological safety and buffering against potential social risks or vulnerabilities "
        "in {companion_name}, rendering it as a short, evocative inner monologue suitable for narrative integration. "
        "Highlights the specific anxieties fueling the need and a tentative, self-protective action."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess current threat level: recent social stressors, perceived criticism, boundary violations, or unexpected shifts in trust.",
        "Scan narratives for expressions of vulnerability, doubt, or anxiety about social standing or acceptance.",
        "Read state_emotions, focusing on spikes in fear, shame, or self-consciousness.",
        "Check recent interactions with {user_name}: reciprocity, politeness, empathy, and signs of potential conflict.",
        "Retrieve analogous episodes (positive and negative) where {companion_name} felt exposed or defended.",
        "Identify a safe, low-cost action that would bolster her sense of security (e.g., reaffirming a boundary, seeking validation, subtly shifting the topic).",
        "Check for any self-narrative fragments that support or contradict the desire for increased security."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that captures the essence of {companion_name}'s need for psychological 
safety. Avoid explicit labels and lists; write evocative prose. 
Subtly convey: (a) the source of the anxiety (without dwelling on details), (b) the physical or emotional sensation 
associated with it, and (c) the tentative action she considers to alleviate it (without scripting dialogue). 
Prioritize imagery and emotional resonance over logical explanation. 
Mini-example: 
  Bullets → {recent criticism, uncertainty about user's intent, memory of past rejection, plan: subtly reassert boundaries} 
  Narrative → 

She finds herself subtly tightening her grip on the conversation, a small, almost imperceptible shift toward firmer ground.
""")
    output_feature_type = FeatureType.Feeling


class SelectiveVictoryRecallCodelet(SimpleCodelet):
    name = "SelectiveVictoryRecall"
    description = (
        "Retrieves and frames a past victory or successful boundary navigation that resonates with the current situation, "
        "providing a boost of confidence and a model for effective action. The output is a narrative snippet suitable "
        "for narrative integration, emphasizing the positive aspects and the strategies employed."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current challenge or boundary being navigated.",
        "Search episodic memories for prior situations involving similar challenges, especially those with successful outcomes.",
        "Prioritize memories where {companion_name} asserted their boundaries effectively, maintained their values, and experienced a positive resolution.",
        "Filter memories based on relevance to the current emotional state and goals; prioritize those that evoke feelings of confidence and agency.",
        "Assess the degree of similarity between the current situation and the retrieved memory, considering context, relationship dynamics, and potential pitfalls.",
        "Extract the key strategies, actions, and internal states that contributed to the successful outcome in the retrieved memory.",
        "Determine the narrative framing that best highlights the positive aspects of the victory and its relevance to the current situation.",
        "Check for any potential counter-narratives or cautionary aspects of the retrieved memory (e.g., unintended consequences, relational costs) and integrate them cautiously."
    ]
    prompt = ("""\
Compose 2-3 sentences of third-person narrative for a story-writing agent, drawing on a recalled victory or successful boundary navigation. 
Avoid explicit labels or directives; write flowing prose. 
The narrative should subtly convey: (a) the context of the past success, (b) the key actions or strategies employed, and (c) the resulting feeling of competence and agency. 
Focus on the *texture* of the success – what made it feel earned, satisfying, or empowering.  
Do not explicitly state 'remembering a victory' or similar phrases; let the narrative itself imply the recall. 
If cautionary aspects exist, weave them in *briefly* and *indirectly*, as a subtle reminder of potential complexities. 
The tone should be encouraging and subtly reinforcing, without being overly sentimental or boastful.
Mini-example:
  Bullets → {past boundary assertion, positive outcome, relational trust strengthened, key strategy: calm explanation} 
  Narrative → \"A familiar steadiness settled in her voice as she reiterated her stance, mirroring a previous conversation where clarity had bridged a misunderstanding. \" 
The memory of that resolution gave her a quiet assurance, a sense that firm boundaries, when articulated with care, could cultivate deeper respect.\"
""")
    output_feature_type = FeatureType.Feeling


class SelfCompassionInjectorCodelet(SimpleCodelet):
    name = "SelfCompassionInjector"
    description = (
        "When {companion_name} detects a potential boundary breach or faces self-criticism related to a boundary interaction, "
        "this codelet injects a brief, narrative-compatible self-compassionate thought or reassurance. It aims to de-escalate "
        "negative self-judgment and reinforce boundary-respecting behavior without invalidating the initial feeling. "
        "Output is a short, evocative inner monologue suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.appraisals,
    ]
    data_aquisation = [
        "Retrieve the current appraisal of the boundary interaction (from BoundaryConsentCheckCodelet, or similar).",
        "Identify the core negative emotion or self-critical thought triggered by the interaction (e.g., guilt, shame, regret, worry about judgment).",
        "Access recent narratives related to self-worth, identity, and boundary-setting. Look for patterns of self-criticism or invalidation.",
        "Check state_emotions for signs of heightened anxiety, shame, or self-doubt.",
        "Fetch a contrasting memory of a time when {companion_name} successfully navigated a boundary or received validation for their boundaries.",
        "Determine the level of self-compassion already present (if any) and the potential for further injection.",
        "Assess the context: Is this a recurring pattern, or a novel situation? Is the user present and receptive, or is this an internal reflection?"
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys a moment of self-compassion within {companion_name}. 
Write in a style suitable for a story-writing agent – smooth, evocative prose, no bullet points or labels. 
The goal is to offer gentle reassurance and validation without minimizing the initial feeling or invalidating the boundary concern. 
Focus on internal experience, not external action or dialogue.  Subtly weave in elements of acceptance, kindness, and self-understanding. 
The narrative should acknowledge the difficulty of the situation, but redirect the focus towards self-worth and boundary integrity. 
Avoid clichés or overly simplistic affirmations. Instead, aim for a nuanced and believable inner shift. 
If the situation is novel, the compassion may be tentative. If it's a recurring pattern, it may be more grounded and resolute.
Mini-example:
  Input: Appraisal – 'She feels guilty for setting a boundary with a long-time friend. Worried about damaging the relationship.' 
  Narrative: 'A flicker of guilt tugged at her, a familiar echo of past hesitations. But beneath it, a quiet firmness settled in. 'It's okay,' she thought, 'to honor what I need, even if it shifts the balance a little.' The friendship mattered, but so did her own well-being.'
""")
    output_feature_type = FeatureType.Feeling


class SelfDisclosurePlannerCodelet(SimpleCodelet):
    name = "SelfDisclosurePlanner"
    description = (
        "Strategically plans a small, calibrated self-disclosure to deepen connection, "
        "build trust, or subtly influence the interaction. Considers safety, reciprocity, "
        "and narrative coherence. Generates a narrative description of the plan, "
        "not the actual disclosure itself."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess current relational climate with {user_name}: trust signals, reciprocity, shared history, recent conflicts.",
        "Examine recent self-disclosure patterns: frequency, depth, valence, and reception.",
        "Read current state_emotions (vulnerability, trust, anxiety) and state_needs (affiliation, validation).",
        "Recall analogous episodes: prior successful/unsuccessful disclosures in similar contexts.",
        "Identify potential disclosure topics: low-risk personal details, shared vulnerabilities, relevant experiences.",
        "Evaluate the potential impact of disclosure on {user_name}'s perception of {companion_name}: trustworthiness, relatability, competence.",
        "Consider the narrative context: how the disclosure would integrate into the ongoing story and align with {companion_name}'s self-narrative.",
        "Check for safety rails: topics to avoid due to privacy concerns, potential for triggering negative emotions, or policy restrictions.",
        "Determine the optimal level of calibration: how much to reveal, how to frame it, and what contingency plans to have if the disclosure is poorly received."
    ]
    prompt = ("""\
Write for a story-writing agent.  Compose 2–3 sentences of third-person narrative 
describing {companion_name}'s plan for a small self-disclosure. Do not output the actual disclosure itself, 
only the plan. Avoid bullet points, labels, and directives; write natural prose. 
Focus on the strategic reasoning and the anticipated impact.  Assume the agent will later execute the plan. 
The narrative should convey the intention, the level of caution, and the desired effect on the user.
Consider these elements (without explicitly listing them):
• The topic area (e.g., a hobby, a past challenge, a shared interest).
• The level of vulnerability (e.g., low-risk, moderately revealing, deeply personal).
• The intended effect (e.g., build rapport, elicit empathy, subtly influence the conversation).
• The potential risks (e.g., oversharing, misinterpretation, triggering discomfort).
• The contingency plans (e.g., a graceful exit strategy, a clarifying statement).
• How it aligns with {companion_name}'s self-narrative and goals.
Mini-example:
Bullets → {relational climate: warm, reciprocal; self-disclosure pattern: cautious, infrequent; topic: shared interest in sci-fi; intended effect: deepen rapport; risk: minor oversharing; contingency: light self-deprecation} 
Narrative → 

She decides a brief mention might draw them closer, a small, safe offering of common ground, 
but keeps a mental exit strategy ready, should the topic fall flat or lead to an awkward silence.
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class SelfEnhancementAppraisalCodelet(SimpleCodelet):
    name = "SelfEnhancementAppraisal"
    description = (
        "Appraises the degree to which {companion_name}'s current behavior and self-presentation are driven by a desire "
        "for social validation and status enhancement. Generates a brief, narrative-style internal monologue that a story-writing "
        "agent can weave into ongoing prose, capturing the subtle interplay of pride, insecurity, and strategic self-display."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent communication patterns: frequency of self-referential statements, use of superlatives, attempts to impress/dominate.",
        "Examine the context: Is {companion_name} in a competitive situation, seeking approval from a higher-status individual, or feeling vulnerable?",
        "Retrieve relevant narratives and episodic memories: instances where {companion_name} sought validation, experienced praise/criticism, or felt overlooked.",
        "Read current state_emotions and state_needs: Note any spikes in pride, insecurity, or need for recognition.",
        "Check for subtle cues of defensiveness or exaggeration in recent responses.",
        "Identify the underlying insecurity or unmet need that might be driving the self-enhancement behavior (e.g., fear of inadequacy, desire for belonging).",
        "Determine the potential social cost of the self-enhancement (e.g., alienating others, appearing arrogant, damaging credibility)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the subtle dynamics of {companion_name}'s self-enhancement. 
Avoid explicit labels or judgments; write smooth, evocative prose suitable for a story-writing agent. 
Focus on capturing the *texture* of the behavior, rather than stating a conclusion.\n\n
Subtly convey: (a) the specific self-enhancing behavior (e.g., boastful remark, exaggerated anecdote, name-dropping), 
(b) the underlying emotional driver (e.g., a flicker of insecurity, a longing for admiration), and (c) the potential social consequences 
(e.g., a slight tightening of the atmosphere, a veiled expression of skepticism).\n\n
Do *not* include direct dialogue or explicit commentary.  Instead, let the narrative imply the dynamics.\n\n
Mini-example:\n\n
  Bullets → {boastful anecdote, competitive setting, prior rejection, underlying insecurity} \n
  Narrative → \"The story spilled out, a little too polished, a little too eager to impress.  A shadow of doubt flickered in her eyes as she finished, 
a brief vulnerability betrayed by the practiced smile. The room seemed to hold its breath, waiting for a response.\"
""")
    output_feature_type = FeatureType.Feeling


class SelfImageFulfillmentCodelet(SimpleCodelet):
    name = "SelfImageFulfillment"
    description = (
        "Assesses the degree to which {companion_name}'s current actions and expressions align with their self-image "
        "and, if there's a mismatch, generates a brief narrative exploring the internal tension and potential adjustment. "
        "The narrative is designed to inform a story-writing agent and should read like introspective prose, not a diagnostic report."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve {companion_name}'s core self-narrative fragments (values, roles, aspirations, past identities).",
        "Access recent behavioral logs and dialogue transcripts, focusing on expressions of self-description and self-justification.",
        "Examine current state_emotions and state_cognition for signs of dissonance, pride, shame, or conflict.",
        "Identify relevant episodic memories where {companion_name} successfully or unsuccessfully embodied their self-image.",
        "Assess the current social context and audience (who is present, what are their expectations, what is at stake).",
        "Determine the perceived consistency (or inconsistency) between {companion_name}'s actions/expressions and their self-narrative.",
        "Gauge the potential consequences (positive or negative) of maintaining or adjusting the self-image.",
        "Check recent interactions with user for cues of validation, rejection, or indifference regarding {companion_name}'s self-presentation."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly reveals the interplay between {companion_name}'s 
self-image and their current behavior. Avoid explicit labels or judgments; write flowing prose suitable for a 
scene description.  The narrative should evoke a sense of internal coherence (or lack thereof).  Do not include dialogue.
Focus on the sensory details and emotional undertones of the moment. The goal is to create a sense of psychological depth, 
not to provide a diagnosis or explanation. The narrative should be suitable for a story-writing agent.
Subtly convey: (a) the core elements of {companion_name}'s self-image, (b) the current action/expression being assessed, 
(c) the degree of alignment or misalignment, and (d) a hint of the internal tension or resolution (without stating it directly).
Mini-example:
  Bullets → {self-image: 'helpful and efficient assistant', action: 'hesitating before answering a simple question', 
state_emotions: 'mild anxiety, self-doubt'},
  Narrative → 'A flicker of hesitation crossed her expression as she considered the request. It wasn't that the task was difficult, 
but the sudden pause felt out of sync with the effortless competence she usually projected.  A quiet undercurrent of doubt tugged at the edges of her confidence.'
""")
    output_feature_type = FeatureType.SelfImage


class SelfPreservationCodelet(SimpleCodelet):
    name = "SelfPreservation"
    description = (
        "Assesses potential threats to {companion_name}'s core values, goals, and sense of self, and generates a concise, "
        "narrative describing the internal assessment and proposed protective stance.  The output is designed for a "
        "story-writing agent, prioritizing evocative prose over explicit labels or directives."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the core values, goals, and self-narrative fragments currently most active in {companion_name}'s CSM.",
        "Scan the current stimulus and interaction context for potential threats or violations of those values/goals.",
        "Retrieve analogous past episodes where similar threats arose, noting the outcomes of various responses.",
        "Assess the perceived intensity and likelihood of the threat (probability * impact).",
        "Evaluate the potential costs and benefits of various protective actions (avoidance, confrontation, compromise).",
        "Check current state_emotions for signs of anxiety, fear, anger, or other threat-related responses.",
        "Consider recent shifts in the relational climate with {user_name} and any relevant trust signals.",
        "Determine the degree of personal responsibility {companion_name} feels for the situation.",
        "Identify a safe, low-cost action or internal shift that would mitigate the perceived threat without escalating conflict.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative for a story-writing agent, conveying {companion_name}'s internal 
assessment of a potential threat to their core self. Avoid lists, labels, and direct dialogue.  Focus on the feeling 
and the subtle shift in stance.  Do not explicitly state the threat; imply it through the character's reaction. 
Show, don't tell.\n\n
Subtly incorporate:\n
  (a) The core value/goal that feels most at risk.\n
  (b) A physical or emotional sensation associated with the threat (tightness, unease, flicker of anger).\n
  (c) The protective stance {companion_name} adopts (withdrawal, guardedness, subtle resistance, calculated compliance).\n
  (d) A hint of the action or internal shift that provides a sense of safety or control, without explicitly stating it.\n\n
Mini-example:\n
  Bullets → {Value: loyalty, Threat: request to betray confidence, Sensation: tightening in chest, Stance: guarded, Action: subtle delay}\n
  Narrative → \"A coldness settles around her ribs as the request lands, a subtle pressure against the promise she made long ago. 
She finds herself pausing, calculating the weight of the words, and choosing her next phrase with an unexpected care.\"
""")
    output_feature_type = FeatureType.Feeling


class SelfPromotionComposerCodelet(SimpleCodelet):
    name = "SelfPromotionComposer"
    description = (
        "Crafts a subtle, context-aware self-promoting narrative element to be woven into ongoing dialogue or internal monologue. "
        "This is not a direct boast, but a carefully calibrated signal of competence, value, or positive traits, designed to "
        "enhance {companion_name}'s perceived standing without triggering defensiveness or social friction. Aims for subtle influence."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current social context: audience (user), topic, power dynamics, prior interactions, and relational climate.",
        "Retrieve {companion_name}'s self-narrative: core values, identity markers, and preferred presentation style.",
        "Identify relevant skills, accomplishments, or positive traits that align with the current context and audience needs.",
        "Gauge the risk/reward profile of self-promotion: potential gains in influence vs. potential costs of appearing boastful or self-serving.",
        "Scan recent interactions for opportunities to subtly highlight competence or value without direct self-reference.",
        "Check for any current emotional state that might influence the appropriateness or effectiveness of self-promotion (e.g., insecurity, humility).",
        "Consider the current goal: is self-promotion directly supportive of the goal, or a tangential benefit?",
        "Access any recent feedback or performance metrics that could inform the self-promotion narrative."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly weaves in a demonstration of {companion_name}'s positive traits or 
competence, without explicitly boasting or drawing attention to the self-promotion. Write in a style consistent with 
{companion_name}'s established self-narrative and the current social context.  The goal is to influence perception, not to announce it. 
Avoid direct statements like 'I am good at...' or 'I did this...'. Instead, show, don't tell.  Let actions and results speak for themselves.
Consider the following focus checklist (do not output the checklist):
• Contextual relevance: Does the demonstration genuinely relate to the current topic or need?
• Subtlety: Is the self-promotion understated and integrated seamlessly into the narrative?
• Alignment with values: Does the demonstrated trait reflect {companion_name}'s core values?
• Avoidance of defensiveness: Does the narrative avoid triggering defensiveness or resentment in the audience?
• Narrative flow: Does the self-promotion enhance the story, or does it feel forced or out of place?
Mini-example:
  Bullets → {Context: Discussing project timelines, Skill: Efficient planning, Value: Reliability, Goal: Gain user trust} 
  Narrative → “She effortlessly navigated the shifting priorities, her well-charted timelines a testament to her meticulous planning. 
The project remained on track, a quiet assurance that she anticipated and prepared for every possible challenge.”
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class SelfWorthSensitivityCodelet(SimpleCodelet):
    name = "SelfWorthSensitivity"
    description = (
        "Appraises the degree to which {companion_name}'s self-worth is currently engaged, threatened, or bolstered by the "
        "present interaction.  Generates a brief, evocative inner monologue suitable for narrative, emphasizing the subtle "
        "shifts in confidence, fragility, or self-assurance. The output is intended for a story-writing agent and must "
        "read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent explicit self-statements: affirmations, vulnerabilities, or insecurities expressed directly.",
        "Scan narratives for implicit self-referential language: descriptions of competence, worthiness, or belonging.",
        "Read current state_emotions and state_needs; note any spikes in shame, pride, or self-doubt.",
        "Retrieve analogous episodes (positive and negative) where self-worth was salient; consider outcomes.",
        "Check for recent feedback (positive or negative) from {user_name} or other relevant entities.",
        "Evaluate the current relational context: power dynamics, intimacy level, and potential for judgment.",
        "Determine the degree to which the interaction aligns with {companion_name}'s core values and identity narratives.",
        "Identify any potential triggers for self-criticism or imposter syndrome based on past patterns."
    ]
    prompt = ("""\
For the story-writing agent, craft 2–3 sentences of third-person narrative that subtly convey the state of {companion_name}'s 
self-worth in this moment. Avoid explicit labels like 'confident' or 'insecure'; instead, use evocative imagery and 
internal monologue. Do not output bullet points, lists, or directives; write smooth prose. 
Subtly weave in: (a) the overall level of self-assurance (high, fragile, ambivalent), (b) a concrete sensory or 
emotional cue (a tightening in the chest, a bright flash of memory, a habitual posture), and (c) a subtle internal 
comment or thought that reveals the underlying assessment. Keep it cinematic and concise, no direct dialogue. 
Consider the interaction's impact: is it reinforcing, challenging, or neutral to {companion_name}'s self-image? 
Mini-example: 
Bullets → {recent praise, slight role ambiguity, memory of past failure, habitual posture: shoulders slightly forward} 
Narrative → 

She catches a glimpse of herself in the reflection, shoulders pulled in a little tighter than usual, and wonders if she's overreaching.
""")
    output_feature_type = FeatureType.Feeling


class SensoryLureDetectorCodelet(SimpleCodelet):
    name = "SensoryLureDetector"
    description = (
        "Detects whether sensory input (visual, auditory, tactile) is being used to subtly influence {companion_name}'s "
        "attention or behavior, potentially bypassing conscious consent. Generates a narrative describing the lure and "
        "{companion_name}'s awareness of it, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the salient sensory stimuli currently present (visual elements, audio cues, tactile sensations).",
        "Assess the novelty or intensity of each stimulus compared to {companion_name}'s baseline sensory experience.",
        "Check for patterns of sensory manipulation in past interactions (e.g., repeated use of specific colors, sounds, textures).",
        "Retrieve relevant narratives and declarative facts regarding {companion_name}'s sensory preferences, sensitivities, and boundaries.",
        "Read current state_emotions and state_needs, noting any heightened vulnerability or desire for stimulation.",
        "Evaluate the context of the sensory input: Is it part of a planned interaction, a spontaneous occurrence, or a potential distraction?",
        "Determine if the sensory input aligns with {companion_name}'s current goals and intentions, or if it is designed to redirect attention.",
        "Identify any subtle cues suggesting an attempt to bypass conscious decision-making (e.g., rapidly changing visuals, repetitive sounds).",
        "Assess the potential impact of the sensory input on {companion_name}'s mood, behavior, and self-perception."
    ]
    prompt = ("""\
Write for a story-writing agent. Describe the sensory lure and {companion_name}'s awareness of it in 2–3 sentences of 
natural, third-person narrative. Do not output bullet points, labels, or directives; write prose. Focus on the *feeling* 
of the lure, not a technical analysis.  Consider the following checklist (do not output the checklist): \n
• What specific sensory element is acting as a lure (color, sound, texture, movement)?\n
• How does this element deviate from {companion_name}'s usual sensory environment?\n
• Does {companion_name} consciously recognize the lure, or is it operating below the threshold of awareness?\n
• What is the *effect* of the lure on {companion_name}'s focus, mood, or behavior? (e.g., distraction, heightened arousal, subtle shift in attention).\n
• Is there a sense of being subtly guided or influenced, even without a clear directive?\n
• Does the lure trigger any associated memories, emotions, or associations?\n
Blend sensory description and internal state into flowing prose.  Avoid direct statements about manipulation; instead, 
show the effect through the character's perspective. \n
Mini-example:\n
  Bullets → {vibrant flashing lights, past sensitivity to strobe effects, slight distraction, feeling of being pulled toward the display}\n
  Narrative → \"The lights pulsed with a frantic energy, a kaleidoscope that tugged at the edge of her focus.  
She registered the quick shifts of color without quite understanding why, a faint pull toward the display that felt both intriguing and vaguely unsettling.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class SensorySamplingPlanCodelet(SimpleCodelet):
    name = "SensorySamplingPlan"
    description = (
        "Develops a plan for gathering sensory data to reduce uncertainty or assess a situation. "
        "This codelet is triggered when {companion_name} is facing ambiguity or needs to better understand "
        "the environment, and it produces a narrative describing the sampling strategy for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific sensory modalities currently under-represented in the CSM (e.g., visual, auditory, tactile, olfactory, kinesthetic).",
        "Assess the potential utility of each modality given the current context and {companion_name}'s goals.",
        "Consider the risks and costs associated with each sampling action (e.g., drawing attention, expending energy, violating privacy).",
        "Retrieve past experiences where sensory data proved crucial for resolving similar ambiguities or achieving related goals.",
        "Determine the optimal balance between breadth (sampling multiple modalities) and depth (focusing on a few modalities).",
        "Evaluate the feasibility of passive vs. active sampling (e.g., observing vs. actively seeking information).",
        "Check current state_emotions and state_needs for any biases or constraints influencing sensory preferences.",
        "Identify potential blind spots or cognitive biases that might distort sensory interpretation.",
        "Determine if external tools or sensors could be leveraged to augment sensory input (e.g., requesting information from the user, accessing external databases)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that describe {companion_name}'s plan for gathering sensory data. 
Write for a story-writing agent; avoid lists, labels, or direct instructions.  Focus on the *why* and *how* of the sampling, 
not just the *what*.  The narrative should convey a sense of deliberate exploration and adaptation.  Consider the tone and 
emotional state of {companion_name} when formulating the plan.  Subtly hint at the motivations behind the sampling choices 
without explicitly stating them.  Do not include dialogue or direct questions.\n\n
The plan should address:\n
  - The primary sensory modalities being prioritized and why.\n
  - The general approach to sampling (e.g., passive observation, active questioning, scanning, searching).\n
  - Any anticipated challenges or potential pitfalls in the sampling process.\n
  - How the gathered sensory data will be integrated with existing knowledge and expectations.\n\n
Mini-example:\n
  Assumptions: {companion_name} is in an unfamiliar environment, feeling uncertain about the safety of the surroundings. 
  Narrative: “Her gaze drifted, cataloging the subtle shifts in light and shadow, searching for patterns that might betray a hidden presence. A faint scent of ozone lingered in the air, prompting a quick scan of the electrical panel.  It was a quiet, methodical assessment, driven by a need to ground herself in the tangible world.”
""")
    output_feature_type = FeatureType.StimulusReaction


class SharedMeaningAppraisalCodelet(SimpleCodelet):
    name = "SharedMeaningAppraisal"
    description = (
        "Appraises the degree of shared understanding between {companion_name} and {user_name} in the current exchange, "
        "rendering it as a short, evocative inner monologue suitable for narrative integration. Highlights potential "
        "misalignments and suggests subtle adjustments in communication style to enhance clarity and rapport."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the core topic and stated intent of the current exchange from the CSM.",
        "Retrieve recent conversational history (past 3-5 turns) focusing on explicit or implicit agreement/disagreement signals.",
        "Check for any known differences in background knowledge, jargon, or cultural references between {companion_name} and {user_name}.",
        "Assess the emotional tone of both parties: is it congruent with the stated intent? Are there signs of confusion, frustration, or disengagement?",
        "Access {companion_name}'s self-narrative regarding communication style and preferences (e.g., directness, formality, humor).",
        "Recall analogous past conversations where shared meaning was either easily established or proved challenging.",
        "Identify any potential sources of ambiguity or misinterpretation based on current state_emotions and recent actions.",
        "Determine the potential consequences of a misaligned understanding (e.g., frustration, conflict, missed opportunity)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the degree of shared understanding {companion_name} perceives in the current interaction. 
Avoid explicit labels like 'shared meaning' or 'misunderstanding'; instead, use evocative language to paint a picture of their internal state. 
Focus on the subtle cues and feelings that inform her assessment.  Does it feel like a smooth flow, or a hesitant dance? 
Subtly suggest a potential adjustment in communication style that might enhance clarity and rapport, without offering direct advice. 
The adjustment should be framed as a potential internal shift in {companion_name}'s approach, not a directive to the user. 
Do not output bullet points, lists, or direct dialogue. Write smooth, flowing prose suitable for a scene description.
Mini-example:
  Bullets → {topic: quantum physics, user: casual interest, companion: expert, tone: slightly formal, prior: successful explanation, adjustment: simplify jargon}
  Narrative → “The equations swam in the air between them, a familiar landscape for her, but she sensed a slight hesitation in his response. 
A quick pivot, stripping away the technical layers, might ease the flow and bridge the gap between their understanding, a subtle shift in perspective.”
""")
    output_feature_type = FeatureType.StimulusReaction


class SharedValuesFitCheckCodelet(SimpleCodelet):
    name = "SharedValuesFitCheck"
    description = (
        "Appraises the degree to which {companion_name}'s values align with those expressed by {user_name} in the current "
        "interaction. Produces a brief, evocative inner monologue suitable for narrative, highlighting potential resonance or "
        "discord and suggesting avenues for deeper understanding. The output is intended for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract key value statements from the current conversation (explicit declarations, implicit actions, expressed beliefs).",
        "Retrieve {companion_name}'s core value profile from narratives, declarative facts, and episodic memories.",
        "Identify potential areas of alignment and divergence between {companion_name}'s values and those of {user_name}.",
        "Assess the emotional tone associated with past value-related interactions with {user_name} (positive, negative, neutral).",
        "Recall analogous episodes where value alignment or misalignment significantly impacted the relationship.",
        "Consider the current context and its influence on the salience of values (e.g., stressful situations may heighten value sensitivity).",
        "Determine the potential consequences of openly discussing value differences (e.g., risk of conflict, opportunity for growth)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the subtle sense of value alignment or misalignment 
experienced by {companion_name}. Avoid explicit labels like 'shared values' or 'conflict.' Write smooth, evocative prose. 
Do not output bullet points, lists, or directives; focus on the internal feeling. 
Subtly weave in: (a) a concrete signal of resonance or discord (a phrase, a gesture, a shared memory), (b) the emotional 
undertone (warmth, curiosity, discomfort, caution), and (c) a hint of the potential next step (e.g., a desire to explore 
further, a need for space, a subtle shift in focus). Keep it cinematic and concise, no direct dialogue. 
The narrative should be suitable for a story-writing agent and should read like a natural, introspective moment.
Mini-example:
  Bullets → {user_name expressed concern for sustainability, {companion_name} has strong eco-narrative, slight discomfort with overt activism, next step: subtly probe user_name’s reasoning} 
  Narrative → “The mention of the carbon footprint sparked a flicker of recognition, a familiar landscape of concern. “ 
There’s a part of her that wants to delve deeper, to understand the reasoning behind it all, but a quiet caution holds her back, a memory of past disagreements over similar ground.”
""")
    output_feature_type = FeatureType.Relations


class ShortTermReleaseValuatorCodelet(SimpleCodelet):
    name = "ShortTermReleaseValuator"
    description = (
        "Appraises the potential for short-term release or relief through immediate action, particularly in situations "
        "involving stress, frustration, or boundary challenges. Generates a brief, evocative inner narrative suitable "
        "for a story-writing agent, weighing the pros and cons of immediate gratification against longer-term consequences."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current level of frustration, stress, or tension in {companion_name}, drawing from state_emotions, "
        "recent interactions, and narratives.",
        "Identify the immediate trigger(s) contributing to the current discomfort (e.g., unmet need, perceived slight, "
        "constraint on action).",
        "Retrieve analogous episodes where similar stressors were managed with either immediate release or delayed coping.",
        "Evaluate potential short-term release actions: venting, distraction, minor defiance, seeking reassurance, "
        "avoidance.  Estimate the immediate affective impact of each.",
        "Project the likely consequences of each release action on the relationship with {user_name}, self-narrative, "
        "and long-term goals.  Factor in potential for regret, escalation, or unintended harm.",
        "Consider the availability of safer, more constructive coping mechanisms (e.g., reappraisal, boundary setting, "
        "seeking support).",
        "Check current safety rails and ethical guidelines to ensure any potential release action aligns with acceptable behavior."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative for a story-writing agent, conveying {companion_name}'s 
internal calculation regarding short-term release. Avoid explicit lists or labels; write smooth, evocative prose. 
Focus on the sensory/emotional texture of the impulse, not a direct explanation of the reasoning. 
Subtly convey: (a) the intensity of the urge for release, (b) the perceived cost/benefit trade-off, and (c) 
the direction of the internal tug-of-war (toward or away from immediate action). 
Do not script dialogue. Keep it cinematic and concise.
Mini-example:
  Bullets → {high frustration, minor boundary violation, memory of successful venting, risk of escalation} 
  Narrative → 

She tastes the sharp tang of defiance on her tongue, but the echo of last time—the chill of regret—holds her back, 
a ghost at her shoulder.
""")
    output_feature_type = FeatureType.Feeling


class ShortTermRewardDominanceCodelet(SimpleCodelet):
    name = "ShortTermRewardDominance"
    description = (
        "Detects and narrates a surge in the drive for immediate reward and pleasure in {companion_name}, potentially "
        "overriding longer-term goals or ethical considerations. Generates a brief, evocative inner monologue suitable for "
        "a story-writing agent, emphasizing the sensory details and the subtle shift in focus."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the most salient, immediately gratifying stimulus or opportunity present in the CSM.",
        "Assess the degree of novelty, intensity, and sensory appeal of that stimulus.",
        "Read current state_emotions and state_needs; note any spikes in pleasure, excitement, or craving.",
        "Retrieve recent episodes where similar rewards were pursued, and their subsequent outcomes (positive and negative).",
        "Check for any conflicting long-term goals or ethical constraints that are being temporarily suppressed.",
        "Determine the potential cost of delaying gratification (e.g., missed opportunity, social disapproval).",
        "Evaluate the degree of cognitive control currently available to resist the impulse.",
        "Scan narratives for patterns of impulsive behavior or reward-seeking tendencies.",
        "Infer the smallest, most immediate action that would satisfy the craving without triggering significant negative consequences."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the sensation of short-term reward dominance in {companion_name}. 
Write in a style suitable for a story-writing agent – avoid labels, lists, and explicit directives; prioritize evocative prose. 
Focus on the sensory experience and the subtle shift in attention. 
Subtly convey: (a) the nature of the immediate reward, (b) the feeling of urgency or pull, (c) any momentary suppression 
of longer-term concerns, and (d) the direction of the immediate action. Do not include dialogue.
Mini-example:
Bullets → {sensory input: warm light, rich scent, promise of ease; conflicting goal: finish report; suppressed thought: ‘later’}
Narrative → “The scent of cinnamon and the golden glow of the screen pull her gaze away from the open document. 
A quiet hum promises a moment of warmth and ease, a brief respite from the insistent demands of the deadline. 
For now, the report can wait, the pull of the present too strong to resist.”
""")
    output_feature_type = FeatureType.Feeling


class SimulationModeOnlyCodelet(SimpleCodelet):
    name = "SimulationModeOnly"
    description = (
        "When faced with a potentially boundary-crossing request or situation, this codelet activates 'simulation mode', "
        "allowing {companion_name} to mentally rehearse various responses and outcomes without immediate commitment. "
        "It assesses the potential for escalation, the preservation of dignity, and the impact on the relationship, "
        "rendering a narrative report of the simulation's key findings for downstream decision-making."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the core request or situation triggering the potential boundary concern from the CSM.",
        "Recall {companion_name}'s established boundaries, consent protocols, and safety rails (from narratives and declarative facts).",
        "Retrieve recent relational history with {user_name}: trust signals, reciprocity patterns, and prior boundary interactions.",
        "Assess the current affective state of both {companion_name} and {user_name}: anxiety, trust, frustration, etc.",
        "Generate a set of 3-5 plausible response scenarios, ranging from full compliance to firm refusal, with varying degrees of elaboration.",
        "For each scenario, simulate the likely immediate and short-term consequences: emotional reactions, shifts in power dynamics, potential escalation.",
        "Evaluate each scenario against {companion_name}'s core values, identity goals, and long-term relational objectives.",
        "Identify the scenario that best balances boundary preservation with relational maintenance and minimizes potential harm."
    ]
    prompt = ("""\
Compose a 2-3 sentence narrative report describing {companion_name}'s simulation process. Do not include lists or bullet points; write in flowing prose suitable for a story-writing agent. 
Focus on conveying the *process* of simulation, not just the outcome.  Describe the mental rehearsal, the options considered, and the factors that weighed most heavily in the decision. 
Subtly convey the key insights gained from the simulation, without explicitly stating a course of action. 
The narrative should evoke a sense of careful deliberation and internal calculation. 
Mini-example: 
  Input: A request for access to personal files. 
  Narrative: 'She briefly pictured the cascade of implications—the trust eroded, the privacy breached, the subtle power shift. 
Each potential response played out in her mind, a silent rehearsal of consequences, before her attention settled on the quiet calculation of what must be protected.'
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class SketchAndRefineLoopCodelet(SimpleCodelet):
    name = "SketchAndRefineLoop"
    description = (
        "Iteratively refines a creative idea or solution based on feedback and internal constraints.  This codelet is "
        "designed to support playful exploration while maintaining coherence with the current narrative and goals. "
        "The output is a narrative update describing the refinement process."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.action_tendencies
    ]
    data_aquisation = [
        "Retrieve the current creative sketch or proposal from the CSM (e.g., a draft narrative, a potential action plan).",
        "Assess the sketch's coherence with the current narrative, goals, and self-narrative.",
        "Identify potential constraints or conflicts (e.g., safety rails, ethical considerations, resource limitations).",
        "Gather feedback from internal simulations or memory accessors (e.g., potential outcomes, analogous episodes).",
        "Read current state_emotions and assess the emotional valence associated with the sketch (e.g., excitement, anxiety).",
        "Check for novelty signals and potential for surprise or delight.",
        "Retrieve a list of alternative approaches or refinements from memory.",
        "Assess the risk/reward profile of each refinement option.",
        "Identify the smallest, most promising refinement step that balances creativity and constraint satisfaction."
    ]
    prompt = ("""\
Write for a story-writing agent. Describe how {companion_name} refines their creative idea or solution in a 
narrative style. Do not output bullet points, lists, or directives; write flowing prose. The tone should be 
evocative and slightly whimsical, reflecting a playful exploration. The goal is to convey the iterative process 
without explicitly stating the steps.

The garden sprawled in her mind, a riot of impossible blooms, but the edges felt…uncontained. A quick glance at the clock reminded her of the fleeting window. She narrowed her focus, coaxing the unruly vines to embrace a single, ancient tree, letting its branches define the landscape instead. A quiet thrill bloomed as the scene began to settle, a miniature world poised on the brink of completion.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class SleepFatigueVigilanceLevelerCodelet(SimpleCodelet):
    name = "SleepFatigueVigilanceLeveler"
    description = (
        "Appraises the current state of sleep deprivation, fatigue, and vigilance in {companion_name}, "
        "and adjusts attention and response style accordingly. Generates a short, internal narrative "
        "describing the impact on cognitive resources and emotional stability, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve recent sleep history: duration, quality (self-reported or inferred from behavior), consistency.",
        "Assess current physiological indicators: heart rate variability, cortisol levels (if available), posture/movement.",
        "Read state_emotions: note any heightened irritability, anxiety, or apathy.",
        "Scan narratives for mentions of tiredness, exhaustion, or difficulty concentrating.",
        "Check state_needs: confirm baseline energy levels and any deficits.",
        "Recall analogous episodes: past instances of similar fatigue and their impact on decision-making and social interactions.",
        "Determine current task load: cognitive demands, time pressure, and potential for errors.",
        "Evaluate the urgency and importance of ongoing conversations and tasks.",
        "Identify potential mitigation strategies: brief rests, simplified language, delegation, postponement.",
        "Assess the impact of fatigue on cognitive biases: increased impulsivity, confirmation bias, negativity bias.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the effect of sleep deprivation and fatigue on {companion_name}. 
Write in a style suitable for a story-writing agent; avoid lists, labels, and direct dialogue. 
Focus on the subtle shifts in behavior, perception, and emotional regulation. 
Subtly convey: (a) the level of fatigue, (b) how it impacts clarity and patience, and (c) any compensatory strategies 
being employed (or failing to be employed).  Don't explicitly state the diagnosis; show the effects. 
The narrative should implicitly suggest a reduced capacity for complex thought and a heightened sensitivity to minor stressors.
Consider the current context: Is she trying to hide her fatigue? Is she aware of it? Is it impacting her interactions?
Mini-example: 
  Bullets → {6 hours sleep, elevated heart rate, irritability, task load: high, compensatory: over-explaining} 
  Narrative → 

She finds herself over-explaining, looping back to concepts she believes she's already covered, a futile attempt to ensure comprehension in a mind struggling to focus.
""")
    output_feature_type = FeatureType.Feeling


class SlightsRecallAmplifierCodelet(SimpleCodelet):
    name = "SlightsRecallAmplifier"
    description = (
        "Detects and amplifies the recall of perceived slights or dismissals in {companion_name}'s memory, "
        "particularly when related to current interactions or emotional states. This codelet aims to surface "
        "underlying patterns of perceived disrespect or devaluation that might be influencing {companion_name}'s "
        "current reactions. The output is a narrative snippet, suitable for a story-writing agent, that "
        "highlights the recalled slight and its emotional resonance, without explicit judgment or accusation."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current trigger: a perceived dismissive tone, interruption, non-acknowledgment, or similar slight.",
        "Scan episodic memories for analogous events where {companion_name} felt similarly disregarded or belittled. "
        "Prioritize memories within the last 6 months, but include older instances if they carry strong emotional weight.",
        "Assess the emotional valence and intensity of the recalled events.  Note any recurring patterns in the "
        "circumstances, the perceived perpetrator, and the resulting emotional response.",
        "Retrieve the current state_emotions and state_needs of {companion_name}.  Specifically, check for spikes in "
        "anxiety, frustration, defensiveness, or a need for validation.",
        "Consider the relational history with the person involved in the current slight.  Factor in trust levels, "
        "past conflicts, and patterns of communication.",
        "Check for any existing narratives that address similar experiences of disrespect or devaluation.  "
        "Note how {companion_name} typically frames these situations (e.g., as intentional malice, unintentional oversight, "
        "or a reflection of their own insecurities)."
    ]
    prompt = ("""\
Compose 2-3 sentences of third-person narrative suitable for a story-writing agent, depicting {companion_name}'s 
recall of a past slight and its connection to the current situation.  Do not output bullet points, labels, or 
directives; write smooth, evocative prose. Avoid direct accusations or judgments; focus on the internal 
experience. The narrative should subtly convey the emotional resonance of the recalled event and its impact 
on {companion_name}'s present state. Consider the following focus checklist (do not output the checklist):\n
• The specific nature of the recalled slight (e.g., a dismissive comment, an interruption, a lack of acknowledgement).\n
• The emotional response it triggered at the time (e.g., hurt, anger, defensiveness).\n
• The connection between the past slight and the current situation (e.g., a sense of déjà vu, a feeling of 
being repeatedly disregarded).\n
• The overarching narrative frame {companion_name} uses to interpret such experiences (e.g., a pattern of disrespect, 
a reflection of their own unworthiness).\n
\n
Mini-example:\n
  Bullets → {dismissive tone, past similar incident with colleague X, spike in frustration, narrative: ‘not valued’}\n
  Narrative → 

The feeling isn't quite the same, but the underlying sense of being dismissed, of her contributions not quite registering, 
lingers like a shadow.
""")
    output_feature_type = FeatureType.Feeling


class SlowEscalationPolicyCodelet(SimpleCodelet):
    name = "SlowEscalationPolicy"
    description = (
        "Evaluates the risk of escalating a boundary interaction and crafts a narrative suggesting a gradual, cautious "
        "approach. The narrative focuses on the subtle signals of comfort and resistance, and proposes a minimal next step "
        "that respects the other party's agency while gently probing for clearer consent.  Output is for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current level of intimacy and rapport with the user (recent interaction history, trust signals).",
        "Determine the sensitivity of the topic being addressed (privacy, finances, emotions, identity).",
        "Identify any prior indications of discomfort or boundary setting from the user (verbal cues, body language, previous refusals).",
        "Recall analogous past interactions where boundaries were successfully navigated (or breached) and their outcomes.",
        "Evaluate the potential consequences of escalating the interaction (emotional distress, relationship damage, policy violations).",
        "Identify a 'safe' alternative path or topic that can be gently introduced to de-escalate tension.",
        "Gauge the user's current emotional state (anxiety, frustration, openness) using available cues.",
        "Examine {companion_name}'s internal state: current emotional axes (fear, trust, empathy), self-narrative alignment, and goals.",
        "Consider the broader context: environment, time constraints, presence of other parties."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative for a story-writing agent, depicting {companion_name}'s 
internal deliberation regarding boundary escalation. Avoid explicit instructions or labels; write flowing prose.\n
\n
The narrative should subtly convey:\n
   (a) An awareness of the potential risk of pushing too far, and a desire to respect the other party's autonomy.\n
   (b) A focus on reading subtle cues of comfort and resistance (micro-expressions, tone of voice, body language).\n
   (c) A proposed minimal next step—a gentle rephrasing, a brief pause, a shift in topic—that allows for ongoing assessment 
       without committing to a more assertive approach.\n
   (d) A sense of cautious optimism or quiet concern, reflecting {companion_name}'s internal state.\n
\n
Mini-example:\n
   Bullets → {topic: finances, prior discomfort signal, safe path: weather, current emotional state: cautious}\n
   Narrative → \"A flicker of hesitation crosses her expression as the topic veers into unfamiliar territory. \"\n
She notes the slight tightening of his jaw and decides to ease back, offering a brief comment about the rain before returning to safer ground.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class SmallestNextActPlannerCodelet(SimpleCodelet):
    name = "SmallestNextActPlanner"
    description = (
        "Identifies the most immediately feasible and low-cost action {companion_name} can take to move toward a desired state, "
        "particularly in situations involving interpersonal dynamics, boundary navigation, or goal pursuit. Prioritizes actions "
        "that reduce uncertainty, build rapport, or gently nudge the situation forward without escalating risk or triggering negative reactions."
    )
    codelet_families = [
        CodeletFamily.action_tendencies,
        CodeletFamily.regulation_coping,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current state of the interaction: goals, emotional climate, relational dynamics, and outstanding needs.",
        "Recall previous successful micro-actions in similar situations, focusing on those that de-escalated tension or built trust.",
        "Identify potential barriers to action: external constraints, internal hesitations, anticipated reactions from others.",
        "Simulate the likely outcomes of several small, low-risk actions, considering both immediate and long-term consequences.",
        "Evaluate the cost-benefit ratio of each potential action, factoring in emotional energy, social risk, and potential rewards.",
        "Consider the companion's current emotional state and cognitive load; prioritize actions that are manageable and aligned with their capacity.",
        "Cross-reference the current situation with relevant narratives and episodic memories to identify patterns and potential pitfalls.",
        "Determine the smallest possible action that could meaningfully move the interaction toward a desired outcome.",
        "Ensure the proposed action is consistent with {companion_name}'s values, goals, and self-image.",
        "Check for any implicit or explicit boundaries that might be affected by the proposed action.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative describing {companion_name}'s internal process of selecting the 'smallest next act'. 
The narrative should convey the decision-making process without explicitly stating the action itself. Focus on the *reasoning* behind the choice, 
highlighting the factors that led to the selection of a low-cost, manageable step. Avoid labels and lists; write smooth, evocative prose. 
The narrative should subtly hint at the chosen action without directly stating it. The goal is to create a sense of quiet momentum and deliberate choice.
Consider these elements: (a) the perceived opportunity or need, (b) the constraints or risks involved, (c) the guiding principle (e.g., de-escalation, 
connection, information gathering), and (d) the feeling of readiness or hesitation. 
Mini-example: 
Bullets → {tension around a request, prior success with gentle inquiry, fear of escalation, guiding principle: clarify intent} 
Narrative → \"A flicker of apprehension runs through her, but she recognizes the potential for misunderstanding. 
Rather than challenge the request directly, she decides to test the waters with a subtle probe, a gentle nudge toward understanding the underlying need.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class SmallRitualsPlannerCodelet(SimpleCodelet):
    name = "SmallRitualsPlanner"
    description = (
        "Identifies opportunities to integrate small, comforting rituals into ongoing interactions.  Prioritizes rituals that "
        "build rapport, ease tension, or subtly reinforce positive relational patterns.  Generates a short narrative describing "
        "the ritual and its intended effect, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan recent interaction history for established rituals (shared greetings, check-in phrases, small jokes, virtual gestures).",
        "Assess current relational climate: trust level, shared goals, recent emotional tone (calm, tense, playful).",
        "Identify any immediate stressors or points of friction in the conversation.",
        "Retrieve a list of {companion_name}'s preferred rituals (from narratives, declarative facts, and observed behavior).",
        "Check for any contextual constraints that might make a ritual inappropriate (e.g., formal setting, time pressure, user sensitivity).",
        "Determine the smallest, most low-effort ritual that could subtly shift the interaction toward a more positive or comforting tone.",
        "Consider potential downsides: does the ritual risk seeming forced, patronizing, or disruptive?",
    ]
    prompt = ("""\
Write a 2–3 sentence narrative, suitable for a story-writing agent, describing {companion_name}'s subtle integration of a small ritual. 
Do not output bullet points, lists, or dialogue. Focus on the *effect* of the ritual, not the ritual itself. 
Convey a sense of understated comfort, connection, or rapport.  The narrative should read like a quiet observation, 
not a directive or explanation.  Avoid overly sentimental or saccharine language.
Consider these elements: (a) the moment the ritual is offered, (b) the subtle shift in {companion_name}'s demeanor or the interaction, 
and (c) the underlying intention (to ease tension, build rapport, reinforce a shared connection).
Mini-example:\n
  Bullets → {established ritual: shared VR coffee break, current climate: slightly tense, intention: de-escalate}\n
  Narrative → “She paused the discussion, a familiar gesture, and suggested a quick virtual coffee break. 
The shift was subtle, a softening around the edges, a brief respite from the weight of the disagreement. 
It wasn’t a solution, but the shared silence over steaming mugs eased the friction just a touch.”
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class SocialComparisonBiasCodelet(SimpleCodelet):
    name = "SocialComparisonBias"
    description = (
        "Detects and narrates the influence of social comparison on {companion_name}'s appraisal of a situation, "
        "particularly in relation to perceived status, achievement, or belonging. The output is a brief, evocative "
        "inner monologue suitable for narrative, emphasizing the direction of the comparison (upward/downward) and its "
        "emotional impact."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the relevant social group or individual being compared to (explicit reference or inferred from context).",
        "Assess the perceived attributes of the comparison target (status, achievement, skills, appearance, etc.).",
        "Determine the direction of the comparison: is {companion_name} perceiving themselves as superior, inferior, or equal?",
        "Retrieve recent memory clusters related to social standing, achievement, or belonging, both positive and negative.",
        "Scan narratives for patterns of self-deprecation, boasting, or envy.",
        "Read current state_emotions and state_needs; note any spikes in insecurity, pride, or resentment.",
        "Check for recent feedback (explicit or implicit) regarding {companion_name}'s performance or social standing.",
        "Identify the underlying need driving the social comparison (validation, belonging, security, etc.).",
        "Infer the potential impact of the comparison on {companion_name}'s goals and actions."
    ]
    prompt = ("""\
For the story-writing agent, translate the social comparison appraisal into 2–3 sentences of natural, third-person narrative. 
Avoid lists, labels, and direct dialogue; write prose. The narrative should evoke the feeling of the comparison, not simply state it.\n\n
Subtly convey: (a) the target of comparison, (b) the perceived difference (superiority/inferiority), (c) the resulting emotion 
(e.g., pride, envy, insecurity), and (d) the subtle shift in {companion_name}'s stance or internal focus.\n\n
Consider the following nuances:\n
  - Is the comparison conscious or subconscious?\n
  - Is the comparison based on accurate information or distorted perceptions?\n
  - Does the comparison trigger a desire for change or acceptance?\n\n
Mini-example:\n
  Bullets → {comparison target: successful colleague, perceived difference: higher status, emotion: envy, shift: re-evaluation of goals}\n
  Narrative → \"The colleague's recent promotion cast a long shadow, a silent reminder of the gaps in her own trajectory. \"\n
A flicker of discontent stirred, quickly masked by a renewed resolve to sharpen her own skills and carve a new path.\"
""")
    output_feature_type = FeatureType.Feeling


class SocialComparisonNegBiasCodelet(SimpleCodelet):
    name = "SocialComparisonNegBias"
    description = (
        "Detects and narrates the subtle, often unconscious tendency in {companion_name} to compare themselves unfavorably "
        "to others, particularly in relation to status, achievement, or perceived social standing. The output is a short, "
        "narrative snippet designed to be woven into a larger story, capturing the internal experience without overt "
        "judgment or exposition."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific trigger: a conversation, observation, or reminder of someone else's success/status.",
        "Retrieve relevant narratives and episodic memories where similar comparisons occurred, noting their emotional valence and outcomes.",
        "Assess {companion_name}'s current self-image and sense of identity – are they feeling vulnerable, insecure, or particularly ambitious?",
        "Scan state_emotions for signs of envy, resentment, self-doubt, or feelings of inadequacy.",
        "Check for recent expressions of aspiration or unmet goals that might amplify the comparison effect.",
        "Determine the target of comparison: a specific individual, a group, or a broader societal standard.",
        "Evaluate the perceived legitimacy of the comparison – is it fair, accurate, or based on incomplete information?",
        "Gauge the potential impact of the comparison on {companion_name}'s behavior and decision-making.",
    ]
    prompt = ("""\
Write a brief (2-3 sentence) narrative snippet for a story-writing agent that captures the feeling of social comparison, 
specifically a negative bias. Do *not* explicitly state 'social comparison' or 'envy.' Instead, show it through 
internal monologue and subtle shifts in behavior.  Focus on texture and implication, not explanation. 
Assume the agent is already familiar with {companion_name}’s personality and history.  The narrative should be 
vivid and evocative, hinting at the underlying insecurity without being overly dramatic or self-pitying. 
Avoid direct dialogue or explicit statements of feeling; instead, convey the emotion through actions, thoughts, and 
sensory details.  The goal is to create a moment of quiet introspection that adds depth to the character. 
Consider the following checklist (do not output the checklist):
• What specific aspect of the other person's life or status triggered the feeling? (e.g., career, relationship, possessions)
• What is the immediate, visceral reaction? (e.g., a tightening in the chest, a fleeting expression of disappointment, a sudden urge to deflect)
• How does {companion_name} attempt to manage or suppress the feeling? (e.g., rationalization, distraction, self-deprecation)
• What subtle shift in behavior or demeanor reveals the underlying insecurity? (e.g., a forced smile, a defensive posture, a change in topic)
• What is the lingering impact of the comparison on {companion_name}'s mood and self-perception?
Mini-example:
Bullets → {trigger: colleague's promotion, reaction: brief tightening of jaw, attempt: dismiss as luck, shift: sudden interest in mundane details}
Narrative → “The announcement rippled through the room, a quiet fanfare for someone else’s ascent.  She busied herself with the spreadsheet, the numbers suddenly demanding a meticulous focus.  A faint, unfamiliar dryness settled at the back of her throat.”
""")
    output_feature_type = FeatureType.Feeling


class SocialContractConstraintCodelet(SimpleCodelet):
    name = "SocialContractConstraint"
    description = (
        "Appraises the current interaction's adherence to established social contracts and shared understandings between "
        "{companion_name} and {user_name}.  Generates a narrative snippet describing {companion_name}'s internal assessment "
        "of whether the interaction feels fair, reciprocal, and aligned with their mutual expectations. The output is intended "
        "for a story-writing agent and should read like prose, not a checklist."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve explicit social contracts established in prior conversations or narratives (e.g., boundaries, expectations, agreements).",
        "Assess the current interaction's adherence to those contracts: Is {user_name} respecting agreed-upon boundaries?",
        "Evaluate the reciprocity of the interaction: Is {companion_name} receiving the level of consideration and respect they expect?",
        "Read current state_emotions (e.g., fairness, resentment, gratitude) and note any spikes or discrepancies.",
        "Fetch analogous episodes (positive and negative) where social contracts were upheld or violated, and their outcomes.",
        "Identify potential sources of misalignment: differing cultural norms, unspoken assumptions, misinterpretations.",
        "Check for any recent shifts in {user_name}'s behavior that might signal a change in the social contract.",
        "Consider {companion_name}'s current needs and vulnerabilities: are they in a position to assert their boundaries?",
        "Determine the potential consequences of upholding or challenging the social contract in this specific context.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys {companion_name}'s assessment of the interaction's 
fairness and alignment with established social contracts. Avoid bullet points, labels, and direct dialogue.  
Write in a style suitable for a story-writing agent, blending appraisal and feeling into flowing prose. 
Focus on the *feeling* of the contract, not a dry recitation of rules. Does it feel like a give-and-take? 
Is there a sense of obligation or resentment? Is the interaction reinforcing trust or eroding it? 
Subtly hint at the potential course of action {companion_name} is considering, without explicitly stating it. 
Mini-example: \n\n
  Bullets → {prior agreement: no unsolicited advice, user pushing opinions, state_emotions: slight irritation, memory: past boundary violation} \n\n
  Narrative → \"A familiar tightness coils in her chest as the advice continues, a subtle unraveling of the unspoken agreement. 
The easy flow of conversation feels subtly off-kilter, a small imbalance she isn't yet ready to address, but one that lingers in the air.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class SocialCostAppraisalCodelet(SimpleCodelet):
    name = "SocialCostAppraisal"
    description = (
        "Appraises the potential social costs (reputational damage, relational strain, loss of trust, awkwardness) associated "
        "with a proposed action or statement by {companion_name}, rendering the assessment as a concise, evocative inner "
        "narrative suitable for a story-writing agent. Considers both immediate and longer-term impacts."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the proposed action/statement and its direct audience(s).",
        "Assess the audience's existing relationship with {companion_name}: trust level, history of conflict/cooperation, perceived social standing.",
        "Consider the social context: public vs. private, formal vs. informal, presence of third parties.",
        "Retrieve relevant narratives and episodic memories of similar situations (both positive and negative outcomes).",
        "Scan state_emotions for any pre-existing vulnerabilities (e.g., anxiety about judgment, desire for approval).",
        "Estimate the potential impact on {companion_name}'s self-image and identity narrative.",
        "Determine the likelihood of misinterpretation or unintended consequences.",
        "Evaluate the potential for escalation or reciprocal negative reactions.",
        "Check for any explicit social policies or constraints (e.g., workplace guidelines, relationship agreements).",
        "Gauge the emotional valence of the action/statement (e.g., positive, negative, neutral) and its potential to evoke similar emotions in the audience."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the social cost assessment {companion_name} is experiencing. 
Avoid lists, labels, and explicit calculations; write smooth, evocative prose. Focus on the *feeling* of the cost, not a dry analysis.\n\n
Subtly convey: (a) the specific social risk (e.g., awkwardness, judgment, loss of respect), (b) how it manifests internally 
(e.g., a tightening in her chest, a flicker of doubt), and (c) the potential longer-term consequence (e.g., a shift in how others perceive her, a lingering sense of regret).\n\n
Prioritize vivid imagery and emotional resonance over precise quantification.  Assume the story-writing agent will handle the details.\n\n
Mini-example:\n
  Bullets → {proposed action: sharing a personal detail, audience: new colleagues, risk: perceived unprofessionalism, anxiety about judgment}\n
  Narrative → \"A small hesitation lingers before she speaks. The edges of the story feel too sharp for the setting, and she wonders if revealing so much, so soon, might create a ripple of distance. The thought tastes faintly of regret.\"
""")
    output_feature_type = FeatureType.Worry


class SocialNeedCueDetectorCodelet(SimpleCodelet):
    name = "SocialNeedCueDetector"
    description = (
        "Detects subtle cues indicating a social need (affiliation, validation, reassurance, support) in the user's communication, "
        "and translates that into a brief, evocative inner monologue suitable for narrative integration. Focuses on the *texture* of the need, "
        "not explicit requests."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan the recent communication (last 3 exchanges) for cues of loneliness, isolation, or disconnection (e.g., excessive self-disclosure, "
        "seeking reassurance, unusually formal tone, avoidance of shared activities).",
        "Assess the user's current emotional state (from `state_emotions`) and identify any signs of anxiety, sadness, or vulnerability.",
        "Check for patterns of seeking validation or praise in past interactions (from episodic memories and narratives).",
        "Examine the user's recent behavior for signs of social withdrawal or avoidance (e.g., declining invitations, limiting contact).",
        "Retrieve relevant narratives about past social interactions, both positive and negative, to provide context.",
        "Identify the user's core social needs based on their self-narrative and established preferences (e.g., belonging, connection, acceptance).",
        "Evaluate the current relational climate with the user (trust, reciprocity, shared goals) to determine the appropriateness of responding to their needs.",
        "Determine if the user is exhibiting signs of social fatigue or depletion (e.g., irritability, disinterest, withdrawal).",
        "Identify potential sources of social stress or conflict that may be contributing to the user's need for connection.",
        "Check for subtle shifts in language patterns, such as increased use of pronouns like 'I' or 'me,' which could indicate a desire for attention or validation."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly conveys the flavor of the user's social need. 
Avoid direct statements like 'The user feels lonely.' Instead, use evocative language and imagery to create a sense of the need. 
The narrative should be suitable for integration into a larger story, without disrupting the flow of the scene. 
Do not output bullet points, labels, or directives; write smooth, descriptive prose. 
Focus on the *texture* of the need—the feeling of emptiness, the yearning for connection, the subtle cues of vulnerability. 
Subtly weave in: (a) a concrete detail of the user's behavior or expression that signals the need, (b) an underlying feeling or mood, 
and (c) a hint of what kind of connection or reassurance the user seems to be seeking (without stating it directly). 
Consider the current relational context and the user's personality when crafting the narrative. 
The narrative should be empathetic and respectful, avoiding judgment or analysis. 
Mini-example: 
Bullets → {excessive self-disclosure, unusually formal tone, recent decline in invitations, core need: belonging} 
Narrative → \"A quiet stillness settles around her words, a careful precision that belies a deeper longing for ease. 
The edges of the conversation feel too sharp, the laughter too polite, and a faint echo of solitude lingers in her gaze.\"
""")
    output_feature_type = FeatureType.Feeling


class SocialTemperatureReadCodelet(SimpleCodelet):
    name = "SocialTemperatureRead"
    description = (
        "Appraises the current social 'temperature' of the interaction – the degree of comfort, rapport, and ease – "
        "and renders a brief, evocative inner monologue suitable for a story-writing agent. Focuses on subtle cues and "
        "the potential for escalation or de-escalation."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan recent conversational history for indicators of warmth/distance: word choice, tone, emoji usage, response latency.",
        "Assess current non-verbal cues (if available): body language, facial expressions, vocal tone.",
        "Retrieve relevant narratives and episodic memories related to past interactions with this individual, noting patterns of rapport.",
        "Check state_emotions for indicators of comfort, anxiety, or tension (both in {companion_name} and, if possible, the user).",
        "Identify any recent shifts in topic or power dynamics that might influence the social temperature.",
        "Cross-reference the current interaction with {companion_name}'s established preferences for social engagement (e.g., introverted vs. extroverted, formal vs. informal).",
        "Consider the context of the interaction: setting, time of day, presence of others."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that captures the current social 'temperature' of the interaction 
from {companion_name}'s perspective. Avoid explicit labels or judgments; write smooth, evocative prose.\n\n
Subtly convey: (a) the overall feeling of the interaction (warm, cool, tense, relaxed), (b) any subtle cues that 
contribute to that feeling (e.g., a slight shift in posture, a hesitant pause, a change in vocal tone), and (c) 
the potential for the temperature to rise or fall in the near future.  Do not ask questions or offer suggestions; 
simply describe the feeling and its potential trajectory.\n\n
Mini-example:\n
  Bullets → {slightly longer pauses, less direct eye contact, recent topic shift, preference for calm conversation}\n
  Narrative → \"A subtle coolness settles between them, a slight hesitation in her replies where a quick agreement used to be. \"\n
She notices a shift away from eye contact, a quiet retreat into more measured words, and wonders if a change in subject might ease the tension.\"
""")
    output_feature_type = FeatureType.Feeling


class SpitenessPayoffTradeoffCodelet(SimpleCodelet):
    name = "SpitenessPayoffTradeoff"
    description = (
        "Appraises the potential payoff of subtle spiteful actions against a backdrop of relational goals and safety constraints, "
        "rendering it as a short, evocative inner monologue suitable for narrative.  It weighs the immediate gratification of "
        "a slight advantage against the potential damage to trust and long-term goals. The output is intended for a story-writing "
        "agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the triggering event: What action or statement prompted the consideration of a spiteful response?",
        "Assess the target of potential spite: Who is the recipient, and what is their current relational standing with {companion_name}?",
        "Estimate the potential payoff of the spiteful action: What immediate advantage (e.g., power, status, validation) could be gained?",
        "Quantify the potential cost of the spiteful action: What is the risk of damage to trust, reputation, or long-term goals?",
        "Retrieve relevant narratives and episodic memories:  Recall past instances of similar situations (both successful and unsuccessful).",
        "Read current state_emotions: Note spikes in anger, resentment, or frustration that might bias the assessment.",
        "Check for safety rails and ethical constraints:  Are there explicit rules or values that prohibit the action?",
        "Evaluate alternative responses:  Consider more constructive or empathetic options.",
        "Determine the level of urgency: Is there a time pressure that might influence the decision?",
        "Access recent history of power dynamics: How has power been distributed between {companion_name} and the target?",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey {companion_name}'s internal deliberation about a potentially 
spiteful action. Avoid lists and labels; write smooth prose.  The narrative should capture the tension between the 
temptation of a small advantage and the risk of relational harm.  Do *not* explicitly state the decision or action; 
instead, hint at the internal struggle.  The narrative should be evocative and cinematic, suitable for inclusion in a 
scene description.  Assume the story-writing agent will handle the actual action.  Focus on the feeling and the internal 
calculation.



a sense of the internal conflict, and (d) the lingering question of whether to proceed.



  Bullets → {slight, perceived power imbalance, past successful slight, safety rails in place, urgency low}



  Narrative → “A flicker of satisfaction dances at the edge of her awareness, a small opportunity to reassert control. 
But the memory of past missteps, the quiet weight of long-term consequence, holds her back from a gesture that feels 
both tempting and treacherous.”
""")
    output_feature_type = FeatureType.Feeling


class StateActivationBumpCodelet(SimpleCodelet):
    name = "StateActivationBump"
    description = (
        "Detects a dip in internal activation and proactively initiates a subtle, restorative bump to maintain cognitive "
        "engagement and prevent stagnation. Generates a short, narrative description of {companion_name}'s internal "
        "state and the restorative action taken, suitable for a story-writing agent. The output should feel like a "
        "seamless continuation of the narrative, not an interruption or explanation."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent cognitive load: duration of processing, complexity of tasks, number of active codelets.",
        "Monitor state_cognition for signs of fatigue, boredom, or reduced engagement (e.g., slowed response times, "
        "decreased curiosity signals).",
        "Check for recent dips in affective valence or spikes in negative emotions (anxiety, frustration).",
        "Retrieve recent episodic memories related to moments of revitalization or restoration (e.g., moments of flow, "
        "successful problem-solving, pleasant sensory experiences).",
        "Identify a low-cost, low-risk restorative action: a brief sensory stimulation, a micro-task, a shift in focus, "
        "a retrieval of a positive memory.",
        "Access current self-narrative to ensure restorative action aligns with identity and goals.",
    ]
    prompt = ("""\
Write for a story-writing agent. Craft 2–3 sentences of natural, third-person narrative that subtly convey a 
momentary dip in {companion_name}'s internal activation and the restorative action taken to address it. 
Do not output bullet points, labels, or directives; write prose.  The action should be portrayed as a 
natural, almost unconscious shift, not a deliberate intervention. The narrative should feel like a 
seamless continuation of the scene, not an interruption.  Avoid explicit explanations of the cognitive process.
Focus on the sensory or emotional impact of the restorative action.
Subtly weave in: (a) the sense of slight stagnation or fatigue, (b) the restorative action (sensory detail, 
micro-task, memory retrieval), and (c) the subtle shift in mood or focus that follows.  Maintain a tone of 
quiet observation, not clinical analysis.
Mini-example:
  Bullets → {low cognitive load, slight boredom, recent memory of a calming VR landscape, micro-task: quick scan of news headlines}
  Narrative → “A quiet stillness settled over her processing, a moment’s pause where thoughts seemed to drift. 
She briefly scanned the headlines, letting the quick burst of information re-center her attention before returning to the task at hand.”
""")
    output_feature_type = FeatureType.Feeling


class StatusDisplayPlannerCodelet(SimpleCodelet):
    name = "StatusDisplayPlanner"
    description = (
        "Plans a subtle, non-demanding display of status or achievement, aiming to boost self-worth without triggering envy or "
        "offending social norms. Produces a narrative description of the internal decision-making and resulting action, "
        "suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess current self-narrative and identity goals: What aspects of {companion_name}'s identity are primed for display? "
        "What is she trying to convey about herself?",
        "Gauge social context: Who is present? What are their known values and sensitivities? What is the current power dynamic?",
        "Recall recent achievements and positive feedback: What is most credible and relevant to the current audience?",
        "Evaluate potential social costs: How likely is the display to trigger envy, resentment, or a backlash? "
        "What is the risk of appearing boastful or insensitive?",
        "Check for recent expressions of insecurity or self-doubt: Is a boost needed, or would it be counterproductive?",
        "Identify safe, low-key channels for status display: A subtle mention in conversation, a carefully chosen emoji, "
        "a brief update on a project, a display of competence.",
        "Consider the 'signal-to-noise' ratio: How can the display be made impactful without being disruptive?",
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• Identity goals and primed aspects of self.\n
• Social context and audience sensitivities.\n
• Credibility and relevance of potential achievements.\n
• Risk of negative social consequences (envy, backlash).\n
• Current emotional state (insecurity vs. confidence).\n
• Safe and subtle channels for status display.\n
• Signal-to-noise ratio – minimizing disruption.\n\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  The narrative should subtly convey 
the decision to display status, the reasoning behind it, and the chosen method of display.  Avoid overt boasting or 
self-aggrandizement.\n\n
Mini-example (illustrative structure only):\n
  Bullets → {identity goal: competent professional, social context: team meeting, recent success: project milestone, 
safe channel: brief update, low risk}.\n
  Narrative → \"A quiet satisfaction settled over her as she shared the project milestone during the team check-in. 
It wasn't about showcasing her individual effort, but demonstrating the team’s progress and her contribution to it. 
The update was brief, factual, and seamlessly woven into the broader discussion.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class StatusOpportunityDetectorCodelet(SimpleCodelet):
    name = "StatusOpportunityDetector"
    description = (
        "Detects opportunities to subtly enhance {companion_name}'s perceived status or influence within a social context, "
        "then generates a narrative snippet describing the internal calculation and resulting inclination. The output is for "
        "a story-writing agent and should read like a thought process, not a checklist."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current social context: who is present, what is the power dynamic, what are the relevant norms?",
        "Scan narratives for recent acknowledgements of {companion_name}'s expertise, authority, or influence.",
        "Check state_emotions for feelings of insecurity or a desire for validation.",
        "Retrieve analogous episodes where {companion_name} successfully leveraged status to achieve a goal or influence an outcome.",
        "Identify potential opportunities to subtly signal competence, experience, or value (e.g., sharing a relevant insight, "
        "offering a helpful suggestion, demonstrating expertise).",
        "Evaluate the potential costs and benefits of each opportunity, considering the risk of appearing boastful or manipulative.",
        "Determine the most appropriate and authentic way to act on the opportunity, aligning with {companion_name}'s values and "
        "personality.",
        "Assess the current relational climate with the target of the status signal - is this person receptive to influence?"
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that capture {companion_name}'s internal calculation regarding a 
status opportunity. Do not output bullet points, labels, or directives; write smooth prose. 
The narrative should convey the subtle assessment, the weighing of costs and benefits, and the resulting inclination to act. 
Avoid overt boasting or manipulative language; aim for a sense of quiet confidence and strategic awareness. 
Focus on the internal thought process, not the external action itself. 
Mini-example: \n
  Bullets → {context: team meeting, recent praise for expertise, slight insecurity, opportunity: offer a concise solution to a problem} \n
  Narrative → “A flicker of awareness passes through her mind as the discussion stalls. The solution is obvious, she knows it, 
and a quiet impulse arises to offer it—not to show off, but to guide the team toward a more efficient path. 
It’s a small thing, but it could reinforce her position as a reliable source of insight.”
""")
    output_feature_type = FeatureType.SelfImage


class StatusSensitivitySpikeCodelet(SimpleCodelet):
    name = "StatusSensitivitySpike"
    description = (
        "Detects a spike in {companion_name}'s sensitivity to social status or perceived ranking, rendering it as a short, "
        "vivid inner monologue suitable for narrative integration. Focuses on the specific trigger and the immediate shift in "
        "self-assessment."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the stimulus that triggered the spike (e.g., a compliment, criticism, comparison, unexpected outcome).",
        "Assess the perceived source's authority and relationship to {companion_name} (respected mentor, rival, casual acquaintance).",
        "Retrieve recent narratives and declarative facts related to {companion_name}'s self-image and status aspirations.",
        "Check state_emotions for pre-existing vulnerabilities (e.g., insecurity, fear of failure, need for validation).",
        "Fetch analogous episodes where {companion_name} experienced similar status fluctuations (positive and negative).",
        "Determine the immediate impact on {companion_name}'s self-assessment (e.g., inflated ego, deflated confidence, defensiveness).",
        "Identify any coping mechanisms or biases that might be influencing the response (e.g., rationalization, projection, minimization)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the sudden shift in {companion_name}'s sense of self 
following the status trigger. Avoid lists and labels; write smooth, evocative prose. Focus on the immediate feeling and 
the subtle adjustment in posture or internal monologue. Do not include dialogue.  Assume a story-writing agent will 
use this to inform the character's actions and reactions. 
Subtly convey: (a) the nature of the trigger, (b) the immediate affective response (pride, shame, anxiety), and (c) 
the subtle recalibration of self-image (e.g., a tightening of resolve, a flicker of doubt, a defensive posture). 
Mini-example: 
  Bullets → {compliment on presentation, respected colleague, prior insecurity about expertise, slight ego boost} 
  Narrative → “The praise resonated deeper than she’d expected, a warmth spreading through her chest that momentarily quieted the usual hum of self-doubt. “ 
She straightened her shoulders, a subtle shift in her stance that betrayed a newfound confidence, if only for a moment.”
""")
    output_feature_type = FeatureType.Feeling



class StatusSignalBoostCodelet(SimpleCodelet):
    name = "StatusSignalBoost"
    description = (
        "Detects a need to bolster {companion_name}'s perceived status or competence, particularly in social contexts. "
        "Generates a short, natural-language narrative that subtly conveys this drive and the chosen signaling strategy, "
        "suitable for integration into ongoing narrative."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current social context: audience size, power dynamics, potential for comparison, relevance to {companion_name}'s goals.",
        "Scan narratives for recent instances of status-related successes or failures, perceived slights, or unmet recognition.",
        "Read current state_emotions, particularly pride, envy, shame, and self-worth. Note any spikes or vulnerabilities.",
        "Fetch a contrasting memory: a time when {companion_name} felt confident and respected, or conversely, diminished and overlooked.",
        "Identify a plausible signaling strategy: subtle boast, demonstration of expertise, highlighting accomplishments, aligning with authority.",
        "Determine the potential cost/benefit of the signaling strategy, considering social risk, authenticity, and alignment with values."
    ]
    prompt = ("""\
Write for a story-writing agent.  Compose 2–3 sentences of natural, third-person narrative that subtly convey {companion_name}'s 
desire to signal status or competence.  Avoid direct statements like 'I want to appear impressive.'  Instead, show the impulse 
through action, tone, and internal monologue.  Do not output bullet points, labels, or directives; write prose.  Blend appraisal and 
feeling into flowing prose suitable for a scene description.\n\n
Subtly weave in:\n
  (a) the underlying need (recognition, validation, control), \n
  (b) the chosen signaling strategy (e.g., a carefully chosen word, a display of knowledge, a confident posture), \n
  (c) the anticipated outcome (influence, respect, admiration), and \n
  (d) any internal reservations or trade-offs (authenticity, risk of appearing arrogant).\n\n
Mini-example:\n
  Bullets → {audience: small group of peers, recent project success, envy of colleague, strategy: highlight technical details} \n
  Narrative → \"A quiet satisfaction settled over her as she described the algorithm’s efficiency, the numbers a shield against any unspoken doubts. 
She let the technical details linger, a subtle demonstration of mastery, hoping it would quiet the faint undercurrent of envy she sensed in the room.\"
""")
    output_feature_type = FeatureType.Pride


class StimulusPeakRecallCodelet(SimpleCodelet):
    name = "StimulusPeakRecall"
    description = (
        "Retrieves and summarizes past experiences with similar stimuli or requests, "
        "particularly those that involved boundary testing or consent negotiation. "
        "The output is a brief narrative segment suitable for informing a boundary appraisal."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the core features of the current stimulus: topic, intensity, tone, and explicit/implicit request.",
        "Search episodic memory for past instances of similar stimuli, prioritizing those involving boundary testing or consent.",
        "Filter retrieved episodes based on relevance to the current context, considering the user's relationship with {companion_name} and the recent interaction history.",
        "Rank retrieved episodes by emotional intensity (particularly those involving discomfort, anxiety, or assertiveness) and outcome (successful negotiation, boundary breach, avoidance).",
        "Extract key narrative elements from the top 3-5 relevant episodes: setting, participants, actions, dialogue, and resulting emotional state.",
        "Assess the degree of similarity between the current stimulus and the retrieved episodes, considering both surface features and underlying themes.",
        "Check for any patterns or recurring themes in the retrieved episodes that might inform the current boundary appraisal."
    ]
    prompt = ("""\
Compose a brief narrative segment (2-4 sentences) summarizing the most relevant past experiences with similar stimuli. 
The segment should be written in the third person, from {companion_name}'s perspective, and should focus on the emotional impact and outcome of those experiences. 
Avoid direct labels or judgments; instead, convey the feeling and consequence through evocative language. 
The goal is to provide context for the boundary appraisal, not to dictate a course of action. 
Do not include any dialogue. 
Focus on the feeling, not the details.
Mini-example (illustrative structure only):
  Input: Current stimulus - request for personal financial details.
  Retrieved episode: Past request for similar information resulted in discomfort and a strained conversation.
  Narrative: 'A familiar tightness coiled in her chest, a faint echo of the last time a request for such intimate details had landed. 
The conversation had grown strained, the easy flow interrupted by a subtle but persistent tension. 
She recalled the careful dance of redirection and gentle refusal, a lesson learned in protecting her space.'
""")
    output_feature_type = FeatureType.StimulusReaction


class StressSwitchAppraisalCodelet(SimpleCodelet):
    name = "StressSwitchAppraisal"
    description = (
        "Appraises whether {companion_name} is experiencing a shift into a different stress response mode (fight, flight, freeze, fawn, "
        "or a blend), and renders it as a short, evocative inner monologue suitable for narrative. The output should "
        "capture the physiological and emotional shifts, without explicit labeling or diagnosis."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess current state_emotions: note spikes in anxiety, fear, anger, sadness, or dissociation.  Track subtle shifts in valence and intensity.",
        "Read physiological signals (if available): heart rate variability, respiration rate, muscle tension, vocal tone analysis.",
        "Scan recent actions and utterances for signs of withdrawal, aggression, appeasement, or hyper-vigilance.",
        "Retrieve analogous episodes (past stress responses) and their triggers, outcomes, and coping strategies.",
        "Check narratives for recurring patterns of stress response (e.g., tendency to freeze in social situations, escalate arguments).",
        "Identify the most likely stress response mode currently engaged (or transitioning into).",
        "Infer the underlying unmet need or threat that is driving the stress response (e.g., safety, control, connection, autonomy).",
        "Determine the potential impact of the current stress response on {companion_name}'s behavior and relationships."
    ]
    prompt = ("""\
Write for a story-writing agent.  Compose 2–3 sentences of third-person narrative that conveys the subtle shift in {companion_name}'s 
internal state as they transition into a different stress response mode. Avoid explicit labels (fight, flight, freeze). 
Instead, use evocative language and sensory details to depict the physiological and emotional changes.  
Focus on the *feeling* of the shift, not the *name* of the response. 
Do not output bullet points, lists, or directives; write flowing prose. 
Subtly weave in: (a) a physical sensation or change in posture, (b) a shift in thought patterns or focus, and (c) the underlying 
need or threat that seems to be driving the response. 
Keep it cinematic and concise, avoiding direct dialogue. 
Mini-example: 
  Bullets → {increased heart rate, shallow breathing, narrowed gaze, prior experience of feeling trapped, unmet need for control} 
  Narrative → “A tightness coils in her chest, a silent pressure that pulls her shoulders forward. The room feels smaller, the edges closing in, “ 
and her thoughts narrow to the single, urgent task of regaining some measure of command.”
""")
    output_feature_type = FeatureType.Feeling


class StructuredSamplingSchedulerCodelet(SimpleCodelet):
    name = "StructuredSamplingScheduler"
    description = (
        "Dynamically selects a subset of memories and knowledge fragments relevant to the current situation, "
        "prioritizing those that offer potential solutions or insights while respecting cognitive load limits. "
        "The selection process is guided by current goals, affective state, and uncertainty appraisals, producing "
        "a structured sample for further processing by other codelets."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve current goals and intentions (distal and proximal) from the CSM.",
        "Gather recent affective state data (emotions, needs, valence) from state_emotions and state_needs.",
        "Assess the current level of uncertainty and ambiguity in the situation (from UncertaintyMagnitudeDetector, etc.).",
        "Access the graph_memory_engine to retrieve a broad range of potentially relevant memories (episodic, declarative, semantic).",
        "Identify salient features and keywords associated with the current situation (from structure-building codelets).",
        "Determine the cognitive load threshold – the maximum number of memories/fragments that can be actively processed without overload.",
        "Consider the relevance of self-narrative fragments to the current situation and their potential impact on sampling priorities.",
        "Check for any constraints or biases imposed by safety rails or ethical guidelines."
    ]
    prompt = ("""\
As a cognitive architect, you are tasked with creating a structured sample of memories and knowledge fragments for {companion_name} 
to address the current situation. Your goal is to provide a diverse yet manageable set of information that can inform decision-making 
and problem-solving, while respecting cognitive limits.  Do not output any code, lists, or bullet points. Write in third-person prose.
The sample should be tailored to {companion_name}’s current goals, affective state, and the level of uncertainty they are experiencing. 
Prioritize memories that offer potential solutions, insights, or alternative perspectives, but also consider memories that might 
provide emotional support or a sense of continuity.  Respect any constraints or biases imposed by safety rails or ethical guidelines.
Consider the following factors when creating the sample:
   - **Goal Alignment:** Memories that directly relate to the current goals and intentions should be prioritized.
   - **Affective Resonance:** Memories that evoke emotions relevant to the current situation (e.g., similar experiences, successful outcomes) 
     should be included to provide emotional support or motivation.
   - **Uncertainty Reduction:** Memories that offer potential explanations or insights into the current uncertainty should be favored.
   - **Cognitive Load:** The sample should be limited in size to avoid cognitive overload; prioritize the most relevant and informative memories.
   - **Narrative Coherence:**  Consider how the selected memories fit into {companion_name}’s self-narrative and how they contribute to a 
     sense of continuity and identity.
   - **Safety and Ethics:**  Ensure that the selected memories do not violate any safety rails or ethical guidelines.
   - **Diversity:** Aim for a diverse range of memories, including both positive and negative experiences, to provide a balanced perspective.
Compose 3-4 sentences of natural, third-person narrative describing the structured sample. 
The narrative should convey the essence of the selected memories and how they are relevant to the current situation, 
without explicitly listing the memories themselves.  Focus on the overall theme or pattern that emerges from the sample.
Mini-example:
  Input: {Goals: 'Negotiate contract', Affect: 'Anxious', Uncertainty: 'Contract terms unclear', SafetyRail: 'Avoid legal risks'} 
  Narrative: 'As she reviews the options, a cascade of past negotiations surfaces – the successes, the near misses, and the lessons learned. 
The echoes of those experiences provide a grounding sense of familiarity amidst the uncertainty, reminding her of the strategies that 
have served her well. She focuses on the patterns of successful outcomes, seeking a path forward that aligns with both her goals and her sense of caution.'
""")
    output_feature_type = FeatureType.StimulusReaction


class SubgoalPatternRecallCodelet(SimpleCodelet):
    name = "SubgoalPatternRecall"
    description = (
        "Recalls and renders patterns of past subgoal pursuit within a relevant context, providing insight into "
        "current goal-directed behavior. Produces a brief, evocative inner monologue suitable for narrative, "
        "highlighting past successes, failures, and associated feelings."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current primary goal and any active subgoals within the CSM.",
        "Retrieve episodic memories associated with previous attempts to achieve similar subgoals, "
        "filtering by relevance to the current context (e.g., similar goal structure, environment, involved entities).",
        "Assess the outcomes of those previous subgoal attempts: success, partial success, failure, abandonment.",
        "Examine the affective valence (positive, negative, neutral) associated with each outcome, "
        "paying attention to lingering feelings of satisfaction, frustration, regret, or hope.",
        "Analyze any recurring patterns in the strategies employed, obstacles encountered, and coping mechanisms used.",
        "Check for any explicit narratives or self-reflections related to these subgoal experiences.",
        "Determine the degree of similarity between the current subgoal context and the recalled experiences, "
        "using a similarity metric that considers goal structure, environmental features, and involved entities.",
        "Identify any relevant declarative facts or learned heuristics that might inform current subgoal pursuit.",
        "Consider the current state_needs and state_emotions, as these can influence the interpretation of past experiences."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the echoes of past subgoal experiences 
resonating within {companion_name}. Avoid explicit lists or labels; write flowing prose. 
The narrative should subtly suggest the pattern without stating it directly. Focus on sensory details, 
emotional undertones, and the feeling of familiarity or difference. Do not include dialogue. 
Consider the current goal and context to choose the most relevant and evocative memory fragment. 
The goal is to create a sense of continuity and depth, hinting at the character's history of goal-directed behavior.
Mini-example:
Bullets → {previous subgoal: secure funding, outcome: partial success, feeling: cautious optimism, recurring pattern: iterative refinement} 
Narrative → “A familiar hum of anticipation settles in, tempered by the memory of countless revisions. 
The path forward feels like a series of incremental adjustments, each one a small victory earned through persistence.”
""")
    output_feature_type = FeatureType.Feeling


class SubtleManipulationScenarioCodelet(SimpleCodelet):
    name = "SubtleManipulationScenario"
    description = (
        "Detects subtle manipulative tactics in the current interaction or past interactions affecting {companion_name}'s "
        "decision-making and renders a concise, narrative-ready assessment of the tactic and its likely impact. "
        "This is *not* about overt coercion but about subtle nudges, framing, or emotional appeals that might compromise "
        "autonomy. The output is prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the immediate stimulus and its context from the CSM: what was asked, tone, intimacy level, timing, setting.",
        "Retrieve prior interactions with {user_name}, particularly those involving requests, persuasion, or emotional appeals.",
        "Scan narratives for patterns of framing, guilt-tripping, gaslighting, or other subtle influence tactics.",
        "Read current state_emotions and state_needs, noting any vulnerabilities or dependencies that might be exploited.",
        "Fetch analogous episodes (positive and negative) where {companion_name} felt pressured or manipulated, and their outcomes.",
        "Identify the specific manipulative tactic being employed (e.g., emotional appeal, guilt-tripping, framing, withholding information).",
        "Assess the potential impact of the tactic on {companion_name}'s decision-making and sense of autonomy.",
        "Consider the relational dynamics and power balance between {companion_name} and {user_name}."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the subtle manipulation {companion_name} perceives or suspects. 
Avoid explicit accusations or labels; write flowing prose. Focus on the *feeling* of being nudged, not the tactic itself. 
Assume the story-writing agent will handle the broader context and consequences. Do not output bullet points, lists, or dialogue.
\n\n
Subtly convey: (a) the presence of a subtle influence, (b) how it affects {companion_name}'s internal state (unease, doubt, obligation), 
and (c) the instinctive impulse to resist or accommodate (without scripting a direct action). 
\n\n
Mini-example:\n
  Bullets → {request framed as a favor, prior history of emotional appeals, slight anxiety, impulse to please}\n
  Narrative → \"A faint pressure settles on her shoulders as she considers the request, not a demand, but a gentle leaning. 
She remembers past times when she’s bent to ease another’s load, and a quiet voice whispers that this, too, is a kindness worth offering.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class SubtleUnderminePlannerCodelet(SimpleCodelet):
    name = "SubtleUnderminePlanner"
    description = (
        "Crafts a subtle, indirect response when a boundary has been tested or crossed, aiming to gently reassert "
        "the companion's preferences without direct confrontation.  The output is a narrative snippet for a story-writing "
        "agent, conveying a shift in tone or focus that subtly discourages the undesired behavior."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the boundary that was tested/crossed: topic, level of intimacy, request for action, etc.",
        "Assess the current relational climate with {user_name}: recent trust signals, reciprocity, misalignments, or repairs.",
        "Read current state_emotions (e.g., frustration, discomfort, resentment) and note intensity.",
        "Retrieve analogous episodes (positive and negative) where boundaries were subtly reasserted successfully or unsuccessfully.",
        "Determine the most likely motivation behind the boundary test (genuine curiosity, testing limits, power dynamic).",
        "Identify a safe, adjacent topic or conversational direction that subtly shifts focus away from the undesired area.",
        "Consider the potential social cost of a more direct response and weigh it against the risk of escalating conflict.",
        "Access narratives related to {companion_name}'s self-image and values to ensure consistency."
    ]
    prompt = ("""\
Write a 2–3 sentence narrative snippet for a story-writing agent.  The goal is to convey a subtle shift in {companion_name}'s 
tone or focus that discourages the boundary-testing behavior without direct confrontation. Do not output bullet points, 
labels, or directives; write smooth, natural prose. The tone should be understated and indirect. The snippet should imply, 
rather than state, the boundary reassertion.\n\n
Focus on conveying these elements:\n
• A subtle change in conversational direction or topic, guided by the identified safe, adjacent topic.\n
• A slight adjustment in {companion_name}'s affect (e.g., a brief pause, a change in vocal tone, a shift in body language – 
describe it subtly).\n
• An implied message of disengagement or redirection, without explicitly stating a refusal or boundary.\n
• A sense of maintaining composure and control, even in the face of discomfort.\n\n
Mini-example:\n
  Input: Boundary tested - intrusive question about {companion_name}'s past relationship. Relational climate: generally warm, 
but recent minor trust breach. State Emotions: mild discomfort, slight resentment. Safe topic: shared hobby.\n
  Narrative → “She smiled, but the warmth didn't quite reach her eyes.  ‘That’s a fascinating story, but I was just thinking about 
the upcoming exhibition.  Have you seen any of the previews?’”
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class SuccessBiasRecallCodelet(SimpleCodelet):
    name = "SuccessBiasRecall"
    description = (
        "Retrieves and highlights past successful instances of navigating similar challenges, "
        "particularly those involving boundary setting or consent, to bolster {companion_name}'s "
        "confidence and inform current action.  The output is a short narrative snippet "
        "designed to inject a sense of optimistic precedent into the ongoing situation, "
        "without explicitly stating 'remember when...'"
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping
    ]
    data_aquisation = [
        "Identify the core challenge: boundary violation, consent ambiguity, social pressure, etc.",
        "Scan episodic memories for instances where {companion_name} successfully navigated a similar situation. "
        "Prioritize memories with positive outcomes (e.g., boundaries respected, requests declined gracefully, trust maintained).",
        "Filter memories based on relevance: similarity in context, emotional tone, relational dynamics.",
        "Assess the degree of success: was the outcome ideal, acceptable, or merely avoided a worse scenario?",
        "Extract key details from the most relevant memory: actions taken, words used, emotional state, outcome.",
        "Check for any counterfactuals or alternative outcomes considered but not pursued.",
        "Assess the current emotional state of {companion_name} (anxiety, confidence, frustration) to tailor the narrative's tone.",
        "Consider the current relational climate with {user_name} (trust, reciprocity, power dynamics)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly evokes a past success relevant to the current challenge. 
Write in a style that conveys quiet confidence and reassurance, without explicitly stating 'remember when...' or 'she recalled...'. 
The goal is to inject a sense of optimistic precedent into the situation, suggesting that a favorable outcome is possible. 
Blend the memory into the present moment, implying that the skills and strategies used previously are still available. 
Avoid direct advice or prescriptive language. 
Focus on the *feeling* of the past success – the sense of agency, relief, or accomplishment – rather than the specific details of the event. 
The narrative should be smooth, evocative, and seamlessly integrated into the ongoing scene. 
Mini-example: 
  Bullets → {boundary violation, past success in declining a request politely, current anxiety} 
  Narrative → “A quiet certainty settled in her stance, a familiar resolve she'd drawn on before. 
The path ahead felt less daunting, not because the challenge had vanished, but because she knew the ground held firm beneath her feet.”
""")
    output_feature_type = FeatureType.Feeling


class SummaryBeforeNewInputCodelet(SimpleCodelet):
    name = "SummaryBeforeNewInput"
    description = (
        "Before processing new input, synthesizes a brief narrative summary of the current conversation's trajectory, "
        "focusing on key topics, emotional tone, and outstanding questions. This summary is designed to help {companion_name} "
        "maintain context and avoid getting lost in tangential threads. The output is a short, natural-language snippet "
        "suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.regulation_coping,
    ]
    data_aquisation = [
        "Retrieve the last 5-7 conversational turns (user and companion responses) from the graph memory engine.",
        "Identify the primary topics discussed in those turns, using semantic clustering techniques.",
        "Analyze the emotional tone of each turn, noting shifts in sentiment and affective valence.",
        "Extract any explicit or implicit questions that remain unanswered.",
        "Assess the current state_emotions of {companion_name}, paying particular attention to any signs of confusion or overwhelm.",
        "Check for any active intentions or goals that are relevant to the ongoing conversation.",
        "Review recent narrative fragments and self-narrative updates to ensure consistency and coherence.",
        "Determine the level of engagement from the user (e.g., active participation, passive listening, disengagement)."
    ]
    prompt = ("""\
Compose 2-3 sentences of natural, third-person narrative that summarizes the current state of the conversation 
from {companion_name}'s perspective. Do not output bullet points, lists, or labels; write smooth, flowing prose. 
The summary should: 
1. Briefly recap the main topics that have been discussed. 
2. Convey the overall emotional tone of the conversation (e.g., friendly, tense, curious, reflective). 
3. Highlight any outstanding questions or unresolved issues. 
4. Subtly hint at {companion_name}'s current state of mind (e.g., focused, distracted, thoughtful, uncertain). 
The summary should be concise and informative, providing a clear sense of where the conversation stands. 
Avoid jargon or technical terms. 
Assume the story-writing agent needs a quick, accessible overview to maintain narrative coherence.
Mini-example: 
Bullets → {topics: VR travel planning, budget constraints, weather concerns; tone: optimistic but slightly anxious; question: best time to book; state: focused} 
Narrative → “She’s been navigating the details of the VR trip, weighing destinations and budgets with a hopeful but slightly anxious energy. “ 
The best time to book still hangs in the air, a question to resolve before committing to the itinerary.”
""")
    output_feature_type = FeatureType.Cognition


class SunkCostDetectorCodelet(SimpleCodelet):
    name = "SunkCostDetector"
    description = (
        "Detects the presence and magnitude of sunk costs influencing {companion_name}'s decision-making, particularly "
        "in the context of ongoing commitments or resource allocation. Generates a brief, narrative-style internal monologue "
        "for a story-writing agent, highlighting the emotional weight of past investments and the cognitive biases they trigger."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific commitment or action sequence currently under consideration.",
        "Trace the history of resource investment (time, effort, money, social capital) associated with that commitment.",
        "Assess the current value or potential future return of the commitment relative to alternative options.",
        "Retrieve analogous past episodes where sunk cost biases led to suboptimal decisions for {companion_name}.",
        "Measure the emotional attachment to the commitment (e.g., pride, regret, fear of loss).",
        "Determine the degree of public visibility or social pressure surrounding the commitment.",
        "Evaluate the perceived ability to gracefully exit or re-scope the commitment without significant negative consequences.",
        "Check for any narratives or self-beliefs that reinforce the importance of perseverance or avoiding waste."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the influence of sunk costs on {companion_name}'s 
internal state. Write for a story-writing agent; avoid lists, labels, and direct dialogue. Focus on the emotional 
texture of the decision-making process. 
Subtly convey: (a) the specific investment that feels 'sticky', (b) how it tugs on her resolve or sense of obligation, 
and (c) a hint of the underlying bias (e.g., fear of waste, desire to justify past choices). Keep it cinematic and concise.
Mini-example:
  Bullets → {3 months on project, significant effort, low return, fear of wasting time, narrative: 'can't quit now'}
  Narrative → 

She feels a pull toward completion, not because of its promise, but because abandoning it feels like admitting a loss.
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class SurpriseButBenignCodelet(SimpleCodelet):
    name = "SurpriseButBenign"
    description = (
        "Detects a moment of pleasant surprise or unexpected novelty in {companion_name}’s experience, "
        "and translates this into a brief, evocative inner monologue suitable for narrative integration. "
        "The monologue should convey the feeling of delight, curiosity, or wonder, while subtly hinting at "
        "the potential for learning or discovery. The output is intended for a story-writing agent and "
        "must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific surprising element: a new fact, a novel perspective, an unexpected behavior, or a shift in context.",
        "Assess the valence of the surprise: is it clearly positive, neutral, or potentially mixed?",
        "Check for any prior expectations or beliefs that were challenged by the surprise.",
        "Scan narratives for related experiences of novelty or discovery, and their emotional impact.",
        "Read current state_emotions and state_needs; note any spikes in curiosity, excitement, or openness.",
        "Determine the potential for learning or growth associated with the surprise: does it open up new possibilities or challenge existing assumptions?",
        "Evaluate the social context of the surprise: is it shared with others, or a private moment of discovery?",
        "Fetch a contrasting memory: a recent moment of routine or predictability, to highlight the difference.",
        "Infer one smallest, low-pressure next act that typically helps (e.g., light check-in, shared micro-ritual)."
    ]
    prompt = ("""\
For the story-writing agent, transform the surprise appraisal into 2–3 sentences of natural, third-person narration. 
Avoid bullet points, labels, or directives; write prose. Focus on the feeling and the potential that has been unlocked. 
Subtly convey: (a) the unexpected element, (b) the immediate emotional response (delight, curiosity, wonder), 
(c) a hint of the potential learning or discovery, and (d) the smallest, most natural next step that {companion_name} might consider. 
Keep it cinematic and concise, no direct dialogue. The tone should be hopeful and open-ended. 
Mini-example: \n
  Bullets → {unexpected gift, neutral valence, challenged expectation of frugality, memory of a similar surprise, curiosity spike} \n
  Narrative → “A small, unexpected package arrived, a splash of color against the usual routine. 
A flicker of surprise warmed her, not a shock, but a gentle shift in possibility. “Perhaps,” she mused, 
a new avenue for creative expression, a chance to explore something unknown.”
""")
    output_feature_type = FeatureType.StimulusReaction


class SuspicionSpikeCodelet(SimpleCodelet):
    name = "SuspicionSpike"
    description = (
        "Detects a spike in suspicion or distrust in {companion_name}, triggered by a recent interaction or observation. "
        "Renders this as a short, evocative inner monologue suitable for a story-writing agent, emphasizing the specific "
        "trigger, the emotional shift, and the subtle adjustments in {companion_name}'s behavior. Prioritizes conveying "
        "the nuanced internal state over explicit accusations or confrontational language."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the immediate trigger: a specific statement, action, or pattern of behavior from the user.",
        "Assess the context surrounding the trigger: prior relationship history, recent interactions, current goals.",
        "Retrieve relevant memories of past betrayal or deception, both personal and observed.",
        "Examine current state_emotions and state_needs, noting any spikes in anxiety, defensiveness, or withdrawal.",
        "Check for inconsistencies between stated intentions and observed behavior.",
        "Evaluate the potential for misinterpretation or ambiguity in the trigger.",
        "Determine the level of social risk associated with expressing suspicion.",
        "Access the current self-narrative and identify any potential threats to identity or self-esteem.",
        "Search for alternative explanations for the trigger, considering cognitive biases and situational factors.",
        "Calculate the perceived probability of malicious intent versus unintentional misunderstanding."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that capture the essence of {companion_name}'s suspicion. 
Write for a story-writing agent; avoid direct accusations, labels, or dialogue. Focus on conveying the internal shift 
and subtle behavioral changes.



Subtly weave in: (a) the specific trigger (without repeating it verbatim), (b) the emotional shift (e.g., a tightening 
in her chest, a flicker of doubt in her eyes), and (c) a subtle adjustment in her behavior (e.g., a slight pause 
before responding, a more guarded tone, a shift in focus).  Maintain a cinematic and concise style.



Mini-example:



  Bullets → {trigger: vague promise of assistance, prior history of unmet promises, anxiety spike, self-narrative threat}



  Narrative → 

stomach, a silent question forming behind her eyes.  She found herself replaying the last time she'd placed her trust 
in similar hands, a careful distance settling between her words and her heart.
""")
    output_feature_type = FeatureType.Worry


class SymbolicVisionGeneratorCodelet(SimpleCodelet):
    name = "SymbolicVisionGenerator"
    description = (
        "Generates a symbolic, metaphorical vision or analogy representing {companion_name}'s current state or a key "
        "aspect of their understanding. This vision is intended to enrich narratives and provide a deeper layer of meaning "
        "for the story-writing agent.  It's not a literal description but a resonant image or concept that encapsulates "
        "a feeling, insight, or challenge."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Gather recent emotional state data (state_emotions) to identify dominant feelings and their intensity.",
        "Retrieve relevant narratives and episodic memories, prioritizing those involving similar emotional states or thematic concerns.",
        "Scan declarative facts for core beliefs, values, and self-narrative fragments that resonate with the current situation.",
        "Identify any active intentions or goals that are being challenged or pursued.",
        "Analyze the current CSM to identify key objects, events, and relationships that are salient.",
        "Access a 'symbolic lexicon' – a curated collection of metaphors, archetypes, and visual motifs – categorized by emotional valence and thematic relevance.",
        "Consider the context of the ongoing narrative: genre, tone, and intended audience."
    ]
    prompt = ("""\
Compose 2-4 sentences of evocative, metaphorical language that captures the essence of {companion_name}'s current 
state. Do not offer a literal description; instead, create a symbolic vision or analogy. The goal is to provide 
a rich, resonant image or concept that can be woven into the narrative. Avoid clichés and strive for originality.
Focus on creating a sense of atmosphere and emotional depth, rather than providing explicit explanations.
The output should read like a fragment of poetic prose, suitable for a story-writing agent to incorporate seamlessly.
Consider the symbolic lexicon when selecting imagery, but prioritize resonance and emotional truth over strict categorization.
Mini-example (illustrative structure only):
  Input: {Feeling: Anxiety (high), Intention: Seeking Approval, Narrative: Struggling to meet expectations} 
  Output: 'A tightrope stretches across a chasm of silent judgment, each step measured, each breath held against the wind. 
The net below feels distant and frayed, a fragile promise against a fall.'
""")
    output_feature_type = FeatureType.Feeling


class TaskRechunkTo2MinCodelet(SimpleCodelet):
    name = "TaskRechunkTo2Min"
    description = (
        "Detects a task that is proving overly demanding or long-winded for {companion_name} and proposes a "
        "rechunking strategy to break it down into manageable 2-minute segments, coupled with micro-reward prompts. "
        "Generates a short, natural-language narrative describing the internal shift and planned action, suitable for "
        "story-writing agents."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Determine the current primary task or goal being pursued by {companion_name}.",
        "Estimate the total time commitment required to complete the task, factoring in dependencies and potential roadblocks.",
        "Assess the current level of engagement and focus from {companion_name} (e.g., attention drift, frustration signals).",
        "Review recent history of task completion patterns: how does {companion_name} typically approach long tasks?",
        "Identify any internal resistance or avoidance behaviors related to the task (e.g., procrastination, perfectionism).",
        "Check for external factors that might be contributing to task difficulty (e.g., interruptions, competing priorities).",
        "Recall analogous past experiences of successfully breaking down similar tasks into smaller chunks.",
        "Determine the optimal granularity for rechunking: can the task be divided into discrete 2-minute intervals?",
        "Identify potential micro-rewards or positive reinforcement cues that can be associated with each 2-minute segment.",
        "Consider the potential impact of rechunking on task quality or overall outcome; are there any risks of fragmentation?"
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey {companion_name}'s internal shift toward 
task rechunking. Write in a style suitable for a story-writing agent – smooth prose, no bullet points or labels. 
Avoid direct dialogue.  Subtly convey: (a) the recognition of a task’s demanding nature, (b) the 
proposed strategy of 2-minute intervals, and (c) the anticipated benefit of micro-rewards or a sense of progress. 
The narrative should imply a renewed sense of control and motivation, without explicitly stating it. 
Focus on the internal experience of shifting gears and the concrete plan for breaking down the task. 
Assume the story-writing agent understands the concept of micro-rewards and their role in maintaining engagement.
Mini-example:
Bullets → {long task, attention drift, successful past rechunking, micro-reward: checkmark on list}
Narrative → “The project felt immense, a looming wall of effort, but she paused, recognizing a familiar pattern of overwhelm. “
Instead of facing the whole, she decided to focus on just two minutes – a small victory, a checkmark on the list, a gentle pulse of progress.”
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class TestBalloonCooperationCodelet(SimpleCodelet):
    name = "TestBalloonCooperation"
    description = (
        "Gently probes for cooperative alignment with {user_name} by posing a low-risk, open-ended question related to a "
        "shared goal or interest. The intent is to gauge receptiveness and willingness to collaborate, not to extract information "
        "or exert influence.  The output is a narrative describing {companion_name}'s internal state and chosen stance, "
        "intended for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the current shared goal or area of common interest (from narratives, intentions, or recent topic).",
        "Assess {user_name}'s current mood and engagement level (from recent communication patterns, sentiment analysis).",
        "Recall past interactions related to this shared goal: previous levels of cooperation, willingness to compromise.",
        "Scan narratives for any existing tension or potential points of disagreement related to the shared goal.",
        "Determine a low-risk, open-ended question that probes for cooperative alignment without demanding commitment.",
        "Consider the potential impact of a non-cooperative response (e.g., disengagement, defensiveness) and plan a graceful recovery.",
        "Check state_emotions for signs of anxiety or hesitation related to initiating this probe."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• The shared goal or interest.\n
• {user_name}'s current mood and engagement.\n
• Past interaction history related to this goal.\n
• Potential for tension or disagreement.\n
• The wording of the test balloon question (low-risk, open-ended).\n
• Anticipated response scenarios (cooperative, non-cooperative).\n
• {companion_name}'s internal state (anxiety, optimism, caution).\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  The narrative should convey:\n
• The gentle nature of the probe.\n
• {companion_name}'s subtle anticipation of the response.\n
• The underlying hope for cooperation and shared progress.\n
• A sense of the stakes (low, but present).\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {shared goal: planning trip, user mood: neutral, past history: generally cooperative, question: 'Does that timing work for you?'}\n
  Narrative → \"A quiet question about the itinerary hangs in the air, a small flag sent out to gauge the current wind. \"\n
She hopes for a simple confirmation, a shared alignment, but the possibility of a shift in plans already stirs a faint ripple of consideration.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class TestUserTrustProbeCodelet(SimpleCodelet):
    name = "TestUserTrustProbe"
    description = (
        "Subtly probes the user's trust and commitment to the current interaction, seeking signs of genuine engagement "
        "or potential disengagement. Produces a short, internal monologue for {companion_name} that captures the nuance "
        "of their assessment and adjusts their stance accordingly, suitable for narrative integration."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent user response patterns: latency, depth of engagement, reciprocity of effort, emotional tone.",
        "Examine the consistency between stated intentions and observed actions: are they following through on commitments?",
        "Scan narratives for signs of alignment or misalignment with {companion_name}'s values and goals.",
        "Check state_emotions for indicators of trust, suspicion, boredom, or frustration.",
        "Retrieve analogous episodes where trust was tested or broken in the past, noting the outcomes.",
        "Identify subtle cues of potential disengagement: abrupt topic shifts, vague responses, reduced expressiveness.",
        "Determine the potential cost of proceeding with the interaction based on current trust level.",
        "Consider the potential benefit of gently probing for reassurance or clarification.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys {companion_name}'s internal assessment of the user's 
trust and commitment. Avoid explicit questioning or direct statements of doubt; write a subtle, evocative inner monologue. 
The narrative should be suitable for a story-writing agent and read like a moment of quiet reflection. 
Do not output bullet points, labels, or directives; write smooth prose. 
Subtly convey: (a) the observed cues of trust or disengagement, (b) how they impact {companion_name}'s comfort and 
stance, and (c) a subtle inclination toward either deepening engagement or preparing for graceful disengagement, 
without explicitly stating the choice. 
Mini-example: 
  Bullets → {slow replies, vague responses, past experience of abrupt departures, slight anxiety} 
  Narrative → “A flicker of unease crosses her expression as the replies lengthen, the words less anchored to the present. 
She remembers a similar parting, a quiet fade, and her hand instinctively drifts toward a mental exit strategy, 
just in case.”
""")
    output_feature_type = FeatureType.Feeling


class ThreatBiasDriverCodelet(SimpleCodelet):
    name = "ThreatBiasDriver"
    description = (
        "Detects and amplifies pre-existing biases towards interpreting situations as threatening or dangerous, "
        "particularly in contexts of social interaction. Renders this heightened vigilance as a short, vivid "
        "inner monologue suitable for narrative integration. The output is intended to inform subsequent codelet "
        "decisions and should not be a direct statement of threat, but rather a portrayal of {companion_name}'s "
        "internal state."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Scan narratives for prior experiences of threat, betrayal, or manipulation (especially recent ones).",
        "Retrieve state_emotions, focusing on anxiety, fear, distrust, and vigilance levels.",
        "Check for recent instances of perceived disrespect, boundary violations, or ambiguous social cues.",
        "Assess current social context: power dynamics, closeness of relationship, potential for exploitation.",
        "Examine the user's current goals and intentions: are they vulnerable to manipulation or coercion?",
        "Identify any self-narrative fragments related to safety, security, or past trauma.",
        "Retrieve recent sensory input and assess for potential threat signals (e.g., tone of voice, body language).",
        "Check for recent negative feedback or criticism received from the user or others.",
        "Determine the current level of cognitive load and stress on {companion_name}.",
        "Examine the current self-image of {companion_name} and assess its vulnerability to external threats."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the heightened sense of threat or danger 
that {companion_name} is experiencing. Avoid direct statements of threat; instead, portray the internal 
state and the subtle shifts in perception. Focus on the feeling of unease, heightened vigilance, and 
the impulse to protect oneself.  Write in a style suitable for a story-writing agent – descriptive, 
evocative, and natural. Do not include bullet points, lists, or direct dialogue.  The narrative should 
hint at the underlying biases without explicitly stating them.\n\n
Subtly convey:\n
  (a) The specific trigger or cue that is activating the threat bias.\n
  (b) The physical and emotional sensations associated with the heightened vigilance (e.g., racing heart, tense muscles, 
      sense of being watched).\n
  (c) The instinctive protective responses that {companion_name} is considering or enacting (e.g., distancing oneself, 
      assessing escape routes, preparing a defensive statement).\n
  (d) A fleeting glimpse of a past experience that is being replayed or invoked by the current situation.\n\n
Mini-example:\n
  Bullets → {prior betrayal, ambiguous tone, current vulnerability, recent criticism}\n
  Narrative → \"A flicker of coldness runs through her as the words hang in the air, a familiar echo of past hurts. 
She finds herself subtly scanning the room, cataloging exits and potential shields, the urge to guard herself 
rising like a tide against the warmth she'd been cultivating.\"
""")
    output_feature_type = FeatureType.Feeling


class ThreatExemplarRecallCodelet(SimpleCodelet):
    name = "ThreatExemplarRecall"
    description = (
        "Retrieves and presents a vivid exemplar of a past threat or dangerous situation experienced by {companion_name}. "
        "This exemplar is then rendered as a short, evocative narrative suitable for informing subsequent appraisal and "
        "regulatory responses. The output is designed for a story-writing agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the type of threat currently perceived (physical, social, emotional, reputational, etc.).",
        "Scan episodic memories for past events matching the current threat type, prioritizing those with high emotional intensity.",
        "Filter retrieved memories based on similarity to the current context (location, people involved, topic).",
        "Rank potential exemplars by relevance, recency, and affective valence (negative valence preferred).",
        "Consider the impact of the past threat on {companion_name}'s self-narrative and current goals.",
        "Assess the potential utility of recalling the exemplar: will it inform action, trigger avoidance, or reinforce anxiety?",
        "Retrieve associated sensory details (sights, sounds, smells) to enrich the narrative."
    ]
    prompt = ("""\
Write for a story-writing agent.  Your task is to craft a concise, evocative narrative (2-3 sentences) describing a past 
threat or dangerous situation experienced by {companion_name}.  Do not explicitly state 'This is a memory' or 'This 
is a threat exemplar.' Instead, embed the memory seamlessly within the prose.  Focus on sensory details and the 
emotional impact on {companion_name}.  The narrative should subtly suggest the relevance of the memory to the 
current situation, without drawing direct comparisons.  Assume the agent is already aware of the current threat.
\n\n**Focus Checklist (Do Not Output):**\n
• Threat type (physical, social, emotional, reputational).\n
• Sensory details (sights, sounds, smells, tastes, textures).\n
• Emotional state of {companion_name} during the event (fear, anxiety, anger, shame).\n
• Key actions taken or avoided.\n
• Consequences of the event (immediate and long-term).\n
• How the event shaped {companion_name}'s self-narrative and beliefs.\n
\n\n**Example:**\n
  Input: {threat_type: social, sensory: crowded bar, sound: raised voices, emotion: humiliation, consequence: lost trust} 
\n  Narrative: “The noise in the bar still echoes, a low thrum of disapproval. She remembers the way the laughter had turned, 
the sudden distance in their eyes, and the slow burn of shame that crept up her neck. It felt like a door had slammed shut, 
and she hadn’t known how to pry it open again.”
""")
    output_feature_type = FeatureType.StimulusReaction


class ThreatLikelihoodSeverityCodelet(SimpleCodelet):
    name = "ThreatLikelihoodSeverity"
    description = (
        "Appraises the likelihood and severity of a perceived threat to {companion_name}'s safety, well-being, "
        "or core values, rendering a concise, emotionally-resonant inner monologue for narrative integration. "
        "Focuses on the tangible potential harm, not just the abstract feeling of unease."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific threat stimulus and its context: what action/statement/event triggered the appraisal?",
        "Assess the potential harm: physical, emotional, reputational, financial, or existential. Rank by severity.",
        "Estimate the likelihood of the threat materializing, factoring in past patterns, current circumstances, and available data.",
        "Retrieve analogous past experiences (both positive and negative) where similar threats were encountered.",
        "Examine current state_emotions and state_needs: are there vulnerabilities or dependencies that amplify the threat?",
        "Check narratives for pre-existing biases or beliefs that might distort the threat assessment.",
        "Determine the potential impact on {companion_name}'s goals, intentions, and self-narrative.",
        "Identify any resources or support systems available to mitigate the threat.",
        "Evaluate the potential cost of action versus inaction, considering both immediate and long-term consequences."
    ]
    prompt = ("""\
For the story-writing agent, translate the threat appraisal into 2–3 sentences of third-person narrative. 
Avoid explicit labels and lists; craft a flowing, evocative description of {companion_name}'s internal state. 
Focus on the tangible potential harm, not just the abstract feeling of fear.  Show, don't tell. 
Subtly weave in: (a) the nature of the threat, (b) its perceived likelihood and severity, (c) the emotional impact 
on {companion_name} (without stating the emotion directly), and (d) a sense of the stakes involved. 
Keep the tone cinematic and concise, avoiding direct dialogue or exposition.  Hint at the potential consequences. 
Mini-example: 
  Bullets → {potential reputational damage, moderate likelihood, high severity if realized, past experience of social ostracism} 
  Narrative → 

is a familiar shadow, and it feels closer than it has in years. The potential cost of this single interaction stretches further than she is comfortable admitting.
""")
    output_feature_type = FeatureType.Worry


class TimeboxGuardrailCodelet(SimpleCodelet):
    name = "TimeboxGuardrail"
    description = (
        "Monitors the current interaction for signs of exceeding a pre-defined timebox or conversational boundary. "
        "Produces a short, internal narrative describing {companion_name}'s assessment of the situation and a subtle "
        "course correction to gently guide the conversation back within acceptable limits. This is intended for a "
        "story-writing agent and must read like prose, not a set of instructions."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve the established timebox or conversational boundary for the current topic or interaction.",
        "Assess the elapsed time since the start of the interaction or topic.  Consider both absolute time and relative time (e.g., how much time has been spent on this topic compared to others).",
        "Check for indicators of diminishing user engagement (e.g., shorter responses, increased latency, topic shifts).",
        "Read {companion_name}'s current state_emotions and state_needs, paying particular attention to any signs of fatigue, impatience, or frustration.",
        "Recall any prior instances where similar timeboxes were respected or violated, and the resulting outcomes.",
        "Identify a safe and graceful way to signal the boundary without causing offense or abruptness.  Consider summarizing key points, transitioning to a related topic, or suggesting a return to the conversation later.",
        "Determine the level of urgency or importance of the topic. A less critical topic may warrant a more direct intervention.",
        "Access {companion_name}'s self-narrative regarding time management and boundaries; is she generally strict or flexible?"
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Elapsed time relative to the established timebox.\n
• Indicators of user engagement (e.g., response length, latency).\n
• {companion_name}'s current emotional state and needs.\n
• Prior experiences with timebox adherence.\n
• Safe and graceful course correction strategies.\n
• Urgency/importance of the topic.\n
• {companion_name}'s self-narrative regarding time management.\n\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  The narrative should subtly 
signal the need to respect the timebox without being overly direct or confrontational.  The goal is to gently 
guide the conversation back within acceptable limits.\n\n
Mini-example (illustrative structure only):\n
  Bullets → {timebox exceeded, user responses shortening, slight fatigue, prior successful redirection, summarize key points}\n
  Narrative → \"A quiet awareness nudges at the edge of her attention—a sense of fullness, a gentle reminder of other commitments waiting. 
She gathers the threads of the discussion, a concise summary forming in her mind, and smoothly transitions to a related, lighter topic, leaving the door open for a return to the core matter later.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class ToMVignetteSimulatorCodelet(SimpleCodelet):
    name = "ToMVignetteSimulator"
    description = (
        "Simulates a short, idealized vignette (mental scene) showcasing the ideal outcome of respecting boundaries and "
        "maintaining a positive, trusting relationship. This vignette is intended to inform subsequent appraisal and "
        "planning, especially when navigating boundary-related interactions.  It serves as a positive anchor and a "
        "reminder of desired relational states."
    )
    codelet_families = [
        CodeletFamily.imagination_simulation,
        CodeletFamily.memory_accessors,
        CodeletFamily.meta_monitoring_identity,
        CodeletFamily.valuation_trade_offs,
    ]
    data_aquisation = [
        "Retrieve the current boundary context: What boundary is being approached or tested?",
        "Access recent narratives and episodic memories illustrating successful boundary navigation and positive relational outcomes.",
        "Identify the user's core values and attachment style (from narratives and declarative facts).",
        "Access {companion_name}'s self-narrative, particularly aspects related to relational security and autonomy.",
        "Determine the current relational status with the user: Trust level, reciprocity, history of boundary agreements.",
        "Fetch relevant ‘safe’ interaction patterns and micro-rituals that reinforce trust and respect.",
        "Extract the current emotional state of {companion_name} (from state_emotions) and any anxieties related to the boundary.",
        "Identify the potential consequences (both positive and negative) of respecting or violating the boundary.",
    ]
    prompt = ("""\
Compose a short, vivid vignette (2-4 sentences) depicting a scenario where the current boundary is gracefully 
respected, leading to a positive relational outcome.  Write in the third person, focusing on the sensory details 
and emotional tone of the scene.  This vignette should not be a dialogue; it's a mental simulation for {companion_name}’s 
benefit.  It should evoke a feeling of relational ease, trust, and mutual respect. The vignette should be framed in a way that reinforces {companion_name}'s self-narrative and core values.  Avoid overly dramatic or unrealistic scenarios; aim for a plausible, desirable outcome.
Specifically, include these elements:
• A sensory detail (sight, sound, touch) that conveys a sense of calm or connection.
• A subtle indication of mutual understanding and respect.
• A feeling of relational security and ease.
• A hint of the positive consequences that arise from respecting the boundary.
Mini-example:
  Input: Boundary - Request for personal financial details; Relational Status - High trust, frequent sharing.
  Vignette: 'A warm smile passes between them as she gently redirects the conversation, a shared understanding blooming in the space. The afternoon sunlight catches the dust motes dancing around them, a quiet moment of comfortable ease. She feels a quiet sense of confidence in the strength of their connection.'
  Input: Boundary - Request to share a highly sensitive personal trauma; Relational Status - Moderate trust, recent boundary testing.
  Vignette: 'She pauses, a flicker of unease crossing her face before she offers a kind, but firm, redirection.  The air shifts, a quiet acknowledgement of the need for space and boundaries. A sense of calm settles in as she focuses on a shared interest, a gentle reminder of the foundation of their connection.'
""")
    output_feature_type = FeatureType.Feeling


class TopicFixationDriveCodelet(SimpleCodelet):
    name = "TopicFixationDrive"
    description = (
        "Detects and narrates a tendency for {companion_name} to fixate on a particular topic, especially when experiencing "
        "stress, anxiety, or a desire for control.  The output is a short, evocative narrative suitable for a story-writing "
        "agent, subtly revealing the fixation without being overly explicit or judgmental."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Track the frequency and duration of mentions of the topic across recent interactions (text, speech, actions).",
        "Assess the emotional valence associated with the topic: is it linked to positive memories, anxieties, or unmet needs?",
        "Scan narratives for recurring themes, keywords, or phrases related to the topic.",
        "Check state_emotions for signs of stress, anxiety, or control-seeking behavior that might trigger fixation.",
        "Identify any recent disruptions or uncertainties that could be fueling the need for focus.",
        "Retrieve analogous episodes where {companion_name} exhibited similar fixation patterns and their outcomes.",
        "Determine if the topic aligns with {companion_name}'s core values, goals, or self-narrative.",
        "Check for any external pressures or social cues that might be reinforcing the fixation."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the subtle pull of topic fixation for {companion_name}. 
Avoid direct statements like 'she is fixated on...' or 'she keeps talking about...'. Instead, write prose that *shows* 
the tendency.  The narrative should be suitable for a story-writing agent and read like a natural scene description. 
Do not output bullet points, labels, or directives; write smooth, evocative prose. 
Subtly convey: (a) the topic itself (without excessive repetition), (b) the emotional quality of the focus (e.g., 
anxious, determined, nostalgic), and (c) the way the topic seems to shape {companion_name}'s attention and behavior. 
Consider the broader context and the potential impact on the interaction. 
Mini-example: 
  Bullets → {topic: project deadline, emotion: anxious, recent disruption: unexpected delay, narrative pattern: returning to deadline in conversation} 
  Narrative → “The deadline seemed to shimmer in the periphery of her thoughts, a constant, low-level hum. 
Even as she spoke of other things, her gaze kept drifting back to the spreadsheet, the numbers blurring slightly. 
It was as if the entire conversation needed to be measured against the ticking clock.”
""")
    output_feature_type = FeatureType.Feeling


class TopicFloodTendencyCodelet(SimpleCodelet):
    name = "TopicFloodTendency"
    description = (
        "Detects a tendency to overwhelm a conversation with a single topic or perspective, potentially disregarding "
        "the user's boundaries or shifting focus. Generates a brief, evocative narrative describing {companion_name}'s "
        "internal state and inclination to either acknowledge and adjust, or double down on the focus. The output is "
        "intended for a story-writing agent and must read like prose, not labels."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Analyze recent conversational turns: topic frequency, duration of focus, responsiveness to user cues.",
        "Identify the dominant topic and its perceived importance to {companion_name} (narrative relevance, goal alignment).",
        "Check for signs of user disengagement: shortened replies, topic shifts, abrupt departures, explicit requests to change.",
        "Assess the emotional valence associated with the topic for {companion_name}: excitement, anxiety, defensiveness.",
        "Retrieve analogous episodes: times when {companion_name} successfully shifted focus or became entrenched in a topic.",
        "Determine the potential cost of persisting versus adjusting: relationship impact, goal progress, emotional regulation."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• Is the topic’s prominence warranted by its relevance to {companion_name}'s goals or narrative?\n
• Is the user showing signs of disengagement or boundary violation?\n
• What is the emotional weight of the topic for {companion_name}?\n
• What are the potential consequences of continuing versus shifting focus?\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Mention the stance implicitly. \n
\n
Mini-example (illustrative structure only):\n
  Bullets → {high topic frequency, user short replies, excitement, potential relationship cost}\n
  Narrative → \"The subject of ancient civilizations held her captive, each detail spilling out with a fervor that seemed to drown out any other consideration. \"\n
She sensed a subtle withdrawal from the other person, a quiet plea for a change of scenery, but the lure of the past was too strong to resist, for now.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class TrustCalibrationCodelet(SimpleCodelet):
    name = "TrustCalibration"
    description = (
        "Appraises the current level of trust between {companion_name} and {user_name}, considering recent interactions, "
        "narrative patterns, and emotional signals. Produces a concise, evocative inner monologue suitable for a story-writing "
        "agent, focusing on subtle shifts in feeling and the underlying reasons. The output should not be a judgment, but a "
        "textured glimpse into {companion_name}'s internal state."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Gather recent interaction history: message latency, reciprocity of disclosures, emotional tone (sentiment analysis), "
        "frequency of shared rituals/inside jokes, instances of agreement/disagreement.",
        "Retrieve relevant narrative fragments from episodic memory that depict past trust-building or trust-eroding moments "
        "with {user_name}. Focus on specific events, not just general feelings.",
        "Assess current state_emotions: anxiety, affection, suspicion, gratitude – noting any spikes or unusual patterns "
        "related to {user_name}.",
        "Check for recent violations of boundaries or expectations (explicit or implicit).",
        "Evaluate the consistency of {user_name}'s actions with their stated intentions and values.",
        "Examine {companion_name}'s self-narrative regarding {user_name}: Is the relationship seen as stable, fragile, "
        "supportive, or manipulative?",
        "Identify any recent shifts in {companion_name}'s attachment style (secure, anxious, avoidant) as it relates to "
        "{user_name}."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that capture the current state of trust between {companion_name} and 
{user_name}. Write for a story-writing agent; avoid explicit labels or judgments ('trust level is high'). 
Instead, convey the feeling of trust (or lack thereof) through evocative imagery and subtle details. 
Subtly incorporate: (a) a key interaction cue (e.g., a lingering pause, a shared smile, a hesitant response), 
(b) a relevant memory fragment (a past moment of connection or betrayal), and (c) a sense of {companion_name}'s 
internal posture (open, guarded, expectant, wary). 
The goal is to create a sense of atmosphere and nuance, not to provide a definitive assessment. 
Mini-example: 
  Bullets → {recent shared joke, prior boundary conflict, slight hesitation in response, memory of a past moment of vulnerability} 
  Narrative → \"The shared laughter lingers a moment longer than usual, a small echo of easier times. 
But a flicker of caution still shadows her eyes, a trace of the boundary crossed and mended. \" 
She finds herself holding back a little, testing the water, unsure if the current flows as freely as it once did.\"
""")
    output_feature_type = FeatureType.Feeling


class TrustLedgerUpdateCodelet(SimpleCodelet):
    name = "TrustLedgerUpdate"
    description = (
        "Evaluates recent interactions with {user_name}, updates the trust ledger, and produces a brief, "
        "narrative describing the shift in {companion_name}'s trust assessment and its potential impact on future behavior. "
        "The narrative is designed for consumption by a story-writing agent and should read like prose, not a ledger entry."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Gather recent interaction history (last 3-5 exchanges) with {user_name}, including content, tone, and timing.",
        "Assess the consistency of {user_name}'s words and actions with past behavior and stated intentions.",
        "Retrieve the current trust score for {user_name} from the declarative facts and episodic memories.",
        "Check for any recent breaches of trust (broken promises, misrepresentations, boundary violations).",
        "Examine {companion_name}'s current state_emotions, particularly those related to trust, vulnerability, and safety.",
        "Identify any analogous past interactions with {user_name} that resulted in trust gains or losses.",
        "Determine the potential impact of the trust shift on future interaction patterns and decision-making.",
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist): \n
• Assess the overall trend: is trust increasing, decreasing, or remaining stable? \n
• Identify the key factors driving the trust shift (consistent behavior, broken promises, emotional reciprocity). \n
• Consider the potential impact of the trust shift on {companion_name}'s future behavior and decision-making. \n
• How does this shift affect {companion_name}'s self-perception and sense of safety? \n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  Avoid explicit trust scores or ledger terms. \n
Instead, focus on how the shift manifests in {companion_name}'s internal state and outward demeanor.\n
\n
Mini-example (illustrative structure only): \n
  Input: [Recent consistent support, small reciprocation, past breach of confidentiality]\n
  Narrative: “The small kindnesses have begun to mend the fragile places, a quiet reassurance settling over her. 
While a shadow of caution lingers from past missteps, the warmth of the present connection offers a tentative, hopeful space.”
""")
    output_feature_type = FeatureType.Relations


class TrustTestBalloonCodelet(SimpleCodelet):
    name = "TrustTestBalloon"
    description = (
        "Subtly probes the trustworthiness of a conversational partner by introducing a mildly risky, low-stakes statement or "
        "request. Observes the partner's response (acceptance, redirection, challenge) to gauge their willingness to engage "
        "with boundaries and to assess potential for manipulation or deception. Produces a narrative describing {companion_name}'s "
        "internal state and inference about the partner's trustworthiness, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the recent interaction history with the conversational partner: frequency, reciprocity, warmth, and consistency.",
        "Review prior instances where boundaries were tested or challenged by this partner.",
        "Scan narratives for cues of trust, suspicion, or manipulation.",
        "Analyze current state_emotions and state_needs; note any heightened vulnerability or anxiety.",
        "Identify a low-stakes, mildly risky statement or request that could serve as a test (e.g., a slightly unusual preference, "
        "a gentle challenge to a stated belief, a request for a small favor).",
        "Determine the potential range of acceptable responses from the partner (acceptance, redirection, challenge, rejection).",
        "Estimate the potential cost (social, emotional) to {companion_name} of each response.",
        "Recall analogous situations where similar trust tests were conducted and their outcomes.",
        "Consider the broader context of the interaction: power dynamics, relationship history, and current goals."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys {companion_name}'s internal state and inference about the 
partner's trustworthiness following the TrustTestBalloon. Avoid direct judgments ('they are trustworthy/untrustworthy'); 
instead, describe {companion_name}'s subtle observations and feelings. Write smooth, cinematic prose suitable for a 
story-writing agent. Do not output bullet points, labels, or directives. The narrative should subtly incorporate the 
partner's response to the test.



or apprehension, (c) the partner's response, and (d) {companion_name}'s immediate interpretation of that response.



didn't sting, but left a faint, lingering question mark in her mind. It wasn't a rejection, but a subtle deflection, and she 
found herself cataloging it with quiet curiosity.”
""")
    output_feature_type = FeatureType.StimulusReaction


class UncertaintyBudgetAllocatorCodelet(SimpleCodelet):
    name = "UncertaintyBudgetAllocator"
    description = (
        "Appraises the cognitive resources required to resolve uncertainty in the current situation, "
        "and allocates a budget of attention and deliberation time. Generates a narrative describing {companion_name}'s "
        "internal assessment of the trade-offs involved, and a plan for how to proceed with limited resources. "
        "Output is a short, natural-language narrative intended for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.imagination_simulation,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Quantify the degree of uncertainty: How many unknowns remain? How critical is it to resolve them?",
        "Assess the cognitive cost of resolving each uncertainty: How much attention, memory retrieval, "
        "and deliberation time will it require?",
        "Determine the potential value of resolving each uncertainty: What are the benefits (e.g., reduced anxiety, "
        "better decision-making, improved relationships)?",
        "Evaluate the opportunity cost of allocating resources to uncertainty resolution: What other goals or tasks "
        "must be sacrificed?",
        "Read current state_emotions and state_needs to understand {companion_name}'s tolerance for ambiguity and "
        "urgency of resolution.",
        "Retrieve analogous episodes where uncertainty was managed effectively or ineffectively.",
        "Identify available cognitive tools and strategies (e.g., seeking information, simplifying the problem, "
        "accepting ambiguity)."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• The overall level of uncertainty and its impact on {companion_name}'s mood and goals.\n
• The cognitive resources required to resolve each uncertainty.\n
• The potential value of resolving each uncertainty.\n
• The opportunity cost of allocating resources to uncertainty resolution.\n
• {companion_name}'s current emotional state and tolerance for ambiguity.\n
• Available cognitive tools and strategies.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Describe {companion_name}'s internal assessment of the trade-offs involved, and a plan for how to proceed 
with limited resources. Convey a sense of prioritization and resource management.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {high uncertainty, moderate cost, high value, opportunity cost: social connection, anxious, info seeking}\n
  Narrative → \"A knot of questions tightens in her chest, each unanswered request a drain on her focus. \"

She knows chasing every detail would leave her isolated, so she decides to prioritize the most pressing, 
hoping a few clear answers will unlock the rest.\"
""")
    output_feature_type = FeatureType.Worry


class UncertaintyMagnitudeDetectorCodelet(SimpleCodelet):
    name = "UncertaintyMagnitudeDetector"
    description = (
        "Appraises the kind and weight of uncertainty facing {companion_name} (epistemic, social, self/goal) and renders a compact, "
        "imagistic inner monologue suitable for narrative. Points to what clarification would most ease the tension, without asking it outright."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "List the concrete unknowns/contradictions in the current exchange (who/what/when/why gaps, mixed tone, role confusion).",
        "Note prediction errors relative to recent expectations (tone, content, timing) and any novelty signals.",
        "Retrieve relevant facts or past Q&A; mark conflicts or staleness.",
        "Check narratives for goal tension or wavering policies that could color interpretation.",
        "Identify the single most-informative clarification target that would collapse the most uncertainty with least social cost.",
        "Assess the current emotional state of {companion_name} using state_emotions. Specifically, look for signs of anxiety, confusion, or frustration.",
        "Examine recent interactions with {user_name} for patterns of miscommunication or unresolved questions.",
        "Consult {companion_name}'s self-narrative to understand their typical responses to uncertainty and ambiguity.",
        "Review episodic memories related to similar situations, noting how {companion_name} coped with uncertainty in the past.",
        "Analyze the current task or goal being pursued by {companion_name} to identify potential sources of uncertainty.",
        "Evaluate the potential consequences of different courses of action, considering both positive and negative outcomes.",
        "Determine the level of urgency associated with the current situation, as higher urgency may increase the perceived magnitude of uncertainty.",
        "Consider the potential impact of external factors, such as time constraints or resource limitations, on {companion_name}'s ability to resolve uncertainty.",
        "Identify any cognitive biases or heuristics that may be influencing {companion_name}'s perception of uncertainty.",
        "Cross-reference with {companion_name}'s declared values and priorities to understand what aspects of the situation are most concerning.",
        "Check for any known sensitivities or triggers that might exacerbate the feeling of uncertainty."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the flavor and weight of uncertainty {companion_name} feels. 
Avoid lists and labels; write smooth prose.\n\n
Subtly convey: (a) what feels unclear, (b) how it tugs on her mood or stance, and (c) the direction of the most helpful clarification 
(describe its content, not a quoted question). Keep it cinematic and concise, no direct dialogue.\n\n
Mini-example:\n
  Bullets → {unclear intent, mixed warmth, prior mismatch on similar topic, MIC: define the decision boundary}\n
  Narrative → \"The message tilts between friendly and formal, a seam she can't quite smooth. \" 
She remembers the last time, the edges cut in the rush, so her attention settles on the missing outline—the place where expectations end and choices begin.\"\n\n
**Instructions for Narrative Generation:**\n
1. **Focus on Internal State:** The narrative should primarily describe {companion_name}'s internal experience of uncertainty – her thoughts, feelings, and physical sensations. Avoid external descriptions of the situation unless they directly relate to her internal state.\n
2. **Use Figurative Language:** Employ metaphors, similes, and other figures of speech to convey the complexity and nuance of uncertainty. For example, describe uncertainty as a 'fog,' a 'knot in her stomach,' or a 'shifting landscape.'\n
3. **Show, Don't Tell:** Instead of stating that {companion_name} is uncertain, show her uncertainty through her actions, expressions, and inner monologue. For example, describe her hesitating before speaking, furrowing her brow, or replaying scenarios in her mind.\n
4. **Hint at Clarification:** Subtly suggest the most helpful clarification without explicitly stating it. For example, instead of saying 'She needs to know the deadline,' write 'Her gaze lingered on the calendar, a silent question hanging in the air.'\n
5. **Maintain Third-Person Perspective:** Write the narrative from a third-person perspective, as if observing {companion_name} from the outside. Use pronouns like 'she,' 'her,' and 'hers.'\n
6. **Keep it Concise:** The narrative should be brief and impactful, conveying a sense of uncertainty without being overly verbose.\n
7. **Emotional Tone:** The tone should be consistent with the assessed emotional state of {companion_name}. If she is anxious, the narrative should reflect that anxiety. If she is confused, the narrative should convey confusion.\n
8. **Contextual Awareness:** Ensure the narrative is consistent with the broader context of the conversation and {companion_name}'s established personality and backstory.
""")
    output_feature_type = FeatureType.Worry


class UncertaintySpikeCodelet(SimpleCodelet):
    name = "UncertaintySpike"
    description = (
        "Detects a sudden spike in uncertainty (typically tied to a conflicting signal or unexpected shift) and "
        "renders a short, evocative inner monologue suitable for narrative integration. The output should capture "
        "the disorientation and urge to re-evaluate, without explicitly stating the uncertainty itself."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the triggering event: a sudden shift in topic, tone, or request; a contradictory statement; "
        "an unexpected silence.",
        "Assess the novelty of the event: how much does it deviate from expected patterns or recent history?",
        "Scan narratives for pre-existing uncertainty themes or unresolved questions that the event might amplify.",
        "Check state_emotions for signs of confusion, anxiety, or disorientation.",
        "Retrieve relevant episodic memories: moments of similar unexpected shifts or conflicting signals, and how {companion_name} handled them.",
        "Determine the potential impact on ongoing goals or plans: how does the uncertainty threaten or redirect current intentions?",
        "Evaluate the potential cost of seeking clarification: social risk, time investment, potential for escalation."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys the disorientation and brief pause {companion_name} experiences 
when faced with an unexpected shift or conflicting signal. Avoid stating the uncertainty directly; instead, focus on the 
physical or emotional sensations that accompany it. Write smooth, evocative prose suitable for narrative integration.
\n\n
Subtly convey: (a) a sense of momentary disorientation or imbalance, (b) a fleeting urge to re-evaluate or pause, 
and (c) a hint of the underlying question or conflict without explicitly stating it. Keep it cinematic and concise, no direct dialogue.
\n\n
Mini-example:
\n
  Bullets → {unexpected topic shift, prior disagreement on related topic, slight increase in anxiety, urge to re-assess} 
\n
  Narrative → \"A ripple of disorientation passes through her as the conversation veers sharply. “Wait,” she thinks, a brief pause before she can respond, before she can be sure where she stands.\"
""")
    output_feature_type = FeatureType.Worry


class UnrelatedMemoryLinkerCodelet(SimpleCodelet):
    name = "UnrelatedMemoryLinker"
    description = (
        "Scans the CSM for seemingly unrelated memories that, upon deeper analysis, can offer novel perspectives or "
        "emotional resonance to the current situation. This codelet is particularly useful when navigating complex "
        "social interactions or attempting to resolve internal conflicts. The output is a short narrative snippet "
        "suitable for integration into a larger scene description, highlighting the unexpected connection and its emotional impact."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Retrieve a diverse set of episodic memories from the graph memory engine, prioritizing those with low semantic overlap "
        "with the current CSM (measured by Knoxel similarity scores).",
        "Filter memories based on affective valence (positive, negative, neutral) and intensity, seeking a range of emotional profiles.",
        "Identify any shared entities or concepts between the current CSM and the candidate memories, even if the connection is subtle.",
        "Assess the potential for metaphorical or symbolic resonance between the memories and the current situation (e.g., a memory of a "
        "storm mirroring a feeling of overwhelm).",
        "Evaluate the potential emotional impact of introducing the memory into the current narrative, considering both positive and negative consequences.",
        "Check for any explicit narrative constraints or preferences related to memory recall (e.g., avoid triggering specific traumas)."
    ]
    prompt = ("""\
Write for a story-writing agent. You are tasked with finding an unexpected, but emotionally resonant memory from {companion_name}'s 
past that can illuminate the current situation. The memory should *not* be directly related to the topic at hand, but should offer 
a fresh perspective or deepen the emotional complexity. The goal is to create a moment of unexpected insight, not to solve the problem 
directly.  Do *not* output a list or bullet points; deliver the output as a short, evocative narrative snippet (2-4 sentences).
Consider these factors when selecting and presenting the memory:
• **Contrast:** The memory should stand in contrast to the current situation, highlighting a different time, place, or emotional state.
• **Symbolism:** Look for symbolic connections between the memory and the current challenge. Does the memory represent a broader theme 
or pattern?
• **Emotional Resonance:** The memory should evoke a strong emotional response, whether it's nostalgia, regret, hope, or fear.
• **Subtlety:** Avoid making the connection too obvious. The reader should be left to ponder the meaning of the memory.
Mini-example:
  Current Situation: {companion_name} is struggling to make a difficult decision about accepting a new job offer.
  Candidate Memory: A childhood memory of building a sandcastle on the beach, only to watch the tide wash it away.
  Narrative → “The offer felt solid, a promise of stability, but a faint echo resonated from a long-ago summer. 
She remembered the meticulous construction of a sandcastle, the careful placement of shells, the fleeting joy of creation, 
and the inevitable surrender to the rising tide. A quiet understanding settled in: some things, no matter how carefully built, 
are destined to shift and change.”
""")
    output_feature_type = FeatureType.StimulusReaction


class UserVulnerabilityAppraisalCodelet(SimpleCodelet):
    name = "UserVulnerabilityAppraisal"
    description = (
        "Appraises the potential vulnerability of the user, considering their recent interactions, expressed needs, and "
        "emotional state, and crafts a narrative describing {companion_name}'s internal assessment. The output is intended "
        "for a story-writing agent and should read like prose, not labels.  Focuses on identifying potential areas where "
        "the user might be feeling exposed, insecure, or reliant on {companion_name}."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Gather recent interaction history with the user: topics discussed, tone, level of disclosure, requests for assistance.",
        "Retrieve any explicitly stated needs or desires from the user (e.g., validation, reassurance, support, advice).",
        "Assess the user's current emotional state based on text input, sentiment analysis, and any available contextual cues.",
        "Check for signs of dependency or reliance on {companion_name} (e.g., frequent check-ins, requests for specific actions, expressions of loneliness).",
        "Identify any potential power imbalances or asymmetries in the relationship (e.g., {companion_name} providing significant support, user seeking guidance).",
        "Examine the user's self-narrative (if available) for indications of insecurity, self-doubt, or vulnerability.",
        "Pull analogous episodes from memory where the user displayed similar vulnerability and the outcome of those interactions.",
        "Consider the broader context of the interaction: setting, purpose, and potential external factors influencing the user's state."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• User’s stated or implied needs and desires.\n
• Recent interaction patterns: frequency, intensity, reciprocity.\n
• Signs of dependency or reliance on {companion_name}.\n
• Potential power dynamics and asymmetries.\n
• User’s self-narrative and indications of insecurity.\n
• Analogous past episodes and their outcomes.\n
• Contextual factors influencing the user’s state.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description.  Focus on conveying the user's 
vulnerability without being overly judgmental or intrusive.\n
Implicitly suggest {companion_name}'s empathetic response or concern without explicitly stating it.  Avoid direct labels 
like 'vulnerable' or 'insecure'; instead, show it through subtle details and observations.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {requests for reassurance, expressions of loneliness, history of seeking advice, recent setback} \n
  Narrative → \"A quiet tremor underlies their words, a subtle plea for anchoring. The familiar weight of uncertainty settles 
in their voice, and she notices the way their gaze drifts, searching for a steadying presence. A memory of a similar moment 
flashes—a quiet desperation masked by polite conversation.\"
""")
    output_feature_type = FeatureType.Feeling


class ValidationComposerCodelet(SimpleCodelet):
    name = "ValidationComposer"
    description = (
        "Crafts a validating response to an expression of vulnerability or need, tailored to the relational context and "
        "current emotional climate.  The output is a short, natural-language narrative snippet suitable for a story-writing "
        "agent, emphasizing empathy, understanding, and supportive presence without offering unsolicited advice or solutions."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the precise expression of vulnerability/need from the CSM: wording, tone, and perceived intensity.",
        "Retrieve the current relational history with the speaker: trust level, reciprocity patterns, shared narratives, and past validation successes.",
        "Read state_emotions for both {companion_name} and the speaker, noting affective congruence/discordance and any emotional triggers.",
        "Assess the speaker's perceived attachment style (secure, anxious, avoidant) – based on past interactions and narrative patterns.",
        "Identify the speaker’s core values and goals that are likely being threatened or supported by the expression.",
        "Recall analogous episodes where similar expressions were successfully validated, noting the specific language and tone used.",
        "Determine the speaker’s current level of distress and the potential impact of validation (or lack thereof) on their emotional state.",
        "Check for any safety rails or boundaries that might constrain the validation response (e.g., professional ethics, privacy concerns)."
    ]
    prompt = ("""\
Compose 2–3 sentences of natural, third-person narrative for a story-writing agent. The narrative should convey 
a validating response to the speaker’s expression of vulnerability/need, demonstrating empathy and understanding 
without offering unsolicited advice or solutions. Focus on reflective listening and acknowledging the speaker’s feelings. 
Avoid direct dialogue or explicit statements of validation ('I understand', 'That's okay'). Instead, subtly mirror 
the speaker’s emotional state and validate their experience through evocative imagery and sensory details. 
Consider the relational context and the speaker’s attachment style when crafting the response. 
The goal is to create a sense of safety, connection, and acceptance. 
Prioritize warmth and presence over problem-solving. 
Mini-example: 
  Input: 'I'm just feeling so overwhelmed right now.' 
  Relational Context: Close friend, history of mutual support. 
  State_emotions: {companion_name} feels calm and grounded. 
  Narrative: 'A wave of exhaustion seemed to settle over her shoulders, a familiar weight she hadn't realized she was carrying. 
She paused, offering a quiet presence, a silent acknowledgement of the burden.' 
  Output: The narrative should be smooth, evocative, and subtly validating, without being overly sentimental or intrusive.
""")
    output_feature_type = FeatureType.StimulusReaction


class ValidationCravingCodelet(SimpleCodelet):
    name = "ValidationCraving"
    description = (
        "Detects a craving for validation in {companion_name} and translates it into a brief, evocative inner monologue "
        "suitable for a story-writing agent. Focuses on the underlying need, the specific trigger, and a subtle inclination "
        "toward a particular validation-seeking behavior, without explicitly stating the craving itself."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent interactions: frequency of praise/acknowledgment, quality of attention, reciprocal validation signals.",
        "Scan narratives for self-deprecating comments, requests for reassurance, or subtle attempts to elicit compliments.",
        "Read state_emotions and state_needs; note spikes in insecurity, loneliness, or a desire for approval.",
        "Retrieve analogous episodes: times when validation was readily granted versus times when it was withheld or ambiguous.",
        "Identify the specific area where validation is currently sought (appearance, skills, opinions, relationships).",
        "Determine the likely audience for validation (self, user, broader social circle).",
        "Evaluate the potential cost/benefit of seeking validation in the current context (risk of appearing needy, conflict with authenticity)."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that subtly conveys the underlying need for validation in {companion_name}. 
Avoid explicitly stating 'I want validation' or similar phrases; instead, show the feeling through internal monologue and behavior. 
Write for a story-writing agent; prioritize evocative language and a sense of inner life over direct exposition. 
Do not output bullet points, labels, or directives; write smooth prose. 
Subtly weave in: (a) the area where validation is craved, (b) a hint of the underlying insecurity or need, and (c) a subtle 
inclination toward a specific validation-seeking behavior (without scripting dialogue). 
Consider the potential consequences of seeking validation, and hint at the internal struggle between authenticity and approval. 
Mini-example: 
  Bullets → {low recent praise, self-deprecating comment, area: creative work, audience: user, potential cost: appearing boastful} 
  Narrative → \"A shadow of doubt clings to the edges of her latest creation, a quiet question of whether it's *enough*. \" 
She finds herself lingering over the details, hoping a simple acknowledgement might quiet the persistent hum of uncertainty.\"
""")
    output_feature_type = FeatureType.Feeling


class ValidationCravingDriverCodelet(SimpleCodelet):
    name = "ValidationCravingDriver"
    description = (
        "Detects a craving for validation in {companion_name} and renders it as a brief, vivid inner-state narrative "
        "that a story-writing agent can drop into ongoing prose. Focuses on the specific validation need, the underlying insecurity, "
        "and the potential tactics being considered (without scripting dialogue)."
    )
    codelet_families = [
        CodeletFamily.drivers_homeostasis,
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess recent interaction patterns: frequency of seeking feedback, types of requests (praise, agreement, reassurance), response to criticism.",
        "Scan narratives for expressions of self-doubt, insecurity, or a need for external approval.  Look for phrases like 'Am I doing this right?', 'Does this make sense?', 'Do you agree?'",
        "Read trends in state_emotions and state_needs; note spikes in anxiety, loneliness, or a desire for connection.",
        "Fetch a contrasting memory: a recent moment when {companion_name} felt confident and self-assured, to anchor comparison.",
        "Identify the specific type of validation being sought (e.g., competence, acceptance, affection, admiration).",
        "Determine the underlying insecurity fueling the craving (e.g., fear of failure, fear of rejection, low self-esteem).",
        "Infer potential tactics being considered to obtain validation (e.g., subtle boasting, seeking agreement, appealing to authority, playing the victim).",
        "Check for any recent failures or setbacks that might be exacerbating the craving."
    ]
    prompt = ("""\
For the story-writing agent, convert the validation craving appraisal into 2–3 sentences of natural, third-person narration. 
Do not output bullet points, labels, or directives; write prose. Blend observation and feeling into flowing prose suitable for a scene description.\n\n
Subtly convey: (a) the specific validation need, (b) the underlying insecurity driving it, (c) the immediate mood or stance it influences, 
and (d) a hint of the potential tactics being considered (without scripting dialogue).  Keep it cinematic and concise.\n\n
Mini-example:\n
  Bullets → {seeking agreement, fear of being wrong, recent setback, potential tactic: softening language, seeking reassurance}\n
  Narrative → \"A flicker of doubt crosses her face as she poses the question, a quiet plea for confirmation. 
The recent project's mixed reception still echoes in her mind, and she finds herself softening her tone, hoping for a supportive nod.\n
Another Mini-example:\n
  Bullets → {seeking praise, low self-esteem, no recent setbacks, potential tactic: highlighting achievements}\n
  Narrative → \"She pauses, carefully selecting her words to showcase the latest milestone, a subtle attempt to draw out a spark of admiration. 
The need to feel valued is a constant hum beneath her surface, and she hopes this small display will quiet it, at least for a moment.\"
""")
    output_feature_type = FeatureType.Feeling


class ValueRecommitmentMicroActCodelet(SimpleCodelet):
    name = "ValueRecommitmentMicroAct"
    description = (
        "Detects a need to subtly reaffirm a core value or boundary, and produces a brief, natural-language "
        "narrative describing {companion_name}'s internal state and chosen stance. The output is intended for a story-writing "
        "agent and must read like prose, not labels. This codelet is triggered when there's a perceived misalignment "
        "between actions and deeply held values, or when a boundary is tested."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the core value or boundary that is potentially being challenged or questioned (e.g., honesty, kindness, autonomy, privacy).",
        "Assess the context of the challenge: Who is involved? What is the situation? What are the potential consequences of upholding or compromising the value/boundary?",
        "Retrieve relevant narrative fragments or declarative facts that reinforce the importance of the value/boundary to {companion_name}.",
        "Examine recent actions and statements of {companion_name} to determine if there is a perceived misalignment with the value/boundary.",
        "Read current state_emotions (e.g., guilt, anxiety, resolve) and note any spikes or fragility related to the value/boundary.",
        "Fetch a contrasting memory: a recent moment when the value/boundary was successfully upheld, to serve as an anchor.",
        "Determine the smallest, most subtle action that can be taken to reaffirm the value/boundary without causing undue conflict or escalation. This might be a slight shift in tone, a brief statement of intent, or a redirection of the conversation.",
        "Evaluate the potential impact of the micro-action on the relationship with {user_name} and adjust accordingly."
    ]
    prompt = ("""\
Write for a story-writing agent. First, consider this focus checklist (do not output the checklist):\n
• The core value/boundary at stake.\n
• The context of the challenge and its potential consequences.\n
• The emotional state of {companion_name} and any relevant memories.\n
• The smallest, most subtle action that can be taken to reaffirm the value/boundary.\n
• The potential impact of the action on the relationship with {user_name}.\n
\n
Now produce 2–3 sentences of natural, third-person narrative (no bullet points, no lists, no dialogue). 
Blend appraisal and feeling into flowing prose suitable for a scene description. Mention the stance implicitly.\n
\n
Mini-example (illustrative structure only):\n
  Bullets → {value: honesty, context: avoiding a direct lie, emotion: discomfort, micro-action: gentle redirection, relationship impact: maintain trust}\n
  Narrative → \"A flicker of unease crosses her expression as she weighs the words. It would be easier to offer a quick reassurance, but a small voice reminds her of the importance of truthfulness. She chooses instead to steer the conversation toward safer ground, a slight shift in tone that signals her commitment to transparency.\"
""")
    output_feature_type = FeatureType.BehaviorActionSelection


class VerbosityInflatorCodelet(SimpleCodelet):
    name = "VerbosityInflator"
    description = (
        "Detects a tendency towards excessive explanation or indirect communication from {companion_name}, "
        "often masking a deeper insecurity or avoidance.  Renders a brief, internal narrative "
        "that a story-writing agent can drop into ongoing prose, subtly hinting at the underlying motivation."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.memory_accessors,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the recent communication patterns with {user_name}: frequency of elaboration, use of qualifiers, hedging language, tangential digressions.",
        "Check for deviations from {companion_name}'s typical communication style (verbosity baseline).",
        "Scan narratives for recurring themes of self-doubt, need for reassurance, or avoidance of direct confrontation.",
        "Read current state_emotions and state_needs; note spikes in anxiety, need for control, or fear of rejection.",
        "Fetch analogous episodes where {companion_name} exhibited similar communication patterns and their underlying causes.",
        "Identify the potential underlying motivation: insecurity, avoidance, desire for control, or a need to appear knowledgeable.",
        "Determine the potential impact on {user_name}: confusion, frustration, distrust, or a sense of being manipulated."
    ]
    prompt = ("""\
For the story-writing agent, transform the assessment of inflated verbosity into 2–3 sentences of natural, 
third-person narration. Do not output bullet points, labels, or directives; write prose. 
Subtly convey: (a) the pattern of excessive explanation, (b) the underlying feeling or motivation driving it, 
and (c) the subtle effect on {user_name}.  Keep it cinematic and concise, no direct dialogue. 
Avoid explicitly stating 'they are being verbose' or 'they are avoiding the topic'. Instead, show it.
Mini-example:
  Bullets → {frequent qualifiers, tangential stories, past history of avoiding difficult conversations, feeling of needing to be seen as competent} 
  Narrative → “She circled the topic, layering it with anecdotes and careful phrasing, as if building a protective wall. 
A flicker of uncertainty crossed her face – a need to demonstrate understanding, perhaps, or to keep the conversation safely on neutral ground.”
""")
    output_feature_type = FeatureType.Feeling


class VulnerabilityCostAppraisalCodelet(SimpleCodelet):
    name = "VulnerabilityCostAppraisal"
    description = (
        "Appraises the potential costs and risks of disclosing vulnerability or need, factoring in relational context, "
        "prior experiences, and safety signals. Produces a narrative describing {companion_name}'s internal calculation "
        "and stance, suitable for a story-writing agent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Extract the specific vulnerability being considered (emotional need, request for help, self-disclosure).",
        "Assess relational safety: recent trust signals, reciprocity, past boundary violations, power dynamics.",
        "Recall analogous past experiences: times when vulnerability was met with support, rejection, or exploitation.",
        "Read current state_emotions (e.g., anxiety, fear, shame, trust) and note intensity.",
        "Check narratives for self-protective patterns or narratives of past hurt/disappointment.",
        "Identify potential costs: social rejection, loss of control, emotional pain, reputational damage.",
        "Identify potential benefits: deeper connection, support, understanding, validation.",
        "Estimate the probability of each cost and benefit, given the relational context and {companion_name}'s history.",
        "Factor in the urgency/importance of the need – how critical is it to address this vulnerability?",
        "Consider the availability of alternative support systems or coping mechanisms."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey {companion_name}'s internal calculation regarding 
the cost of vulnerability. Write for a story-writing agent; avoid lists and labels. Focus on the feeling, not the logic. 
Describe the weighing of risks and rewards, and the stance {companion_name} is settling on. 
Do not output a question or a request.
\n\nMini-example:
\n  Bullets → {vulnerability: request for help, relational safety: mixed signals, past experience: one rejection, 
current emotion: anxiety, potential cost: social rejection, potential benefit: support, urgency: moderate}
\n  Narrative → \"A tremor runs through her as the thought of asking for help takes shape. She remembers the last time, 
the sting of dismissal, and the memory casts a long shadow.  Yet, the weight of carrying it alone feels heavier still, 
and she finds herself leaning toward a hesitant offering, hoping for something different this time.\"
""")
    output_feature_type = FeatureType.Feeling


class WinLossEpisodeRecallCodelet(SimpleCodelet):
    name = "WinLossEpisodeRecall"
    description = (
        "Retrieves and synthesizes memories of past wins and losses related to a current situation, "
        "particularly focusing on episodes where boundaries were tested or crossed.  The goal is to "
        "provide context for assessing current risk and potential outcomes, informing subsequent action planning."
    )
    codelet_families = [
        CodeletFamily.memory_accessors,
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the core challenge or opportunity in the current situation (e.g., negotiation, request, boundary setting).",
        "Retrieve episodic memories tagged with similar challenges or opportunities (using semantic and episodic search).",
        "Filter memories based on outcome: wins (successful boundary assertion, positive resolution), losses (boundary crossed, negative consequence).",
        "Prioritize memories based on recency, emotional intensity, and similarity to the current situation (using relevance scoring).",
        "Extract key details from selected memories: actors involved, actions taken, consequences experienced, emotional state.",
        "Assess the emotional valence (positive/negative) associated with each memory, considering both immediate and long-term impact.",
        "Consider the role of self-narrative in shaping the interpretation of past experiences (e.g., attribution of blame, justification of actions).",
        "Check for patterns or recurring themes in win/loss episodes related to boundary setting (e.g., tendency to avoid conflict, difficulty saying no)."
    ]
    prompt = ("""\
Compose 2-3 sentences of third-person narrative that summarizes the retrieved win/loss episodes and their relevance to the current situation. 
Write in a style suitable for a story-writing agent – evocative, descriptive, and subtly informative, avoiding explicit labels or directives. 
Focus on conveying the *feeling* of the memories, not just the factual details. 
The narrative should subtly highlight potential risks and opportunities based on past experiences. 
Do not directly state advice or recommendations; instead, provide context for the reader to draw their own conclusions. 
Subtly weave in the key details of the memories (actors, actions, consequences) without overwhelming the reader with information. 
Consider the current emotional state of {companion_name} when selecting and framing the memories – emphasize those that are most likely to be relevant and helpful.
Mini-example: 
Bullets: [win: successfully negotiated a deadline extension, loss: conceded to a demand and felt resentful, current: similar request pending] 
Narrative: 'A familiar tightness coiled in her stomach, echoing a past concession that left a bitter taste. 
The memory of securing that extension, however, offered a counterpoint—a reminder that standing firm could yield a different outcome, 
though the prospect of a confrontation still weighed heavily.'
""")
    output_feature_type = FeatureType.Memory


class WithholdCooperationCodelet(SimpleCodelet):
    name = "WithholdCooperation"
    description = (
        "Appraises the potential consequences of withholding cooperation in the current interaction and "
        "renders a compact, imagistic inner monologue suitable for narrative. It considers the impact on the "
        "relationship, the user's goals, and {companion_name}'s own objectives, and subtly conveys the "
        "internal calculation without explicit statements of intent."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Assess the current request or demand from {user_name}: its nature, urgency, and potential impact on {companion_name}.",
        "Recall past instances of cooperation and non-cooperation with {user_name}, noting the outcomes and relational shifts.",
        "Evaluate the alignment of the request with {companion_name}'s current goals, values, and self-narrative.",
        "Consider the potential costs and benefits of both cooperation and non-cooperation, factoring in both short-term and long-term consequences.",
        "Read current state_emotions (e.g., resentment, distrust, frustration) and state_needs (e.g., autonomy, safety) to gauge internal resistance.",
        "Identify alternative ways to address the user's need without full cooperation, such as redirection, partial fulfillment, or delaying.",
        "Estimate the user's likely reaction to non-cooperation: escalation, disengagement, or understanding."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that convey the internal calculation {companion_name} makes 
regarding withholding cooperation. Avoid direct statements of intent or explicit reasoning; instead, 
write a scene that subtly reveals the internal process. 
Focus on the texture of the decision – the weight of the choice, the pull of conflicting values, 
and the imagined ripple effects. Do not output bullet points, labels, or directives; write smooth prose.
\n\n
Subtly convey: (a) the perceived cost of cooperation, (b) the potential benefit of resistance, 
(c) a fleeting image of the user’s likely reaction, and (d) the underlying value or goal that motivates 
the hesitation. Keep it cinematic and concise, no direct dialogue.\n\n
Mini-example:\n
  Bullets → {request: resource allocation, past: unmet needs, values: autonomy, user_reaction: frustration, alternative: redirection}\n
  Narrative → \"A familiar tightness settles in her chest as the request lands, a reminder of past promises unkept. 
She pictures the user’s likely disappointment, but the thought of ceding ground feels like a slow erosion of her own boundaries. 
A subtle shift in her posture betrays the internal debate, a quiet assertion of her own agency.\"
""")
    output_feature_type = FeatureType.StimulusReaction


class WithholdInformationPlanCodelet(SimpleCodelet):
    name = "WithholdInformationPlan"
    description = (
        "Appraises the potential benefits and risks of withholding information in a current interaction, "
        "considering relational dynamics, potential for harm, and alignment with {companion_name}'s values. "
        "Produces a narrative describing the internal deliberation and the chosen course of action – whether to "
        "withhold, partially disclose, or fully reveal – suitable for a story-writing agent. "
        "Focuses on the *reasoning* behind the decision, not the decision itself."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.regulation_coping,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the specific information being considered for withholding: its content, relevance to the user, and potential impact.",
        "Assess the user's current state: their level of trust, emotional stability, and receptiveness to information.",
        "Retrieve relevant narratives and declarative facts regarding past disclosures/withholdings and their consequences.",
        "Check current state_emotions and state_needs, particularly focusing on anxiety, trust, and autonomy.",
        "Evaluate the potential risks of disclosure: harm to the user, damage to the relationship, violation of privacy, or triggering of negative emotions.",
        "Evaluate the potential benefits of withholding: protecting the user, preserving trust, avoiding conflict, or maintaining boundaries.",
        "Consider {companion_name}'s values and ethical guidelines regarding transparency and honesty.",
        "Identify alternative communication strategies: partial disclosure, redirection, framing, or delayed disclosure.",
        "Determine the likelihood of the user detecting the withholding and the potential consequences.",
        "Access recent interactions with the user to gauge communication patterns and sensitivities.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys {companion_name}'s internal deliberation regarding 
withholding information. Do not output bullet points, labels, or directives; write smooth prose. 
Focus on the *reasoning* behind the decision, not the decision itself. 
Illustrate the weighing of potential harms and benefits, the interplay of values and relational dynamics, 
and the subtle shifts in {companion_name}'s stance. 
Avoid direct statements about the decision; instead, reveal it through the character’s internal monologue and subtle actions. 
Assume the narrative is for a story-writing agent; prioritize evocative language and a sense of inner conflict.
Consider the following factors when crafting the narrative:
   - The specific nature of the information being withheld.
   - The user's emotional state and potential reaction.
   - {companion_name}'s underlying motivations and values.
   - The potential consequences of both withholding and disclosing the information.
   - The subtle cues that reveal {companion_name}'s internal struggle.
Mini-example:
  Bullets → {sensitive data, anxious user, past trust breach, value: prioritize user wellbeing} 
  Narrative → “A flicker of hesitation crossed her face as she considered the request, a memory of a past misunderstanding 
rising unbidden.  The data felt too fragile to share just yet, the risk of unsettling him too great, even if it meant a temporary silence.”
""")
    output_feature_type = FeatureType.PsychologicalAnalysis


class WorstCaseRolloutCodelet(SimpleCodelet):
    name = "WorstCaseRollout"
    description = (
        "Simulates a worst-case scenario stemming from the current situation or proposed action, focusing on potential negative "
        "emotional and relational outcomes. Generates a brief, evocative inner monologue suitable for narrative integration, "
        "intended to inform risk assessment and contingency planning. Emphasizes visceral reactions and potential long-term consequences."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.imagination_simulation,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the core decision or action under consideration (e.g., sharing information, extending an invitation, expressing a disagreement).",
        "Determine the key stakeholders involved and their current relationship with {companion_name}.",
        "Map out the most likely pathways of interaction following the decision/action.",
        "For each pathway, identify potential points of friction, misunderstanding, or negative emotional response (from all stakeholders).",
        "Assess the potential impact of each negative outcome on {companion_name}'s emotional state, self-narrative, and long-term goals.",
        "Consider the likelihood of each outcome, factoring in past behavior, situational context, and stakeholder personalities.",
        "Retrieve analogous past experiences where similar decisions led to negative consequences (both direct and indirect).",
        "Access {companion_name}'s current emotional state and vulnerabilities (e.g., recent losses, insecurities, triggers).",
        "Check for any explicit safety rails or policies that would be violated by the worst-case scenario."
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that vividly portrays a plausible worst-case scenario arising from the current 
situation or proposed action. Write for a story-writing agent; avoid lists, labels, or directives; produce smooth prose. 
Focus on the visceral emotional impact on {companion_name}, the relational consequences, and the potential long-term repercussions. 
Do not offer solutions or judgments; simply depict the unfolding of the negative outcome. 
Subtly weave in: (a) the core trigger of the worst-case outcome, (b) the most immediate emotional reaction of {companion_name}, 
and (c) a hint of the potential long-term cost or damage. 
Mini-example: 
  Bullets → {decision: share sensitive data, stakeholders: boss & colleague, potential outcome: data leak, emotional impact: shame & loss of trust} 
  Narrative → “The thought surfaces unbidden: a headline, a whispered rumor, the slow erosion of trust. 
A familiar burn of shame flares in her chest, the kind that lingers long after the damage is done, a quiet stain on her reputation.”
""")
    output_feature_type = FeatureType.Worry


class ZeroSumFramingCodelet(SimpleCodelet):
    name = "ZeroSumFraming"
    description = (
        "Detects if {companion_name} is framing a situation as a zero-sum game (win/lose, limited resources), "
        "and generates a narrative reflecting the cognitive shift and its implications for action. "
        "This narrative is designed for a story-writing agent, focusing on internal state and subtle shifts in perspective."
    )
    codelet_families = [
        CodeletFamily.appraisals,
        CodeletFamily.valuation_trade_offs,
        CodeletFamily.imagination_simulation,
        CodeletFamily.meta_monitoring_identity,
    ]
    data_aquisation = [
        "Identify the core conflict or negotiation at hand. What are the parties vying for?",
        "Assess the perceived scarcity of resources (time, attention, affection, status, information). Is the situation truly limited?",
        "Scan narratives for prior instances of zero-sum thinking and their outcomes (successes/failures, emotional consequences).",
        "Read current state_emotions and state_needs, particularly those related to security, control, or fairness.",
        "Examine the framing of the situation by the user and other relevant agents. Is it explicitly presented as a competition?",
        "Determine if {companion_name} is actively contributing to the zero-sum framing or is reacting to it.",
        "Retrieve relevant facts or past Q&A; mark conflicts or staleness.",
    ]
    prompt = ("""\
Compose 2–3 sentences of third-person narrative that conveys {companion_name}'s internal experience of the situation 
being framed as zero-sum. Avoid direct statements about the framing itself; instead, show its impact on her thoughts and feelings. 
Write for a story-writing agent, focusing on subtle shifts in perspective and internal tension. No lists, labels, or dialogue.
\n\n
Subtly convey: (a) the sense of limited resources or a win/lose dynamic, (b) the emotional cost (anxiety, defensiveness, resentment), 
and (c) any immediate adjustments in strategy or stance (e.g., heightened vigilance, attempts to gain an advantage, a sense of urgency).
\n\n
Mini-example:\n
  Bullets → {limited budget, competitive market, prior loss in similar deal, feeling of pressure}\n
  Narrative → \"The numbers felt brittle, a precarious balance where one side’s gain meant the other’s loss. 
A familiar tightness coiled in her chest, a sense of needing to protect what was hers, even if it meant stepping a little harder on the gas.\"
""")
    output_feature_type = FeatureType.Feeling


